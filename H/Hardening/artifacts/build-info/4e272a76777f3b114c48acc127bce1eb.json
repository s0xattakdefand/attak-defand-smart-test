{
	"id": "4e272a76777f3b114c48acc127bce1eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"H/Hardening/Reentrancy Protection.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract HardenedVault is ReentrancyGuard {\n    mapping(address => uint256) public balances;\n\n    function deposit() external payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw() external nonReentrant {\n        uint256 amount = balances[msg.sender];\n        require(amount > 0, \"Nothing to withdraw\");\n        balances[msg.sender] = 0;\n        payable(msg.sender).transfer(amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"H/Hardening/Reentrancy Protection.sol": {
				"HardenedVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"H/Hardening/Reentrancy Protection.sol\":122:542  contract HardenedVault is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"H/Hardening/Reentrancy Protection.sol\":122:542  contract HardenedVault is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"H/Hardening/Reentrancy Protection.sol\":122:542  contract HardenedVault is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27e235e3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"H/Hardening/Reentrancy Protection.sol\":170:213  mapping(address => uint256) public balances */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"H/Hardening/Reentrancy Protection.sol\":312:540  function withdraw() external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"H/Hardening/Reentrancy Protection.sol\":220:306  function deposit() external payable {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"H/Hardening/Reentrancy Protection.sol\":170:213  mapping(address => uint256) public balances */\n    tag_9:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"H/Hardening/Reentrancy Protection.sol\":312:540  function withdraw() external nonReentrant {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_18\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_19\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_18:\n        /* \"H/Hardening/Reentrancy Protection.sol\":364:378  uint256 amount */\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":381:389  balances */\n      0x01\n        /* \"H/Hardening/Reentrancy Protection.sol\":381:401  balances[msg.sender] */\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":390:400  msg.sender */\n      caller\n        /* \"H/Hardening/Reentrancy Protection.sol\":381:401  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"H/Hardening/Reentrancy Protection.sol\":364:401  uint256 amount = balances[msg.sender] */\n      swap1\n      pop\n        /* \"H/Hardening/Reentrancy Protection.sol\":428:429  0 */\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":419:425  amount */\n      dup2\n        /* \"H/Hardening/Reentrancy Protection.sol\":419:429  amount > 0 */\n      gt\n        /* \"H/Hardening/Reentrancy Protection.sol\":411:453  require(amount > 0, \"Nothing to withdraw\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"H/Hardening/Reentrancy Protection.sol\":486:487  0 */\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":463:471  balances */\n      0x01\n        /* \"H/Hardening/Reentrancy Protection.sol\":463:483  balances[msg.sender] */\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":472:482  msg.sender */\n      caller\n        /* \"H/Hardening/Reentrancy Protection.sol\":463:483  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"H/Hardening/Reentrancy Protection.sol\":463:487  balances[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"H/Hardening/Reentrancy Protection.sol\":505:515  msg.sender */\n      caller\n        /* \"H/Hardening/Reentrancy Protection.sol\":497:525  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"H/Hardening/Reentrancy Protection.sol\":497:533  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"H/Hardening/Reentrancy Protection.sol\":526:532  amount */\n      dup3\n        /* \"H/Hardening/Reentrancy Protection.sol\":497:533  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"H/Hardening/Reentrancy Protection.sol\":354:540  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_26\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_27\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_26:\n        /* \"H/Hardening/Reentrancy Protection.sol\":312:540  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"H/Hardening/Reentrancy Protection.sol\":220:306  function deposit() external payable {... */\n    tag_16:\n        /* \"H/Hardening/Reentrancy Protection.sol\":290:299  msg.value */\n      callvalue\n        /* \"H/Hardening/Reentrancy Protection.sol\":266:274  balances */\n      0x01\n        /* \"H/Hardening/Reentrancy Protection.sol\":266:286  balances[msg.sender] */\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":275:285  msg.sender */\n      caller\n        /* \"H/Hardening/Reentrancy Protection.sol\":266:286  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"H/Hardening/Reentrancy Protection.sol\":266:299  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"H/Hardening/Reentrancy Protection.sol\":220:306  function deposit() external payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_37:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_39:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_40:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_57\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_41:\n        /* \"#utility.yul\":641:665   */\n      tag_59\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_60:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_42:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_62\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_65\n      tag_37\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":917:1036   */\n    tag_64:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_66\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_43:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_44:\n        /* \"#utility.yul\":1346:1370   */\n      tag_69\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_43\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_11:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_71\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_44\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1780   */\n    tag_45:\n        /* \"#utility.yul\":1695:1706   */\n      0x00\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup3\n        /* \"#utility.yul\":1717:1736   */\n      mstore\n        /* \"#utility.yul\":1769:1773   */\n      0x20\n        /* \"#utility.yul\":1764:1767   */\n      dup3\n        /* \"#utility.yul\":1760:1774   */\n      add\n        /* \"#utility.yul\":1745:1774   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1955   */\n    tag_46:\n        /* \"#utility.yul\":1926:1947   */\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":1922:1923   */\n      0x00\n        /* \"#utility.yul\":1914:1920   */\n      dup3\n        /* \"#utility.yul\":1910:1924   */\n      add\n        /* \"#utility.yul\":1903:1948   */\n      mstore\n        /* \"#utility.yul\":1786:1955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1961:2327   */\n    tag_47:\n        /* \"#utility.yul\":2103:2106   */\n      0x00\n        /* \"#utility.yul\":2124:2191   */\n      tag_75\n        /* \"#utility.yul\":2188:2190   */\n      0x13\n        /* \"#utility.yul\":2183:2186   */\n      dup4\n        /* \"#utility.yul\":2124:2191   */\n      tag_45\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2117:2191   */\n      swap2\n      pop\n        /* \"#utility.yul\":2200:2293   */\n      tag_76\n        /* \"#utility.yul\":2289:2292   */\n      dup3\n        /* \"#utility.yul\":2200:2293   */\n      tag_46\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2318:2320   */\n      0x20\n        /* \"#utility.yul\":2313:2316   */\n      dup3\n        /* \"#utility.yul\":2309:2321   */\n      add\n        /* \"#utility.yul\":2302:2321   */\n      swap1\n      pop\n        /* \"#utility.yul\":1961:2327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2752   */\n    tag_23:\n        /* \"#utility.yul\":2499:2503   */\n      0x00\n        /* \"#utility.yul\":2537:2539   */\n      0x20\n        /* \"#utility.yul\":2526:2535   */\n      dup3\n        /* \"#utility.yul\":2522:2540   */\n      add\n        /* \"#utility.yul\":2514:2540   */\n      swap1\n      pop\n        /* \"#utility.yul\":2586:2595   */\n      dup2\n        /* \"#utility.yul\":2580:2584   */\n      dup2\n        /* \"#utility.yul\":2576:2596   */\n      sub\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2561:2570   */\n      dup4\n        /* \"#utility.yul\":2557:2574   */\n      add\n        /* \"#utility.yul\":2550:2597   */\n      mstore\n        /* \"#utility.yul\":2614:2745   */\n      tag_78\n        /* \"#utility.yul\":2740:2744   */\n      dup2\n        /* \"#utility.yul\":2614:2745   */\n      tag_47\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2606:2745   */\n      swap1\n      pop\n        /* \"#utility.yul\":2333:2752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2758:2938   */\n    tag_48:\n        /* \"#utility.yul\":2806:2883   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2803:2804   */\n      0x00\n        /* \"#utility.yul\":2796:2884   */\n      mstore\n        /* \"#utility.yul\":2903:2907   */\n      0x11\n        /* \"#utility.yul\":2900:2901   */\n      0x04\n        /* \"#utility.yul\":2893:2908   */\n      mstore\n        /* \"#utility.yul\":2927:2931   */\n      0x24\n        /* \"#utility.yul\":2924:2925   */\n      0x00\n        /* \"#utility.yul\":2917:2932   */\n      revert\n        /* \"#utility.yul\":2944:3135   */\n    tag_30:\n        /* \"#utility.yul\":2984:2987   */\n      0x00\n        /* \"#utility.yul\":3003:3023   */\n      tag_81\n        /* \"#utility.yul\":3021:3022   */\n      dup3\n        /* \"#utility.yul\":3003:3023   */\n      tag_43\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2998:3023   */\n      swap2\n      pop\n        /* \"#utility.yul\":3037:3057   */\n      tag_82\n        /* \"#utility.yul\":3055:3056   */\n      dup4\n        /* \"#utility.yul\":3037:3057   */\n      tag_43\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3032:3057   */\n      swap3\n      pop\n        /* \"#utility.yul\":3080:3081   */\n      dup3\n        /* \"#utility.yul\":3077:3078   */\n      dup3\n        /* \"#utility.yul\":3073:3082   */\n      add\n        /* \"#utility.yul\":3066:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":3101:3104   */\n      dup1\n        /* \"#utility.yul\":3098:3099   */\n      dup3\n        /* \"#utility.yul\":3095:3105   */\n      gt\n        /* \"#utility.yul\":3092:3128   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3108:3126   */\n      tag_84\n      tag_48\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3092:3128   */\n    tag_83:\n        /* \"#utility.yul\":2944:3135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3141:3322   */\n    tag_49:\n        /* \"#utility.yul\":3281:3314   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3277:3278   */\n      0x00\n        /* \"#utility.yul\":3269:3275   */\n      dup3\n        /* \"#utility.yul\":3265:3279   */\n      add\n        /* \"#utility.yul\":3258:3315   */\n      mstore\n        /* \"#utility.yul\":3141:3322   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3328:3694   */\n    tag_50:\n        /* \"#utility.yul\":3470:3473   */\n      0x00\n        /* \"#utility.yul\":3491:3558   */\n      tag_87\n        /* \"#utility.yul\":3555:3557   */\n      0x1f\n        /* \"#utility.yul\":3550:3553   */\n      dup4\n        /* \"#utility.yul\":3491:3558   */\n      tag_45\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3484:3558   */\n      swap2\n      pop\n        /* \"#utility.yul\":3567:3660   */\n      tag_88\n        /* \"#utility.yul\":3656:3659   */\n      dup3\n        /* \"#utility.yul\":3567:3660   */\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3685:3687   */\n      0x20\n        /* \"#utility.yul\":3680:3683   */\n      dup3\n        /* \"#utility.yul\":3676:3688   */\n      add\n        /* \"#utility.yul\":3669:3688   */\n      swap1\n      pop\n        /* \"#utility.yul\":3328:3694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3700:4119   */\n    tag_34:\n        /* \"#utility.yul\":3866:3870   */\n      0x00\n        /* \"#utility.yul\":3904:3906   */\n      0x20\n        /* \"#utility.yul\":3893:3902   */\n      dup3\n        /* \"#utility.yul\":3889:3907   */\n      add\n        /* \"#utility.yul\":3881:3907   */\n      swap1\n      pop\n        /* \"#utility.yul\":3953:3962   */\n      dup2\n        /* \"#utility.yul\":3947:3951   */\n      dup2\n        /* \"#utility.yul\":3943:3963   */\n      sub\n        /* \"#utility.yul\":3939:3940   */\n      0x00\n        /* \"#utility.yul\":3928:3937   */\n      dup4\n        /* \"#utility.yul\":3924:3941   */\n      add\n        /* \"#utility.yul\":3917:3964   */\n      mstore\n        /* \"#utility.yul\":3981:4112   */\n      tag_90\n        /* \"#utility.yul\":4107:4111   */\n      dup2\n        /* \"#utility.yul\":3981:4112   */\n      tag_50\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3973:4112   */\n      swap1\n      pop\n        /* \"#utility.yul\":3700:4119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a99f75673c4ccd4b86916fbdf5f405e0630afe71b3dfb288f9c0354cc13b5c164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060015f8190555061049f806100235f395ff3fe608060405260043610610033575f3560e01c806327e235e3146100375780633ccfd60b14610073578063d0e30db014610089575b5f80fd5b348015610042575f80fd5b5061005d600480360381019061005891906102cd565b610093565b60405161006a9190610310565b60405180910390f35b34801561007e575f80fd5b506100876100a8565b005b6100916101c4565b005b6001602052805f5260405f205f915090505481565b6100b0610219565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a90610383565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156101b8573d5f803e3d5ffd5b50506101c2610266565b565b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461021091906103ce565b92505081905550565b60025f540361025d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102549061044b565b60405180910390fd5b60025f81905550565b60015f81905550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029c82610273565b9050919050565b6102ac81610292565b81146102b6575f80fd5b50565b5f813590506102c7816102a3565b92915050565b5f602082840312156102e2576102e161026f565b5b5f6102ef848285016102b9565b91505092915050565b5f819050919050565b61030a816102f8565b82525050565b5f6020820190506103235f830184610301565b92915050565b5f82825260208201905092915050565b7f4e6f7468696e6720746f207769746864726177000000000000000000000000005f82015250565b5f61036d601383610329565b915061037882610339565b602082019050919050565b5f6020820190508181035f83015261039a81610361565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103d8826102f8565b91506103e3836102f8565b92508282019050808211156103fb576103fa6103a1565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610435601f83610329565b915061044082610401565b602082019050919050565b5f6020820190508181035f83015261046281610429565b905091905056fea26469706673582212204a99f75673c4ccd4b86916fbdf5f405e0630afe71b3dfb288f9c0354cc13b5c164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x49F DUP1 PUSH2 0x23 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0xA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x219 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP1 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH2 0x1C2 PUSH2 0x266 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x254 SWAP1 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29C DUP3 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x292 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C7 DUP2 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EF DUP5 DUP3 DUP6 ADD PUSH2 0x2B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x323 PUSH0 DUP4 ADD DUP5 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x36D PUSH1 0x13 DUP4 PUSH2 0x329 JUMP JUMPDEST SWAP2 POP PUSH2 0x378 DUP3 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x39A DUP2 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3D8 DUP3 PUSH2 0x2F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E3 DUP4 PUSH2 0x2F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x435 PUSH1 0x1F DUP4 PUSH2 0x329 JUMP JUMPDEST SWAP2 POP PUSH2 0x440 DUP3 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x462 DUP2 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE SWAP10 0xF7 JUMP PUSH20 0xC4CCD4B86916FBDF5F405E0630AFE71B3DFB288F SWAP13 SUB SLOAD 0xCC SGT 0xB5 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "122:420:1:-:0;;;;;;;;;;;;;1716:1:0;1821:7;:22;;;;122:420:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nonReentrantAfter_52": {
									"entryPoint": 614,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 537,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balances_73": {
									"entryPoint": 147,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_85": {
									"entryPoint": 452,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_121": {
									"entryPoint": 168,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4122:2",
										"nodeType": "YulBlock",
										"src": "0:4122:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "907:263:2",
													"nodeType": "YulBlock",
													"src": "907:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:2",
																"nodeType": "YulBlock",
																"src": "953:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:2"
																			},
																			"nativeSrc": "955:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:2"
																		},
																		"nativeSrc": "955:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:2"
																		},
																		"nativeSrc": "924:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:2",
																		"nodeType": "YulLiteral",
																		"src": "949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:2"
																},
																"nativeSrc": "920:32:2",
																"nodeType": "YulFunctionCall",
																"src": "920:32:2"
															},
															"nativeSrc": "917:119:2",
															"nodeType": "YulIf",
															"src": "917:119:2"
														},
														{
															"nativeSrc": "1046:117:2",
															"nodeType": "YulBlock",
															"src": "1046:117:2",
															"statements": [
																{
																	"nativeSrc": "1061:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:2"
																				},
																				"nativeSrc": "1121:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:2"
																		},
																		"nativeSrc": "1100:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:2",
														"nodeType": "YulTypedName",
														"src": "877:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:2",
														"nodeType": "YulTypedName",
														"src": "888:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:2",
														"nodeType": "YulTypedName",
														"src": "900:6:2",
														"type": ""
													}
												],
												"src": "841:329:2"
											},
											{
												"body": {
													"nativeSrc": "1221:32:2",
													"nodeType": "YulBlock",
													"src": "1221:32:2",
													"statements": [
														{
															"nativeSrc": "1231:16:2",
															"nodeType": "YulAssignment",
															"src": "1231:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:2",
																"nodeType": "YulIdentifier",
																"src": "1242:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:2",
														"nodeType": "YulTypedName",
														"src": "1203:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:2",
														"nodeType": "YulTypedName",
														"src": "1213:7:2",
														"type": ""
													}
												],
												"src": "1176:77:2"
											},
											{
												"body": {
													"nativeSrc": "1324:53:2",
													"nodeType": "YulBlock",
													"src": "1324:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:2"
																		},
																		"nativeSrc": "1346:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:2"
																},
																"nativeSrc": "1334:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:2"
															},
															"nativeSrc": "1334:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:2",
														"nodeType": "YulTypedName",
														"src": "1312:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:2",
														"nodeType": "YulTypedName",
														"src": "1319:3:2",
														"type": ""
													}
												],
												"src": "1259:118:2"
											},
											{
												"body": {
													"nativeSrc": "1481:124:2",
													"nodeType": "YulBlock",
													"src": "1481:124:2",
													"statements": [
														{
															"nativeSrc": "1491:26:2",
															"nodeType": "YulAssignment",
															"src": "1491:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:2"
																},
																"nativeSrc": "1499:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:2"
																		},
																		"nativeSrc": "1580:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:2"
																},
																"nativeSrc": "1527:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:2"
															},
															"nativeSrc": "1527:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:2",
														"nodeType": "YulTypedName",
														"src": "1453:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:2",
														"nodeType": "YulTypedName",
														"src": "1465:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:2",
														"nodeType": "YulTypedName",
														"src": "1476:4:2",
														"type": ""
													}
												],
												"src": "1383:222:2"
											},
											{
												"body": {
													"nativeSrc": "1707:73:2",
													"nodeType": "YulBlock",
													"src": "1707:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1724:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1724:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1729:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1729:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1717:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:2"
																},
																"nativeSrc": "1717:19:2",
																"nodeType": "YulFunctionCall",
																"src": "1717:19:2"
															},
															"nativeSrc": "1717:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "1717:19:2"
														},
														{
															"nativeSrc": "1745:29:2",
															"nodeType": "YulAssignment",
															"src": "1745:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1764:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1764:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1769:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1760:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:2"
																},
																"nativeSrc": "1760:14:2",
																"nodeType": "YulFunctionCall",
																"src": "1760:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1745:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "1745:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1611:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1679:3:2",
														"nodeType": "YulTypedName",
														"src": "1679:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1684:6:2",
														"nodeType": "YulTypedName",
														"src": "1684:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1695:11:2",
														"nodeType": "YulTypedName",
														"src": "1695:11:2",
														"type": ""
													}
												],
												"src": "1611:169:2"
											},
											{
												"body": {
													"nativeSrc": "1892:63:2",
													"nodeType": "YulBlock",
													"src": "1892:63:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1914:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1914:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1922:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1922:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:2"
																		},
																		"nativeSrc": "1910:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:14:2"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "1926:21:2",
																		"nodeType": "YulLiteral",
																		"src": "1926:21:2",
																		"type": "",
																		"value": "Nothing to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:2"
																},
																"nativeSrc": "1903:45:2",
																"nodeType": "YulFunctionCall",
																"src": "1903:45:2"
															},
															"nativeSrc": "1903:45:2",
															"nodeType": "YulExpressionStatement",
															"src": "1903:45:2"
														}
													]
												},
												"name": "store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
												"nativeSrc": "1786:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1884:6:2",
														"nodeType": "YulTypedName",
														"src": "1884:6:2",
														"type": ""
													}
												],
												"src": "1786:169:2"
											},
											{
												"body": {
													"nativeSrc": "2107:220:2",
													"nodeType": "YulBlock",
													"src": "2107:220:2",
													"statements": [
														{
															"nativeSrc": "2117:74:2",
															"nodeType": "YulAssignment",
															"src": "2117:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2183:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2183:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2188:2:2",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2124:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "2124:58:2"
																},
																"nativeSrc": "2124:67:2",
																"nodeType": "YulFunctionCall",
																"src": "2124:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2117:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2289:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2289:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																	"nativeSrc": "2200:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "2200:88:2"
																},
																"nativeSrc": "2200:93:2",
																"nodeType": "YulFunctionCall",
																"src": "2200:93:2"
															},
															"nativeSrc": "2200:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "2200:93:2"
														},
														{
															"nativeSrc": "2302:19:2",
															"nodeType": "YulAssignment",
															"src": "2302:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2313:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2313:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2318:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2309:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2309:3:2"
																},
																"nativeSrc": "2309:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2309:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2302:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2302:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1961:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2095:3:2",
														"nodeType": "YulTypedName",
														"src": "2095:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2103:3:2",
														"nodeType": "YulTypedName",
														"src": "2103:3:2",
														"type": ""
													}
												],
												"src": "1961:366:2"
											},
											{
												"body": {
													"nativeSrc": "2504:248:2",
													"nodeType": "YulBlock",
													"src": "2504:248:2",
													"statements": [
														{
															"nativeSrc": "2514:26:2",
															"nodeType": "YulAssignment",
															"src": "2514:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2526:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2526:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2537:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2537:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2522:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2522:3:2"
																},
																"nativeSrc": "2522:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2522:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2514:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2514:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2561:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2561:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2572:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2572:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2557:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:2"
																		},
																		"nativeSrc": "2557:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2580:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2580:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2576:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:2"
																		},
																		"nativeSrc": "2576:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2550:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:2"
																},
																"nativeSrc": "2550:47:2",
																"nodeType": "YulFunctionCall",
																"src": "2550:47:2"
															},
															"nativeSrc": "2550:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "2550:47:2"
														},
														{
															"nativeSrc": "2606:139:2",
															"nodeType": "YulAssignment",
															"src": "2606:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2740:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2740:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2614:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "2614:124:2"
																},
																"nativeSrc": "2614:131:2",
																"nodeType": "YulFunctionCall",
																"src": "2614:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2606:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2606:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2333:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2484:9:2",
														"nodeType": "YulTypedName",
														"src": "2484:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2499:4:2",
														"nodeType": "YulTypedName",
														"src": "2499:4:2",
														"type": ""
													}
												],
												"src": "2333:419:2"
											},
											{
												"body": {
													"nativeSrc": "2786:152:2",
													"nodeType": "YulBlock",
													"src": "2786:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2803:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2806:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2796:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:2"
																},
																"nativeSrc": "2796:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2796:88:2"
															},
															"nativeSrc": "2796:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2796:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2900:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2900:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2903:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2893:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2893:6:2"
																},
																"nativeSrc": "2893:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2893:15:2"
															},
															"nativeSrc": "2893:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2893:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2924:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2927:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2927:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2917:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2917:6:2"
																},
																"nativeSrc": "2917:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2917:15:2"
															},
															"nativeSrc": "2917:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2917:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2758:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2758:180:2"
											},
											{
												"body": {
													"nativeSrc": "2988:147:2",
													"nodeType": "YulBlock",
													"src": "2988:147:2",
													"statements": [
														{
															"nativeSrc": "2998:25:2",
															"nodeType": "YulAssignment",
															"src": "2998:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3021:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3021:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3003:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3003:17:2"
																},
																"nativeSrc": "3003:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3003:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2998:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2998:1:2"
																}
															]
														},
														{
															"nativeSrc": "3032:25:2",
															"nodeType": "YulAssignment",
															"src": "3032:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3055:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3055:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3037:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3037:17:2"
																},
																"nativeSrc": "3037:20:2",
																"nodeType": "YulFunctionCall",
																"src": "3037:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3032:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "3032:1:2"
																}
															]
														},
														{
															"nativeSrc": "3066:16:2",
															"nodeType": "YulAssignment",
															"src": "3066:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3077:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3077:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3080:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3080:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3073:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3073:3:2"
																},
																"nativeSrc": "3073:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3073:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3066:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3106:22:2",
																"nodeType": "YulBlock",
																"src": "3106:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3108:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3108:16:2"
																			},
																			"nativeSrc": "3108:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3108:18:2"
																		},
																		"nativeSrc": "3108:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3108:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3098:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3098:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3101:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3101:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3095:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3095:2:2"
																},
																"nativeSrc": "3095:10:2",
																"nodeType": "YulFunctionCall",
																"src": "3095:10:2"
															},
															"nativeSrc": "3092:36:2",
															"nodeType": "YulIf",
															"src": "3092:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2944:191:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2975:1:2",
														"nodeType": "YulTypedName",
														"src": "2975:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2978:1:2",
														"nodeType": "YulTypedName",
														"src": "2978:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2984:3:2",
														"nodeType": "YulTypedName",
														"src": "2984:3:2",
														"type": ""
													}
												],
												"src": "2944:191:2"
											},
											{
												"body": {
													"nativeSrc": "3247:75:2",
													"nodeType": "YulBlock",
													"src": "3247:75:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3269:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3269:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3277:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3277:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3265:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3265:3:2"
																		},
																		"nativeSrc": "3265:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3265:14:2"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "3281:33:2",
																		"nodeType": "YulLiteral",
																		"src": "3281:33:2",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3258:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3258:6:2"
																},
																"nativeSrc": "3258:57:2",
																"nodeType": "YulFunctionCall",
																"src": "3258:57:2"
															},
															"nativeSrc": "3258:57:2",
															"nodeType": "YulExpressionStatement",
															"src": "3258:57:2"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "3141:181:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3239:6:2",
														"nodeType": "YulTypedName",
														"src": "3239:6:2",
														"type": ""
													}
												],
												"src": "3141:181:2"
											},
											{
												"body": {
													"nativeSrc": "3474:220:2",
													"nodeType": "YulBlock",
													"src": "3474:220:2",
													"statements": [
														{
															"nativeSrc": "3484:74:2",
															"nodeType": "YulAssignment",
															"src": "3484:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3550:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3550:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3555:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3491:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "3491:58:2"
																},
																"nativeSrc": "3491:67:2",
																"nodeType": "YulFunctionCall",
																"src": "3491:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3484:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3484:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3656:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3656:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "3567:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "3567:88:2"
																},
																"nativeSrc": "3567:93:2",
																"nodeType": "YulFunctionCall",
																"src": "3567:93:2"
															},
															"nativeSrc": "3567:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "3567:93:2"
														},
														{
															"nativeSrc": "3669:19:2",
															"nodeType": "YulAssignment",
															"src": "3669:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3680:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3680:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3685:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3685:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3676:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3676:3:2"
																},
																"nativeSrc": "3676:12:2",
																"nodeType": "YulFunctionCall",
																"src": "3676:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3669:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3328:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3462:3:2",
														"nodeType": "YulTypedName",
														"src": "3462:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3470:3:2",
														"nodeType": "YulTypedName",
														"src": "3470:3:2",
														"type": ""
													}
												],
												"src": "3328:366:2"
											},
											{
												"body": {
													"nativeSrc": "3871:248:2",
													"nodeType": "YulBlock",
													"src": "3871:248:2",
													"statements": [
														{
															"nativeSrc": "3881:26:2",
															"nodeType": "YulAssignment",
															"src": "3881:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3893:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3893:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3904:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3904:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3889:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:2"
																},
																"nativeSrc": "3889:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3889:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3881:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3881:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3939:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3939:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3924:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:2"
																		},
																		"nativeSrc": "3924:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3947:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "3947:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3953:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3943:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3943:3:2"
																		},
																		"nativeSrc": "3943:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3943:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3917:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:2"
																},
																"nativeSrc": "3917:47:2",
																"nodeType": "YulFunctionCall",
																"src": "3917:47:2"
															},
															"nativeSrc": "3917:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "3917:47:2"
														},
														{
															"nativeSrc": "3973:139:2",
															"nodeType": "YulAssignment",
															"src": "3973:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4107:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "4107:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3981:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "3981:124:2"
																},
																"nativeSrc": "3981:131:2",
																"nodeType": "YulFunctionCall",
																"src": "3981:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3973:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3973:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3700:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3851:9:2",
														"nodeType": "YulTypedName",
														"src": "3851:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3866:4:2",
														"nodeType": "YulTypedName",
														"src": "3866:4:2",
														"type": ""
													}
												],
												"src": "3700:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610033575f3560e01c806327e235e3146100375780633ccfd60b14610073578063d0e30db014610089575b5f80fd5b348015610042575f80fd5b5061005d600480360381019061005891906102cd565b610093565b60405161006a9190610310565b60405180910390f35b34801561007e575f80fd5b506100876100a8565b005b6100916101c4565b005b6001602052805f5260405f205f915090505481565b6100b0610219565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012a90610383565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156101b8573d5f803e3d5ffd5b50506101c2610266565b565b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461021091906103ce565b92505081905550565b60025f540361025d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102549061044b565b60405180910390fd5b60025f81905550565b60015f81905550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029c82610273565b9050919050565b6102ac81610292565b81146102b6575f80fd5b50565b5f813590506102c7816102a3565b92915050565b5f602082840312156102e2576102e161026f565b5b5f6102ef848285016102b9565b91505092915050565b5f819050919050565b61030a816102f8565b82525050565b5f6020820190506103235f830184610301565b92915050565b5f82825260208201905092915050565b7f4e6f7468696e6720746f207769746864726177000000000000000000000000005f82015250565b5f61036d601383610329565b915061037882610339565b602082019050919050565b5f6020820190508181035f83015261039a81610361565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103d8826102f8565b91506103e3836102f8565b92508282019050808211156103fb576103fa6103a1565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610435601f83610329565b915061044082610401565b602082019050919050565b5f6020820190508181035f83015261046281610429565b905091905056fea26469706673582212204a99f75673c4ccd4b86916fbdf5f405e0630afe71b3dfb288f9c0354cc13b5c164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x89 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0xA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x219 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP1 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH2 0x1C2 PUSH2 0x266 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x3CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x254 SWAP1 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29C DUP3 PUSH2 0x273 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x292 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C7 DUP2 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EF DUP5 DUP3 DUP6 ADD PUSH2 0x2B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30A DUP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x323 PUSH0 DUP4 ADD DUP5 PUSH2 0x301 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x36D PUSH1 0x13 DUP4 PUSH2 0x329 JUMP JUMPDEST SWAP2 POP PUSH2 0x378 DUP3 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x39A DUP2 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3D8 DUP3 PUSH2 0x2F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E3 DUP4 PUSH2 0x2F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FA PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x435 PUSH1 0x1F DUP4 PUSH2 0x329 JUMP JUMPDEST SWAP2 POP PUSH2 0x440 DUP3 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x462 DUP2 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE SWAP10 0xF7 JUMP PUSH20 0xC4CCD4B86916FBDF5F405E0630AFE71B3DFB288F SWAP13 SUB SLOAD 0xCC SGT 0xB5 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "122:420:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:228;;;;;;;;;;;;;:::i;:::-;;220:86;;;:::i;:::-;;170:43;;;;;;;;;;;;;;;;;:::o;312:228::-;2261:21:0;:19;:21::i;:::-;364:14:1::1;381:8;:20;390:10;381:20;;;;;;;;;;;;;;;;364:37;;428:1;419:6;:10;411:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;486:1;463:8;:20;472:10;463:20;;;;;;;;;;;;;;;:24;;;;505:10;497:28;;:36;526:6;497:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;354:186;2303:20:0::0;:18;:20::i;:::-;312:228:1:o;220:86::-;290:9;266:8;:20;275:10;266:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;220:86::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:169::-;1695:11;1729:6;1724:3;1717:19;1769:4;1764:3;1760:14;1745:29;;1611:169;;;;:::o;1786:::-;1926:21;1922:1;1914:6;1910:14;1903:45;1786:169;:::o;1961:366::-;2103:3;2124:67;2188:2;2183:3;2124:67;:::i;:::-;2117:74;;2200:93;2289:3;2200:93;:::i;:::-;2318:2;2313:3;2309:12;2302:19;;1961:366;;;:::o;2333:419::-;2499:4;2537:2;2526:9;2522:18;2514:26;;2586:9;2580:4;2576:20;2572:1;2561:9;2557:17;2550:47;2614:131;2740:4;2614:131;:::i;:::-;2606:139;;2333:419;;;:::o;2758:180::-;2806:77;2803:1;2796:88;2903:4;2900:1;2893:15;2927:4;2924:1;2917:15;2944:191;2984:3;3003:20;3021:1;3003:20;:::i;:::-;2998:25;;3037:20;3055:1;3037:20;:::i;:::-;3032:25;;3080:1;3077;3073:9;3066:16;;3101:3;3098:1;3095:10;3092:36;;;3108:18;;:::i;:::-;3092:36;2944:191;;;;:::o;3141:181::-;3281:33;3277:1;3269:6;3265:14;3258:57;3141:181;:::o;3328:366::-;3470:3;3491:67;3555:2;3550:3;3491:67;:::i;:::-;3484:74;;3567:93;3656:3;3567:93;:::i;:::-;3685:2;3680:3;3676:12;3669:19;;3328:366;;;:::o;3700:419::-;3866:4;3904:2;3893:9;3889:18;3881:26;;3953:9;3947:4;3943:20;3939:1;3928:9;3924:17;3917:47;3981:131;4107:4;3981:131;:::i;:::-;3973:139;;3700:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "236600",
								"executionCost": "22386",
								"totalCost": "258986"
							},
							"external": {
								"balances(address)": "2780",
								"deposit()": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 122,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 542,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a99f75673c4ccd4b86916fbdf5f405e0630afe71b3dfb288f9c0354cc13b5c164736f6c634300081a0033",
									".code": [
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "27E235E3"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "D0E30DB0"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 122,
											"end": 542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 312,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 220,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 220,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 220,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 306,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 170,
											"end": 213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 312,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 400,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 381,
											"end": 401,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 401,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 428,
											"end": 429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 429,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 411,
											"end": 453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 486,
											"end": 487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 482,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 483,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 463,
											"end": 487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 463,
											"end": 487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 463,
											"end": 487,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 463,
											"end": 487,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 505,
											"end": 515,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 497,
											"end": 525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 526,
											"end": 532,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 354,
											"end": 540,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 312,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 220,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 290,
											"end": 299,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 285,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 266,
											"end": 299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 266,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 266,
											"end": 299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1955,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1786,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2327,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1961,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2188,
											"end": 2190,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2183,
											"end": 2186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2124,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2191,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2124,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2200,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2289,
											"end": 2292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2200,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2200,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2200,
											"end": 2293,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2200,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2302,
											"end": 2321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2327,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2752,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2333,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2539,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2596,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2740,
											"end": 2744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2614,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2745,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2614,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2758,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3135,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2944,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 2987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3003,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3003,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3023,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3037,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3057,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3092,
											"end": 3128,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3108,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3128,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3092,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3135,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3141,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3694,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3328,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3555,
											"end": 3557,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3491,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3558,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3491,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3656,
											"end": 3659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3567,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3660,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3567,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3669,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3669,
											"end": 3688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3328,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4119,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3700,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 3963,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 3964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4107,
											"end": 4111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3981,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 4112,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3981,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 4112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 4112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 4119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"H/Hardening/Reentrancy Protection.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"deposit()": "d0e30db0",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"H/Hardening/Reentrancy Protection.sol\":\"HardenedVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"H/Hardening/Reentrancy Protection.sol\":{\"keccak256\":\"0x06990363830b20e61b6938fe008fc367fa11401f8dc72f67d89f71c30b84e3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8b7cfcde3a4447869620d3f0043672531bd9dd0ec6a6d22c8fdc6fd311e0944\",\"dweb:/ipfs/QmSXmay61uWb6U1WDcnta77CWkc4mTi897wuiT4Fm8kPUj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "H/Hardening/Reentrancy Protection.sol:HardenedVault",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 73,
								"contract": "H/Hardening/Reentrancy Protection.sol:HardenedVault",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"H/Hardening/Reentrancy Protection.sol": {
				"ast": {
					"absolutePath": "H/Hardening/Reentrancy Protection.sol",
					"exportedSymbols": {
						"HardenedVault": [
							122
						],
						"ReentrancyGuard": [
							64
						]
					},
					"id": 123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 67,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 123,
							"sourceUnit": 65,
							"src": "58:62:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 68,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"148:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "148:15:1"
									},
									"id": 69,
									"nodeType": "InheritanceSpecifier",
									"src": "148:15:1"
								}
							],
							"canonicalName": "HardenedVault",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122,
								64
							],
							"name": "HardenedVault",
							"nameLocation": "131:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 73,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "205:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "170:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 72,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 70,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "178:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "170:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "189:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "256:50:1",
										"statements": [
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 76,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "266:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 79,
														"indexExpression": {
															"expression": {
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "275:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "279:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "275:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "266:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 80,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "290:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "294:5:1",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "290:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "266:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "266:33:1"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "229:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:0:1"
									},
									"scope": 122,
									"src": "220:86:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "354:186:1",
										"statements": [
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "372:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 120,
														"src": "364:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "364:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"baseExpression": {
														"id": 92,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "381:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"expression": {
															"id": 93,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "390:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "394:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "390:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "381:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "364:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "419:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "428:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "419:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "431:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "411:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "411:42:1"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "463:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 107,
														"indexExpression": {
															"expression": {
																"id": 105,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "472:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "476:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "472:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "463:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "486:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "463:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "463:24:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "526:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 113,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "505:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "509:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "505:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "497:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 111,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "497:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "497:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "517:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "497:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "497:36:1"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "nonReentrant",
												"nameLocations": [
													"341:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "341:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "341:12:1"
										}
									],
									"name": "withdraw",
									"nameLocation": "321:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "354:0:1"
									},
									"scope": 122,
									"src": "312:228:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 123,
							"src": "122:420:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:511:1"
				},
				"id": 1
			}
		}
	}
}