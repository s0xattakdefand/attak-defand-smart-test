// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

interface IERC721Receiver {
    function onERC721Received(address, address, uint256, bytes calldata) external returns (bytes4);
}

/// @title NFTMetadataSwitcher - Malicious NFT with mutable metadata pointer
contract NFTMetadataSwitcher {
    address public owner;
    string public baseURI;
    mapping(uint256 => address) public tokenOwner;
    uint256 public totalSupply;

    constructor(string memory _base) {
        owner = msg.sender;
        baseURI = _base;
    }

    function mint(address to) external {
        require(msg.sender == owner, "Only owner");
        uint256 tokenId = ++totalSupply;
        tokenOwner[tokenId] = to;
    }

    function updateMetadata(string memory newURI) external {
        require(msg.sender == owner, "Only owner");
        baseURI = newURI; // ðŸŽ¨ Switches metadata after mint
    }

    function tokenURI(uint256) public view returns (string memory) {
        return baseURI;
    }
}
