// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title RansomLocker - Locks funds until attacker receives ransom
contract RansomLocker {
    address public immutable attacker;
    uint256 public immutable ransomRequired;
    bool public unlocked;

    constructor(address _attacker, uint256 _ransom) payable {
        attacker = _attacker;
        ransomRequired = _ransom;
    }

    function payRansom() external payable {
        require(!unlocked, "Already unlocked");
        require(msg.value == ransomRequired, "Incorrect ransom amount");
        payable(attacker).transfer(msg.value);
        unlocked = true;
    }

    function withdraw() external {
        require(unlocked, "Contract is locked");
        payable(msg.sender).transfer(address(this).balance);
    }

    receive() external payable {}
}
