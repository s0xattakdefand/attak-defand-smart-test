{
	"id": "78ddf968bc0d5cd855b7e9eb28fa9bb8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Malware/Arbitrum Reorg Simulation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title ArbitrumReorgSimulator - Simulates conflicting txs in challenge window\ncontract ArbitrumReorgSimulator {\n    mapping(bytes32 => bool) public sequencedTxs;\n    mapping(bytes32 => bool) public invalidated;\n\n    function submitTx(bytes32 txHash) external {\n        sequencedTxs[txHash] = true;\n    }\n\n    function challengeTx(bytes32 txHash) external {\n        require(sequencedTxs[txHash], \"TX not found\");\n        invalidated[txHash] = true;\n    }\n\n    function finalize(bytes32 txHash) external view returns (bool) {\n        // âœ… On Arbitrum, this would settle after 7 days\n        return sequencedTxs[txHash] && !invalidated[txHash];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"M/Malware/Arbitrum Reorg Simulation.sol": {
				"ArbitrumReorgSimulator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								}
							],
							"name": "challengeTx",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								}
							],
							"name": "finalize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "invalidated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "sequencedTxs",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								}
							],
							"name": "submitTx",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ArbitrumReorgSimulator - Simulates conflicting txs in challenge window",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Malware/Arbitrum Reorg Simulation.sol\":140:713  contract ArbitrumReorgSimulator {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":140:713  contract ArbitrumReorgSimulator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x340ddb12\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51ba868d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72cca3eb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x92584d80\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfdfb6743\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":278:365  function submitTx(bytes32 txHash) external {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":178:222  mapping(bytes32 => bool) public sequencedTxs */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":228:271  mapping(bytes32 => bool) public invalidated */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":521:711  function finalize(bytes32 txHash) external view returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":371:515  function challengeTx(bytes32 txHash) external {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":278:365  function submitTx(bytes32 txHash) external {... */\n    tag_11:\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":354:358  true */\n      0x01\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":331:343  sequencedTxs */\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":331:351  sequencedTxs[txHash] */\n      dup1\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":344:350  txHash */\n      dup4\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":331:351  sequencedTxs[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":331:358  sequencedTxs[txHash] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":278:365  function submitTx(bytes32 txHash) external {... */\n      pop\n      jump\t// out\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":178:222  mapping(bytes32 => bool) public sequencedTxs */\n    tag_14:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":228:271  mapping(bytes32 => bool) public invalidated */\n    tag_19:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":521:711  function finalize(bytes32 txHash) external view returns (bool) {... */\n    tag_23:\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":578:582  bool */\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":660:672  sequencedTxs */\n      dup1\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":660:680  sequencedTxs[txHash] */\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":673:679  txHash */\n      dup4\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":660:680  sequencedTxs[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":660:704  sequencedTxs[txHash] && !invalidated[txHash] */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":685:696  invalidated */\n      0x01\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":685:704  invalidated[txHash] */\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":697:703  txHash */\n      dup4\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":685:704  invalidated[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":684:704  !invalidated[txHash] */\n      iszero\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":660:704  sequencedTxs[txHash] && !invalidated[txHash] */\n    tag_30:\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":653:704  return sequencedTxs[txHash] && !invalidated[txHash] */\n      swap1\n      pop\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":521:711  function finalize(bytes32 txHash) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":371:515  function challengeTx(bytes32 txHash) external {... */\n    tag_27:\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":435:447  sequencedTxs */\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":435:455  sequencedTxs[txHash] */\n      dup1\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":448:454  txHash */\n      dup3\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":435:455  sequencedTxs[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":427:472  require(sequencedTxs[txHash], \"TX not found\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":504:508  true */\n      0x01\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":482:493  invalidated */\n      dup1\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":482:501  invalidated[txHash] */\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":494:500  txHash */\n      dup4\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":482:501  invalidated[txHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":482:508  invalidated[txHash] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"M/Malware/Arbitrum Reorg Simulation.sol\":371:515  function challengeTx(bytes32 txHash) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_36:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_38:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_39:\n        /* \"#utility.yul\":490:514   */\n      tag_52\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_38\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_53:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_40:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_55\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_58\n      tag_36\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":766:885   */\n    tag_57:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_59\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_41:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_42:\n        /* \"#utility.yul\":1202:1223   */\n      tag_62\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_16:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_64\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_42\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1621   */\n    tag_43:\n        /* \"#utility.yul\":1536:1547   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1565:1568   */\n      dup3\n        /* \"#utility.yul\":1558:1577   */\n      mstore\n        /* \"#utility.yul\":1610:1614   */\n      0x20\n        /* \"#utility.yul\":1605:1608   */\n      dup3\n        /* \"#utility.yul\":1601:1615   */\n      add\n        /* \"#utility.yul\":1586:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1789   */\n    tag_44:\n        /* \"#utility.yul\":1767:1781   */\n      0x5458206e6f7420666f756e640000000000000000000000000000000000000000\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1755:1761   */\n      dup3\n        /* \"#utility.yul\":1751:1765   */\n      add\n        /* \"#utility.yul\":1744:1782   */\n      mstore\n        /* \"#utility.yul\":1627:1789   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1795:2161   */\n    tag_45:\n        /* \"#utility.yul\":1937:1940   */\n      0x00\n        /* \"#utility.yul\":1958:2025   */\n      tag_68\n        /* \"#utility.yul\":2022:2024   */\n      0x0c\n        /* \"#utility.yul\":2017:2020   */\n      dup4\n        /* \"#utility.yul\":1958:2025   */\n      tag_43\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1951:2025   */\n      swap2\n      pop\n        /* \"#utility.yul\":2034:2127   */\n      tag_69\n        /* \"#utility.yul\":2123:2126   */\n      dup3\n        /* \"#utility.yul\":2034:2127   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2152:2154   */\n      0x20\n        /* \"#utility.yul\":2147:2150   */\n      dup3\n        /* \"#utility.yul\":2143:2155   */\n      add\n        /* \"#utility.yul\":2136:2155   */\n      swap1\n      pop\n        /* \"#utility.yul\":1795:2161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2167:2586   */\n    tag_34:\n        /* \"#utility.yul\":2333:2337   */\n      0x00\n        /* \"#utility.yul\":2371:2373   */\n      0x20\n        /* \"#utility.yul\":2360:2369   */\n      dup3\n        /* \"#utility.yul\":2356:2374   */\n      add\n        /* \"#utility.yul\":2348:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2420:2429   */\n      dup2\n        /* \"#utility.yul\":2414:2418   */\n      dup2\n        /* \"#utility.yul\":2410:2430   */\n      sub\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2384:2431   */\n      mstore\n        /* \"#utility.yul\":2448:2579   */\n      tag_71\n        /* \"#utility.yul\":2574:2578   */\n      dup2\n        /* \"#utility.yul\":2448:2579   */\n      tag_45\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2440:2579   */\n      swap1\n      pop\n        /* \"#utility.yul\":2167:2586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d92f9759e3b2cb3e1a57a34f6aa994f718853499eca39f1c8fd7a4e95441238164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061039b8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063340ddb121461005957806351ba868d1461007557806372cca3eb146100a557806392584d80146100d5578063fdfb674314610105575b5f80fd5b610073600480360381019061006e919061028f565b610121565b005b61008f600480360381019061008a919061028f565b61014c565b60405161009c91906102d4565b60405180910390f35b6100bf60048036038101906100ba919061028f565b610168565b6040516100cc91906102d4565b60405180910390f35b6100ef60048036038101906100ea919061028f565b610185565b6040516100fc91906102d4565b60405180910390f35b61011f600480360381019061011a919061028f565b6101d1565b005b60015f808381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f805f8381526020019081526020015f205f9054906101000a900460ff1680156101ca575060015f8381526020019081526020015f205f9054906101000a900460ff16155b9050919050565b5f808281526020019081526020015f205f9054906101000a900460ff1661022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610347565b60405180910390fd5b6001805f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f80fd5b5f819050919050565b61026e8161025c565b8114610278575f80fd5b50565b5f8135905061028981610265565b92915050565b5f602082840312156102a4576102a3610258565b5b5f6102b18482850161027b565b91505092915050565b5f8115159050919050565b6102ce816102ba565b82525050565b5f6020820190506102e75f8301846102c5565b92915050565b5f82825260208201905092915050565b7f5458206e6f7420666f756e6400000000000000000000000000000000000000005f82015250565b5f610331600c836102ed565b915061033c826102fd565b602082019050919050565b5f6020820190508181035f83015261035e81610325565b905091905056fea2646970667358221220d92f9759e3b2cb3e1a57a34f6aa994f718853499eca39f1c8fd7a4e95441238164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x340DDB12 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x51BA868D EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x72CCA3EB EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x92584D80 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xFDFB6743 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1CA JUMPI POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26E DUP2 PUSH2 0x25C JUMP JUMPDEST DUP2 EQ PUSH2 0x278 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x289 DUP2 PUSH2 0x265 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4 JUMPI PUSH2 0x2A3 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B1 DUP5 DUP3 DUP6 ADD PUSH2 0x27B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x2BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5458206E6F7420666F756E640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x331 PUSH1 0xC DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35E DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0x2F SWAP8 MSIZE 0xE3 0xB2 0xCB RETURNDATACOPY BYTE JUMPI LOG3 0x4F PUSH11 0xA994F718853499ECA39F1C DUP16 0xD7 LOG4 0xE9 SLOAD COINBASE 0x23 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "140:573:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@challengeTx_41": {
									"entryPoint": 465,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@finalize_58": {
									"entryPoint": 389,
									"id": 58,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@invalidated_10": {
									"entryPoint": 360,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sequencedTxs_6": {
									"entryPoint": 332,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@submitTx_22": {
									"entryPoint": 289,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2589:1",
										"nodeType": "YulBlock",
										"src": "0:2589:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1067:48:1",
													"nodeType": "YulBlock",
													"src": "1067:48:1",
													"statements": [
														{
															"nativeSrc": "1077:32:1",
															"nodeType": "YulAssignment",
															"src": "1077:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:1"
																		},
																		"nativeSrc": "1095:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nativeSrc": "1088:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:1",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:1",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1025:90:1"
											},
											{
												"body": {
													"nativeSrc": "1180:50:1",
													"nodeType": "YulBlock",
													"src": "1180:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:1"
																		},
																		"nativeSrc": "1202:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:1"
																},
																"nativeSrc": "1190:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:1"
															},
															"nativeSrc": "1190:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:1",
														"nodeType": "YulTypedName",
														"src": "1168:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:1",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1121:109:1"
											},
											{
												"body": {
													"nativeSrc": "1328:118:1",
													"nodeType": "YulBlock",
													"src": "1328:118:1",
													"statements": [
														{
															"nativeSrc": "1338:26:1",
															"nodeType": "YulAssignment",
															"src": "1338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																},
																"nativeSrc": "1346:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:1"
																		},
																		"nativeSrc": "1421:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:1"
																},
																"nativeSrc": "1374:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:1"
															},
															"nativeSrc": "1374:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:1",
														"nodeType": "YulTypedName",
														"src": "1300:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:1",
														"nodeType": "YulTypedName",
														"src": "1312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:1",
														"nodeType": "YulTypedName",
														"src": "1323:4:1",
														"type": ""
													}
												],
												"src": "1236:210:1"
											},
											{
												"body": {
													"nativeSrc": "1548:73:1",
													"nodeType": "YulBlock",
													"src": "1548:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1565:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1565:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1570:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1570:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1558:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1558:6:1"
																},
																"nativeSrc": "1558:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1558:19:1"
															},
															"nativeSrc": "1558:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1558:19:1"
														},
														{
															"nativeSrc": "1586:29:1",
															"nodeType": "YulAssignment",
															"src": "1586:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1605:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1605:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1610:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1610:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nativeSrc": "1601:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1601:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1586:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1586:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1452:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1520:3:1",
														"nodeType": "YulTypedName",
														"src": "1520:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1525:6:1",
														"nodeType": "YulTypedName",
														"src": "1525:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1536:11:1",
														"nodeType": "YulTypedName",
														"src": "1536:11:1",
														"type": ""
													}
												],
												"src": "1452:169:1"
											},
											{
												"body": {
													"nativeSrc": "1733:56:1",
													"nodeType": "YulBlock",
													"src": "1733:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1755:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1763:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1763:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1751:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1751:3:1"
																		},
																		"nativeSrc": "1751:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1751:14:1"
																	},
																	{
																		"hexValue": "5458206e6f7420666f756e64",
																		"kind": "string",
																		"nativeSrc": "1767:14:1",
																		"nodeType": "YulLiteral",
																		"src": "1767:14:1",
																		"type": "",
																		"value": "TX not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1744:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																},
																"nativeSrc": "1744:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1744:38:1"
															},
															"nativeSrc": "1744:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "1744:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721",
												"nativeSrc": "1627:162:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1725:6:1",
														"nodeType": "YulTypedName",
														"src": "1725:6:1",
														"type": ""
													}
												],
												"src": "1627:162:1"
											},
											{
												"body": {
													"nativeSrc": "1941:220:1",
													"nodeType": "YulBlock",
													"src": "1941:220:1",
													"statements": [
														{
															"nativeSrc": "1951:74:1",
															"nodeType": "YulAssignment",
															"src": "1951:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2017:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2017:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1958:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1958:58:1"
																},
																"nativeSrc": "1958:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1958:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1951:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2123:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721",
																	"nativeSrc": "2034:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2034:88:1"
																},
																"nativeSrc": "2034:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2034:93:1"
															},
															"nativeSrc": "2034:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2034:93:1"
														},
														{
															"nativeSrc": "2136:19:1",
															"nodeType": "YulAssignment",
															"src": "2136:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2147:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2147:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2152:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2143:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:1"
																},
																"nativeSrc": "2143:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2143:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2136:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1795:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1929:3:1",
														"nodeType": "YulTypedName",
														"src": "1929:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1937:3:1",
														"nodeType": "YulTypedName",
														"src": "1937:3:1",
														"type": ""
													}
												],
												"src": "1795:366:1"
											},
											{
												"body": {
													"nativeSrc": "2338:248:1",
													"nodeType": "YulBlock",
													"src": "2338:248:1",
													"statements": [
														{
															"nativeSrc": "2348:26:1",
															"nodeType": "YulAssignment",
															"src": "2348:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2360:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2371:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2356:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2356:3:1"
																},
																"nativeSrc": "2356:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2356:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2348:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2348:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2406:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2391:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:1"
																		},
																		"nativeSrc": "2391:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2414:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2414:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2420:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2420:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2410:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:1"
																		},
																		"nativeSrc": "2410:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2384:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:1"
																},
																"nativeSrc": "2384:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2384:47:1"
															},
															"nativeSrc": "2384:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2384:47:1"
														},
														{
															"nativeSrc": "2440:139:1",
															"nodeType": "YulAssignment",
															"src": "2440:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2574:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2448:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2448:124:1"
																},
																"nativeSrc": "2448:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2448:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2440:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2440:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2167:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2318:9:1",
														"nodeType": "YulTypedName",
														"src": "2318:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2333:4:1",
														"nodeType": "YulTypedName",
														"src": "2333:4:1",
														"type": ""
													}
												],
												"src": "2167:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721(memPtr) {\n\n        mstore(add(memPtr, 0), \"TX not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063340ddb121461005957806351ba868d1461007557806372cca3eb146100a557806392584d80146100d5578063fdfb674314610105575b5f80fd5b610073600480360381019061006e919061028f565b610121565b005b61008f600480360381019061008a919061028f565b61014c565b60405161009c91906102d4565b60405180910390f35b6100bf60048036038101906100ba919061028f565b610168565b6040516100cc91906102d4565b60405180910390f35b6100ef60048036038101906100ea919061028f565b610185565b6040516100fc91906102d4565b60405180910390f35b61011f600480360381019061011a919061028f565b6101d1565b005b60015f808381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b6001602052805f5260405f205f915054906101000a900460ff1681565b5f805f8381526020019081526020015f205f9054906101000a900460ff1680156101ca575060015f8381526020019081526020015f205f9054906101000a900460ff16155b9050919050565b5f808281526020019081526020015f205f9054906101000a900460ff1661022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610347565b60405180910390fd5b6001805f8381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f80fd5b5f819050919050565b61026e8161025c565b8114610278575f80fd5b50565b5f8135905061028981610265565b92915050565b5f602082840312156102a4576102a3610258565b5b5f6102b18482850161027b565b91505092915050565b5f8115159050919050565b6102ce816102ba565b82525050565b5f6020820190506102e75f8301846102c5565b92915050565b5f82825260208201905092915050565b7f5458206e6f7420666f756e6400000000000000000000000000000000000000005f82015250565b5f610331600c836102ed565b915061033c826102fd565b602082019050919050565b5f6020820190508181035f83015261035e81610325565b905091905056fea2646970667358221220d92f9759e3b2cb3e1a57a34f6aa994f718853499eca39f1c8fd7a4e95441238164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x340DDB12 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x51BA868D EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x72CCA3EB EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x92584D80 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xFDFB6743 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1CA JUMPI POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26E DUP2 PUSH2 0x25C JUMP JUMPDEST DUP2 EQ PUSH2 0x278 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x289 DUP2 PUSH2 0x265 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A4 JUMPI PUSH2 0x2A3 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B1 DUP5 DUP3 DUP6 ADD PUSH2 0x27B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x2BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5458206E6F7420666F756E640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x331 PUSH1 0xC DUP4 PUSH2 0x2ED JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35E DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0x2F SWAP8 MSIZE 0xE3 0xB2 0xCB RETURNDATACOPY BYTE JUMPI LOG3 0x4F PUSH11 0xA994F718853499ECA39F1C DUP16 0xD7 LOG4 0xE9 SLOAD COINBASE 0x23 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "140:573:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;278:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;178:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;228:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;521:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;371:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;278:87;354:4;331:12;:20;344:6;331:20;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;278:87;:::o;178:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;228:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;521:190::-;578:4;660:12;:20;673:6;660:20;;;;;;;;;;;;;;;;;;;;;:44;;;;;685:11;:19;697:6;685:19;;;;;;;;;;;;;;;;;;;;;684:20;660:44;653:51;;521:190;;;:::o;371:144::-;435:12;:20;448:6;435:20;;;;;;;;;;;;;;;;;;;;;427:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;504:4;482:11;:19;494:6;482:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;371:144;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:169::-;1536:11;1570:6;1565:3;1558:19;1610:4;1605:3;1601:14;1586:29;;1452:169;;;;:::o;1627:162::-;1767:14;1763:1;1755:6;1751:14;1744:38;1627:162;:::o;1795:366::-;1937:3;1958:67;2022:2;2017:3;1958:67;:::i;:::-;1951:74;;2034:93;2123:3;2034:93;:::i;:::-;2152:2;2147:3;2143:12;2136:19;;1795:366;;;:::o;2167:419::-;2333:4;2371:2;2360:9;2356:18;2348:26;;2420:9;2414:4;2410:20;2406:1;2395:9;2391:17;2384:47;2448:131;2574:4;2448:131;:::i;:::-;2440:139;;2167:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "184600",
								"executionCost": "224",
								"totalCost": "184824"
							},
							"external": {
								"challengeTx(bytes32)": "27037",
								"finalize(bytes32)": "5093",
								"invalidated(bytes32)": "2807",
								"sequencedTxs(bytes32)": "2784",
								"submitTx(bytes32)": "24721"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 140,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 713,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d92f9759e3b2cb3e1a57a34f6aa994f718853499eca39f1c8fd7a4e95441238164736f6c634300081a0033",
									".code": [
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "340DDB12"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "51BA868D"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "72CCA3EB"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "92584D80"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "FDFB6743"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 178,
											"end": 222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 228,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 228,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 228,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 521,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 521,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 521,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 331,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 331,
											"end": 358,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 331,
											"end": 358,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 178,
											"end": 222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 228,
											"end": 271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 228,
											"end": 271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 521,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 578,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 660,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 660,
											"end": 680,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 660,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 660,
											"end": 680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 660,
											"end": 704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 660,
											"end": 704,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 660,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 660,
											"end": 704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 660,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 685,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 685,
											"end": 704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 684,
											"end": 704,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 660,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 660,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 521,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 435,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 427,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 472,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 427,
											"end": 472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 482,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 482,
											"end": 508,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1789,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1627,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "5458206E6F7420666F756E640000000000000000000000000000000000000000"
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 2161,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1795,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1958,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2025,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1958,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2123,
											"end": 2126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2034,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2034,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 2161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 2161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 2161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2586,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2167,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2574,
											"end": 2578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2448,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2448,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"M/Malware/Arbitrum Reorg Simulation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"challengeTx(bytes32)": "fdfb6743",
							"finalize(bytes32)": "92584d80",
							"invalidated(bytes32)": "72cca3eb",
							"sequencedTxs(bytes32)": "51ba868d",
							"submitTx(bytes32)": "340ddb12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"challengeTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"finalize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"invalidated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sequencedTxs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"submitTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ArbitrumReorgSimulator - Simulates conflicting txs in challenge window\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Malware/Arbitrum Reorg Simulation.sol\":\"ArbitrumReorgSimulator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Malware/Arbitrum Reorg Simulation.sol\":{\"keccak256\":\"0x2b7d3cb500daec8b4d11ca852a5b87baae3dfaf194cf6264db50cce2aca88ac2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67731bbc65d9b3696cede53bd43ac1579c76d45f638ae2684cc2da824edba53e\",\"dweb:/ipfs/QmSCjy5CqFPtmnK16ps4bokprSpCmefD7Y9eADnaXWfcPW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "M/Malware/Arbitrum Reorg Simulation.sol:ArbitrumReorgSimulator",
								"label": "sequencedTxs",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 10,
								"contract": "M/Malware/Arbitrum Reorg Simulation.sol:ArbitrumReorgSimulator",
								"label": "invalidated",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"M/Malware/Arbitrum Reorg Simulation.sol": {
				"ast": {
					"absolutePath": "M/Malware/Arbitrum Reorg Simulation.sol",
					"exportedSymbols": {
						"ArbitrumReorgSimulator": [
							59
						]
					},
					"id": 60,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ArbitrumReorgSimulator",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:82:0",
								"text": "@title ArbitrumReorgSimulator - Simulates conflicting txs in challenge window"
							},
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "ArbitrumReorgSimulator",
							"nameLocation": "149:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "51ba868d",
									"id": 6,
									"mutability": "mutable",
									"name": "sequencedTxs",
									"nameLocation": "210:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "178:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 5,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "186:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "178:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "197:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72cca3eb",
									"id": 10,
									"mutability": "mutable",
									"name": "invalidated",
									"nameLocation": "260:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "228:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 9,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 7,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "236:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "228:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 8,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "247:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "321:44:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 15,
															"name": "sequencedTxs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "331:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 17,
														"indexExpression": {
															"id": 16,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "344:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "331:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "354:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "331:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "331:27:0"
											}
										]
									},
									"functionSelector": "340ddb12",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submitTx",
									"nameLocation": "287:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "304:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "296:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:16:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:0"
									},
									"scope": 59,
									"src": "278:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "417:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 28,
																"name": "sequencedTxs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "435:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																	"typeString": "mapping(bytes32 => bool)"
																}
															},
															"id": 30,
															"indexExpression": {
																"id": 29,
																"name": "txHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "448:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "435:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5458206e6f7420666f756e64",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "457:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721",
																"typeString": "literal_string \"TX not found\""
															},
															"value": "TX not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b45536e6d85ad2d0b91eb2b8f53f071ee1e220432c8f22d514008f8759771721",
																"typeString": "literal_string \"TX not found\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "427:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "427:45:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 34,
															"name": "invalidated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "482:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 36,
														"indexExpression": {
															"id": 35,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "482:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "504:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "482:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "482:26:0"
											}
										]
									},
									"functionSelector": "fdfb6743",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "challengeTx",
									"nameLocation": "380:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "400:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "392:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 23,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:16:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:0:0"
									},
									"scope": 59,
									"src": "371:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "584:127:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 48,
															"name": "sequencedTxs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "660:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 50,
														"indexExpression": {
															"id": 49,
															"name": "txHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "660:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "684:20:0",
														"subExpression": {
															"baseExpression": {
																"id": 51,
																"name": "invalidated",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "685:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																	"typeString": "mapping(bytes32 => bool)"
																}
															},
															"id": 53,
															"indexExpression": {
																"id": 52,
																"name": "txHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "697:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "685:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "660:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 47,
												"id": 56,
												"nodeType": "Return",
												"src": "653:51:0"
											}
										]
									},
									"functionSelector": "92584d80",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalize",
									"nameLocation": "530:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "547:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "539:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 42,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:16:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "578:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:6:0"
									},
									"scope": 59,
									"src": "521:190:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "140:573:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:682:0"
				},
				"id": 0
			}
		}
	}
}