// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title PredictableRandomness - Uses insecure randomness manipulatable by miners
contract EntropyManipulator {
    address public winner;
    uint256 public lastRandom;

    function rollDice() external {
        // ⚠️ Bad randomness: predictable via block values
        uint256 random = uint256(
            keccak256(abi.encodePacked(block.timestamp, block.difficulty, msg.sender))
        ) % 100;

        lastRandom = random;

        if (random == 77) {
            winner = msg.sender;
        }
    }

    function getLastRoll() external view returns (uint256) {
        return lastRandom;
    }
}
