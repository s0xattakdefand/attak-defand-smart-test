// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title TransferGhostToken - Emits fake Transfer events
contract TransferGhostToken {
    string public name = "Ghost Token";
    string public symbol = "GHOST";
    uint8 public decimals = 18;
    uint256 public totalSupply = 1_000_000 ether;

    mapping(address => uint256) private _balances;
    address public ghostEmitter;

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor(address _ghostEmitter) {
        ghostEmitter = _ghostEmitter;
        _balances[_ghostEmitter] = totalSupply;
    }

    function ghostTransfer(address to, uint256 amount) external {
        require(msg.sender == ghostEmitter, "Not ghost emitter");

        // ðŸ‘» Emit event, but no state changes
        emit Transfer(msg.sender, to, amount);
    }

    function balanceOf(address user) external view returns (uint256) {
        return _balances[user]; // Only the emitter has real tokens
    }
}
