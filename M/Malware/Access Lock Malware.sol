// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title AccessLocker - Prevents access by modifying internal state
contract AccessLocker {
    address public admin;
    bool public locked;

    constructor() {
        admin = msg.sender;
    }

    function lockAccess() external {
        require(msg.sender == admin, "Not admin");
        locked = true;
    }

    modifier onlyIfUnlocked() {
        require(!locked, "Access locked");
        _;
    }

    function emergencyWithdraw() external onlyIfUnlocked {
        payable(msg.sender).transfer(address(this).balance);
    }

    receive() external payable {}
}
