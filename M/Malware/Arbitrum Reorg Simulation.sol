// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title ArbitrumReorgSimulator - Simulates conflicting txs in challenge window
contract ArbitrumReorgSimulator {
    mapping(bytes32 => bool) public sequencedTxs;
    mapping(bytes32 => bool) public invalidated;

    function submitTx(bytes32 txHash) external {
        sequencedTxs[txHash] = true;
    }

    function challengeTx(bytes32 txHash) external {
        require(sequencedTxs[txHash], "TX not found");
        invalidated[txHash] = true;
    }

    function finalize(bytes32 txHash) external view returns (bool) {
        // âœ… On Arbitrum, this would settle after 7 days
        return sequencedTxs[txHash] && !invalidated[txHash];
    }
}
