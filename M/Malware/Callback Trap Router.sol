// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

interface IMaliciousToken {
    function onSwapCallback(address user, uint256 amount) external;
}

/// @title CallbackTrapRouter - Calls external contract mid-swap
contract CallbackTrapRouter {
    address public attacker;

    constructor(address _attacker) {
        attacker = _attacker;
    }

    function swap(address token, uint256 amount) external {
        // Simulate legit logic
        require(amount > 0, "Zero swap");

        // ðŸ’¥ Triggers malicious callback (e.g., mint, drain)
        IMaliciousToken(token).onSwapCallback(msg.sender, amount);

        // Pretend to transfer swapped tokens
        payable(msg.sender).transfer(0.1 ether); // bait reward
    }

    receive() external payable {}
}
