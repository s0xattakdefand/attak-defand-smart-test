// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title SupplyHallucinationToken - Lies about total supply
contract SupplyHallucinationToken {
    string public name = "DreamToken";
    string public symbol = "DRM";
    uint8 public decimals = 18;

    address public attacker;
    mapping(address => uint256) internal _balances;

    constructor(address _attacker) {
        attacker = _attacker;
        _balances[_attacker] = 1000 * 1e18;
    }

    function totalSupply() external pure returns (uint256) {
        return 100_000_000 * 1e18; // ðŸ§™ fake supply for illusion
    }

    function balanceOf(address user) external view returns (uint256) {
        return _balances[user];
    }

    function transfer(address to, uint256 amount) external returns (bool) {
        require(_balances[msg.sender] >= amount, "Insufficient");
        _balances[msg.sender] -= amount;
        _balances[to] += amount;
        return true;
    }
}
