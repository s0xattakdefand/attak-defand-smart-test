// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

contract GraveyardFactory {
    event Reanimated(address clone);

    function reanimate(bytes32 salt, bytes memory bytecode) external returns (address addr) {
        assembly {
            addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)
            if iszero(extcodesize(addr)) { revert(0, 0) }
        }
        emit Reanimated(addr);
    }

    function getExpectedAddress(bytes32 salt, bytes memory bytecode) external view returns (address) {
        return address(uint160(uint(keccak256(abi.encodePacked(
            bytes1(0xff),
            address(this),
            salt,
            keccak256(bytecode)
        )))));
    }
}
