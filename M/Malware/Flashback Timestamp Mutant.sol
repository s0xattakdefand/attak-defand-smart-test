// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title TimestampMutant - Allows early trigger via block.timestamp fuzzing
contract TimestampMutant {
    address public owner;
    uint256 public unlockTime;

    constructor(uint256 delay) payable {
        owner = msg.sender;
        unlockTime = block.timestamp + delay;
    }

    function unlock() external {
        require(block.timestamp >= unlockTime, "Too early");
        payable(owner).transfer(address(this).balance); // ğŸ•° trigger on fuzzed time
    }

    receive() external payable {}
}
