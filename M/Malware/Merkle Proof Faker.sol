// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @title MerkleProofFaker - Accepts any fake proof due to weak verification
contract MerkleProofFaker {
    mapping(address => bool) public claimed;
    bytes32 public root;

    constructor(bytes32 _root) {
        root = _root;
    }

    function claim(bytes32[] calldata /*proof*/, bytes32 leaf) external {
        require(!claimed[msg.sender], "Already claimed");

        // ðŸš¨ No actual proof verification â€” just accepts anything
        require(leaf == keccak256(abi.encodePacked(msg.sender)), "Invalid leaf");

        claimed[msg.sender] = true;
        payable(msg.sender).transfer(0.5 ether); // fake reward
    }

    receive() external payable {}
}
