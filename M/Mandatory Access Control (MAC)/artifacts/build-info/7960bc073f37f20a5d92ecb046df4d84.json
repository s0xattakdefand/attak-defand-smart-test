{
	"id": "7960bc073f37f20a5d92ecb046df4d84",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\ncontract MACBypassLogic {\n    // Attacker logic used in delegatecall\n    function escalate() public returns (bool) {\n        // Simulates malicious access escalation\n        assembly {\n            sstore(0x1, 0xdeadbeef) // overwrite \"clearance\" slot\n        }\n        return true;\n    }\n}\n\ncontract MACProtectedSystem {\n    address public admin;\n    uint256 public clearance; // slot 1: protected by MAC\n\n    constructor() {\n        admin = msg.sender;\n        clearance = 1; // normal users start with low clearance\n    }\n\n    function execute(address logic) external {\n        // ðŸ’£ Attacker passes malicious logic address\n        logic.delegatecall(abi.encodeWithSignature(\"escalate()\"));\n    }\n\n    function getClearance() external view returns (uint256) {\n        return clearance;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol": {
				"MACBypassLogic": {
					"abi": [
						{
							"inputs": [],
							"name": "escalate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":58:347  contract MACBypassLogic {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":58:347  contract MACBypassLogic {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d6f41c2\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":131:345  function escalate() public returns (bool) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":167:171  bool */\n      0x00\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":267:277  0xdeadbeef */\n      0xdeadbeef\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":262:265  0x1 */\n      0x01\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":255:278  sstore(0x1, 0xdeadbeef) */\n      sstore\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":334:338  true */\n      0x01\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":327:338  return true */\n      swap1\n      pop\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":131:345  function escalate() public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_9:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_10:\n        /* \"#utility.yul\":184:205   */\n      tag_14\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_9\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_7:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_16\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_10\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220af2aa82f39eda6985801d440cd26ff05eead24afbb5a4265db82658cd595705964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060b980601a5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80636d6f41c214602a575b5f80fd5b60306044565b604051603b9190606c565b60405180910390f35b5f63deadbeef6001556001905090565b5f8115159050919050565b6066816054565b82525050565b5f602082019050607d5f830184605f565b9291505056fea2646970667358221220af2aa82f39eda6985801d440cd26ff05eead24afbb5a4265db82658cd595705964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB9 DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D6F41C2 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0xDEADBEEF PUSH1 0x1 SSTORE PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x66 DUP2 PUSH1 0x54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x7D PUSH0 DUP4 ADD DUP5 PUSH1 0x5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0x2A 0xA8 0x2F CODECOPY 0xED 0xA6 SWAP9 PC ADD 0xD4 BLOCKHASH 0xCD 0x26 SELFDESTRUCT SDIV 0xEE 0xAD 0x24 0xAF 0xBB GAS TIMESTAMP PUSH6 0xDB82658CD595 PUSH17 0x5964736F6C634300081A00330000000000 ",
							"sourceMap": "58:289:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@escalate_10": {
									"entryPoint": 68,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 95,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:431:1",
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c80636d6f41c214602a575b5f80fd5b60306044565b604051603b9190606c565b60405180910390f35b5f63deadbeef6001556001905090565b5f8115159050919050565b6066816054565b82525050565b5f602082019050607d5f830184605f565b9291505056fea2646970667358221220af2aa82f39eda6985801d440cd26ff05eead24afbb5a4265db82658cd595705964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D6F41C2 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0x6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0xDEADBEEF PUSH1 0x1 SSTORE PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x66 DUP2 PUSH1 0x54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x7D PUSH0 DUP4 ADD DUP5 PUSH1 0x5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0x2A 0xA8 0x2F CODECOPY 0xED 0xA6 SWAP9 PC ADD 0xD4 BLOCKHASH 0xCD 0x26 SELFDESTRUCT SDIV 0xEE 0xAD 0x24 0xAF 0xBB GAS TIMESTAMP PUSH6 0xDB82658CD595 PUSH17 0x5964736F6C634300081A00330000000000 ",
							"sourceMap": "58:289:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:214;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;167:4;267:10;262:3;255:23;334:4;327:11;;131:214;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "37000",
								"executionCost": "85",
								"totalCost": "37085"
							},
							"external": {
								"escalate()": "22422"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 347,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af2aa82f39eda6985801d440cd26ff05eead24afbb5a4265db82658cd595705964736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "6D6F41C2"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 167,
											"end": 171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "DEADBEEF"
										},
										{
											"begin": 262,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 278,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"escalate()": "6d6f41c2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"escalate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":\"MACBypassLogic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":{\"keccak256\":\"0x950eb0fed79a8985ccb0c3b2504a7ed696adf811db567cfd7006e118c57fd1d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86941c7ec66534d1e76c8014613d0dafa88df1a1c474fb1df93a59235c3da01c\",\"dweb:/ipfs/QmTEvyq2qtoG9ADVJmYGiE519Kp7nfc236FGySeFtm9nmn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MACProtectedSystem": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "clearance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "logic",
									"type": "address"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClearance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":349:855  contract MACProtectedSystem {... */\n  mstore(0x40, 0x80)\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":468:581  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":500:510  msg.sender */\n  caller\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":492:497  admin */\n  0x00\n  dup1\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":492:510  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":532:533  1 */\n  0x01\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":520:529  clearance */\n  dup1\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":520:533  clearance = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":349:855  contract MACProtectedSystem {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":349:855  contract MACProtectedSystem {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d7f46d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14897194\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4b64e492\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":764:853  function getClearance() external view returns (uint256) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":409:433  uint256 public clearance */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":587:758  function execute(address logic) external {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":383:403  address public admin */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":764:853  function getClearance() external view returns (uint256) {... */\n    tag_8:\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":811:818  uint256 */\n      0x00\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":837:846  clearance */\n      sload(0x01)\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":830:846  return clearance */\n      swap1\n      pop\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":764:853  function getClearance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":409:433  uint256 public clearance */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":587:758  function execute(address logic) external {... */\n    tag_17:\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":694:699  logic */\n      dup1\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":694:712  logic.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":713:750  abi.encodeWithSignature(\"escalate()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x6d6f41c200000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":694:751  logic.delegatecall(abi.encodeWithSignature(\"escalate()\")) */\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_28\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_27)\n    tag_28:\n      0x60\n      swap2\n      pop\n    tag_27:\n      pop\n      pop\n      pop\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":587:758  function execute(address logic) external {... */\n      pop\n      jump\t// out\n        /* \"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":383:403  address public admin */\n    tag_19:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_29:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_30:\n        /* \"#utility.yul\":177:201   */\n      tag_46\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_29\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_48\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_30\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_32:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_34:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_35:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_54\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_34\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_36:\n        /* \"#utility.yul\":1076:1100   */\n      tag_56\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_35\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_57:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_37:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_59\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_16:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_62\n      tag_32\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1352:1471   */\n    tag_61:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_63\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_37\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_38:\n        /* \"#utility.yul\":1698:1722   */\n      tag_65\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_35\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_21:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_67\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_38\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2061   */\n    tag_39:\n        /* \"#utility.yul\":2014:2020   */\n      0x00\n        /* \"#utility.yul\":2048:2053   */\n      dup2\n        /* \"#utility.yul\":2042:2054   */\n      mload\n        /* \"#utility.yul\":2032:2054   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2067:2214   */\n    tag_40:\n        /* \"#utility.yul\":2168:2179   */\n      0x00\n        /* \"#utility.yul\":2205:2208   */\n      dup2\n        /* \"#utility.yul\":2190:2208   */\n      swap1\n      pop\n        /* \"#utility.yul\":2067:2214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2220:2359   */\n    tag_41:\n        /* \"#utility.yul\":2309:2315   */\n      dup3\n        /* \"#utility.yul\":2304:2307   */\n      dup2\n        /* \"#utility.yul\":2299:2302   */\n      dup4\n        /* \"#utility.yul\":2293:2316   */\n      mcopy\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2341:2347   */\n      dup4\n        /* \"#utility.yul\":2336:2339   */\n      dup4\n        /* \"#utility.yul\":2332:2348   */\n      add\n        /* \"#utility.yul\":2325:2352   */\n      mstore\n        /* \"#utility.yul\":2220:2359   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2365:2751   */\n    tag_42:\n        /* \"#utility.yul\":2469:2472   */\n      0x00\n        /* \"#utility.yul\":2497:2535   */\n      tag_72\n        /* \"#utility.yul\":2529:2534   */\n      dup3\n        /* \"#utility.yul\":2497:2535   */\n      tag_39\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2551:2639   */\n      tag_73\n        /* \"#utility.yul\":2632:2638   */\n      dup2\n        /* \"#utility.yul\":2627:2630   */\n      dup6\n        /* \"#utility.yul\":2551:2639   */\n      tag_40\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2544:2639   */\n      swap4\n      pop\n        /* \"#utility.yul\":2648:2713   */\n      tag_74\n        /* \"#utility.yul\":2706:2712   */\n      dup2\n        /* \"#utility.yul\":2701:2704   */\n      dup6\n        /* \"#utility.yul\":2694:2698   */\n      0x20\n        /* \"#utility.yul\":2687:2692   */\n      dup7\n        /* \"#utility.yul\":2683:2699   */\n      add\n        /* \"#utility.yul\":2648:2713   */\n      tag_41\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2738:2744   */\n      dup1\n        /* \"#utility.yul\":2733:2736   */\n      dup5\n        /* \"#utility.yul\":2729:2745   */\n      add\n        /* \"#utility.yul\":2722:2745   */\n      swap2\n      pop\n        /* \"#utility.yul\":2473:2751   */\n      pop\n        /* \"#utility.yul\":2365:2751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3028   */\n    tag_25:\n        /* \"#utility.yul\":2887:2890   */\n      0x00\n        /* \"#utility.yul\":2909:3002   */\n      tag_76\n        /* \"#utility.yul\":2998:3001   */\n      dup3\n        /* \"#utility.yul\":2989:2995   */\n      dup5\n        /* \"#utility.yul\":2909:3002   */\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2902:3002   */\n      swap2\n      pop\n        /* \"#utility.yul\":3019:3022   */\n      dup2\n        /* \"#utility.yul\":3012:3022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2757:3028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a2fdddf1275c55daa690ae94353679b46078c930eee1c22cae0451949f22f1fe64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018081905550610360806100625f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630d7f46d91461004e578063148971941461006c5780634b64e4921461008a578063f851a440146100a6575b5f80fd5b6100566100c4565b60405161006391906101f8565b60405180910390f35b6100746100cd565b60405161008191906101f8565b60405180910390f35b6100a4600480360381019061009f919061026f565b6100d3565b005b6100ae6101bd565b6040516100bb91906102a9565b60405180910390f35b5f600154905090565b60015481565b8073ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f6d6f41c2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161017a9190610314565b5f60405180830381855af49150503d805f81146101b2576040519150601f19603f3d011682016040523d82523d5f602084013e6101b7565b606091505b50505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f819050919050565b6101f2816101e0565b82525050565b5f60208201905061020b5f8301846101e9565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023e82610215565b9050919050565b61024e81610234565b8114610258575f80fd5b50565b5f8135905061026981610245565b92915050565b5f6020828403121561028457610283610211565b5b5f6102918482850161025b565b91505092915050565b6102a381610234565b82525050565b5f6020820190506102bc5f83018461029a565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6102ee826102c2565b6102f881856102cc565b93506103088185602086016102d6565b80840191505092915050565b5f61031f82846102e4565b91508190509291505056fea2646970667358221220a2fdddf1275c55daa690ae94353679b46078c930eee1c22cae0451949f22f1fe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x360 DUP1 PUSH2 0x62 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7F46D9 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x14897194 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x4B64E492 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x6D6F41C200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2 DUP2 PUSH2 0x1E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23E DUP3 PUSH2 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x234 JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x211 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291 DUP5 DUP3 DUP6 ADD PUSH2 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A3 DUP2 PUSH2 0x234 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BC PUSH0 DUP4 ADD DUP5 PUSH2 0x29A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE DUP3 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x2F8 DUP2 DUP6 PUSH2 0x2CC JUMP JUMPDEST SWAP4 POP PUSH2 0x308 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31F DUP3 DUP5 PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 REVERT 0xDD CALL 0x27 TLOAD SSTORE 0xDA 0xA6 SWAP1 0xAE SWAP5 CALLDATALOAD CALLDATASIZE PUSH26 0xB46078C930EEE1C22CAE0451949F22F1FE64736F6C634300081A STOP CALLER ",
							"sourceMap": "349:506:0:-:0;;;468:113;;;;;;;;;;500:10;492:5;;:18;;;;;;;;;;;;;;;;;;532:1;520:9;:13;;;;349:506;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@admin_13": {
									"entryPoint": 445,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@clearance_15": {
									"entryPoint": 205,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@execute_43": {
									"entryPoint": 211,
									"id": 43,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getClearance_51": {
									"entryPoint": 196,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3031:1",
										"nodeType": "YulBlock",
										"src": "0:3031:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "482:35:1",
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nativeSrc": "492:19:1",
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nativeSrc": "502:9:1",
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nativeSrc": "612:28:1",
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:1",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:1",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nativeSrc": "622:12:1",
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nativeSrc": "622:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nativeSrc": "735:28:1",
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:1",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:1",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:12:1",
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nativeSrc": "745:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nativeSrc": "814:81:1",
													"nodeType": "YulBlock",
													"src": "814:81:1",
													"statements": [
														{
															"nativeSrc": "824:65:1",
															"nodeType": "YulAssignment",
															"src": "824:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:1",
																		"nodeType": "YulLiteral",
																		"src": "846:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nativeSrc": "835:54:1",
																"nodeType": "YulFunctionCall",
																"src": "835:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:1",
														"nodeType": "YulTypedName",
														"src": "796:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:1",
														"nodeType": "YulTypedName",
														"src": "806:7:1",
														"type": ""
													}
												],
												"src": "769:126:1"
											},
											{
												"body": {
													"nativeSrc": "946:51:1",
													"nodeType": "YulBlock",
													"src": "946:51:1",
													"statements": [
														{
															"nativeSrc": "956:35:1",
															"nodeType": "YulAssignment",
															"src": "956:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:1"
																},
																"nativeSrc": "967:24:1",
																"nodeType": "YulFunctionCall",
																"src": "967:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:1",
														"nodeType": "YulTypedName",
														"src": "928:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:1",
														"nodeType": "YulTypedName",
														"src": "938:7:1",
														"type": ""
													}
												],
												"src": "901:96:1"
											},
											{
												"body": {
													"nativeSrc": "1046:79:1",
													"nodeType": "YulBlock",
													"src": "1046:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:1",
																"nodeType": "YulBlock",
																"src": "1103:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:1"
																			},
																			"nativeSrc": "1105:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:1"
																		},
																		"nativeSrc": "1105:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:1"
																				},
																				"nativeSrc": "1076:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:1"
																		},
																		"nativeSrc": "1066:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:1"
																},
																"nativeSrc": "1059:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:1"
															},
															"nativeSrc": "1056:63:1",
															"nodeType": "YulIf",
															"src": "1056:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:1",
														"nodeType": "YulTypedName",
														"src": "1039:5:1",
														"type": ""
													}
												],
												"src": "1003:122:1"
											},
											{
												"body": {
													"nativeSrc": "1183:87:1",
													"nodeType": "YulBlock",
													"src": "1183:87:1",
													"statements": [
														{
															"nativeSrc": "1193:29:1",
															"nodeType": "YulAssignment",
															"src": "1193:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:1"
																},
																"nativeSrc": "1202:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:1"
																},
																"nativeSrc": "1231:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:1"
															},
															"nativeSrc": "1231:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:1",
														"nodeType": "YulTypedName",
														"src": "1161:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:1",
														"nodeType": "YulTypedName",
														"src": "1169:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:1",
														"nodeType": "YulTypedName",
														"src": "1177:5:1",
														"type": ""
													}
												],
												"src": "1131:139:1"
											},
											{
												"body": {
													"nativeSrc": "1342:263:1",
													"nodeType": "YulBlock",
													"src": "1342:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:1",
																"nodeType": "YulBlock",
																"src": "1388:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:1"
																			},
																			"nativeSrc": "1390:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:1"
																		},
																		"nativeSrc": "1390:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:1"
																		},
																		"nativeSrc": "1359:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:1"
																},
																"nativeSrc": "1355:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:1"
															},
															"nativeSrc": "1352:119:1",
															"nodeType": "YulIf",
															"src": "1352:119:1"
														},
														{
															"nativeSrc": "1481:117:1",
															"nodeType": "YulBlock",
															"src": "1481:117:1",
															"statements": [
																{
																	"nativeSrc": "1496:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:1"
																				},
																				"nativeSrc": "1556:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:1"
																		},
																		"nativeSrc": "1535:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:1",
														"nodeType": "YulTypedName",
														"src": "1312:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:1",
														"nodeType": "YulTypedName",
														"src": "1323:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:1",
														"nodeType": "YulTypedName",
														"src": "1335:6:1",
														"type": ""
													}
												],
												"src": "1276:329:1"
											},
											{
												"body": {
													"nativeSrc": "1676:53:1",
													"nodeType": "YulBlock",
													"src": "1676:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:1"
																		},
																		"nativeSrc": "1698:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																},
																"nativeSrc": "1686:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:1"
															},
															"nativeSrc": "1686:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:1",
														"nodeType": "YulTypedName",
														"src": "1664:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:1",
														"nodeType": "YulTypedName",
														"src": "1671:3:1",
														"type": ""
													}
												],
												"src": "1611:118:1"
											},
											{
												"body": {
													"nativeSrc": "1833:124:1",
													"nodeType": "YulBlock",
													"src": "1833:124:1",
													"statements": [
														{
															"nativeSrc": "1843:26:1",
															"nodeType": "YulAssignment",
															"src": "1843:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:1"
																},
																"nativeSrc": "1851:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:1"
																		},
																		"nativeSrc": "1932:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:1"
																},
																"nativeSrc": "1879:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:1"
															},
															"nativeSrc": "1879:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:1",
														"nodeType": "YulTypedName",
														"src": "1805:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:1",
														"nodeType": "YulTypedName",
														"src": "1817:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:1",
														"nodeType": "YulTypedName",
														"src": "1828:4:1",
														"type": ""
													}
												],
												"src": "1735:222:1"
											},
											{
												"body": {
													"nativeSrc": "2021:40:1",
													"nodeType": "YulBlock",
													"src": "2021:40:1",
													"statements": [
														{
															"nativeSrc": "2032:22:1",
															"nodeType": "YulAssignment",
															"src": "2032:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2048:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2048:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2042:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2042:5:1"
																},
																"nativeSrc": "2042:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2042:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2032:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "1963:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2004:5:1",
														"nodeType": "YulTypedName",
														"src": "2004:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2014:6:1",
														"nodeType": "YulTypedName",
														"src": "2014:6:1",
														"type": ""
													}
												],
												"src": "1963:98:1"
											},
											{
												"body": {
													"nativeSrc": "2180:34:1",
													"nodeType": "YulBlock",
													"src": "2180:34:1",
													"statements": [
														{
															"nativeSrc": "2190:18:1",
															"nodeType": "YulAssignment",
															"src": "2190:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "2205:3:1",
																"nodeType": "YulIdentifier",
																"src": "2205:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2190:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2190:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2067:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2152:3:1",
														"nodeType": "YulTypedName",
														"src": "2152:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2157:6:1",
														"nodeType": "YulTypedName",
														"src": "2157:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2168:11:1",
														"nodeType": "YulTypedName",
														"src": "2168:11:1",
														"type": ""
													}
												],
												"src": "2067:147:1"
											},
											{
												"body": {
													"nativeSrc": "2282:77:1",
													"nodeType": "YulBlock",
													"src": "2282:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2299:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2299:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2304:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2304:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2309:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2293:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2293:5:1"
																},
																"nativeSrc": "2293:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2293:23:1"
															},
															"nativeSrc": "2293:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "2293:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2336:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2336:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2341:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2332:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:1"
																		},
																		"nativeSrc": "2332:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2332:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2350:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2350:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2325:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:1"
																},
																"nativeSrc": "2325:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2325:27:1"
															},
															"nativeSrc": "2325:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2325:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2220:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2264:3:1",
														"nodeType": "YulTypedName",
														"src": "2264:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2269:3:1",
														"nodeType": "YulTypedName",
														"src": "2269:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2274:6:1",
														"nodeType": "YulTypedName",
														"src": "2274:6:1",
														"type": ""
													}
												],
												"src": "2220:139:1"
											},
											{
												"body": {
													"nativeSrc": "2473:278:1",
													"nodeType": "YulBlock",
													"src": "2473:278:1",
													"statements": [
														{
															"nativeSrc": "2483:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2483:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2529:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "2497:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "2497:31:1"
																},
																"nativeSrc": "2497:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2497:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2487:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2487:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2544:95:1",
															"nodeType": "YulAssignment",
															"src": "2544:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2627:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2632:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2632:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2551:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "2551:75:1"
																},
																"nativeSrc": "2551:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2551:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2544:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2544:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2687:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2687:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2694:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2683:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2683:3:1"
																		},
																		"nativeSrc": "2683:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2683:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2701:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2701:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2706:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2706:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2648:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2648:34:1"
																},
																"nativeSrc": "2648:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2648:65:1"
															},
															"nativeSrc": "2648:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2648:65:1"
														},
														{
															"nativeSrc": "2722:23:1",
															"nodeType": "YulAssignment",
															"src": "2722:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2733:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2733:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2738:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2738:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2729:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2729:3:1"
																},
																"nativeSrc": "2729:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2729:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2722:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2722:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "2365:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2454:5:1",
														"nodeType": "YulTypedName",
														"src": "2454:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2461:3:1",
														"nodeType": "YulTypedName",
														"src": "2461:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2469:3:1",
														"nodeType": "YulTypedName",
														"src": "2469:3:1",
														"type": ""
													}
												],
												"src": "2365:386:1"
											},
											{
												"body": {
													"nativeSrc": "2891:137:1",
													"nodeType": "YulBlock",
													"src": "2891:137:1",
													"statements": [
														{
															"nativeSrc": "2902:100:1",
															"nodeType": "YulAssignment",
															"src": "2902:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2989:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2989:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2998:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2909:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "2909:79:1"
																},
																"nativeSrc": "2909:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2909:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2902:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2902:3:1"
																}
															]
														},
														{
															"nativeSrc": "3012:10:1",
															"nodeType": "YulAssignment",
															"src": "3012:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3019:3:1",
																"nodeType": "YulIdentifier",
																"src": "3019:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3012:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2757:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2870:3:1",
														"nodeType": "YulTypedName",
														"src": "2870:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2876:6:1",
														"nodeType": "YulTypedName",
														"src": "2876:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2887:3:1",
														"nodeType": "YulTypedName",
														"src": "2887:3:1",
														"type": ""
													}
												],
												"src": "2757:271:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630d7f46d91461004e578063148971941461006c5780634b64e4921461008a578063f851a440146100a6575b5f80fd5b6100566100c4565b60405161006391906101f8565b60405180910390f35b6100746100cd565b60405161008191906101f8565b60405180910390f35b6100a4600480360381019061009f919061026f565b6100d3565b005b6100ae6101bd565b6040516100bb91906102a9565b60405180910390f35b5f600154905090565b60015481565b8073ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f6d6f41c2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161017a9190610314565b5f60405180830381855af49150503d805f81146101b2576040519150601f19603f3d011682016040523d82523d5f602084013e6101b7565b606091505b50505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f819050919050565b6101f2816101e0565b82525050565b5f60208201905061020b5f8301846101e9565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023e82610215565b9050919050565b61024e81610234565b8114610258575f80fd5b50565b5f8135905061026981610245565b92915050565b5f6020828403121561028457610283610211565b5b5f6102918482850161025b565b91505092915050565b6102a381610234565b82525050565b5f6020820190506102bc5f83018461029a565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6102ee826102c2565b6102f881856102cc565b93506103088185602086016102d6565b80840191505092915050565b5f61031f82846102e4565b91508190509291505056fea2646970667358221220a2fdddf1275c55daa690ae94353679b46078c930eee1c22cae0451949f22f1fe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7F46D9 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x14897194 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x4B64E492 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x6D6F41C200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2 DUP2 PUSH2 0x1E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B PUSH0 DUP4 ADD DUP5 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23E DUP3 PUSH2 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x234 JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x245 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x211 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291 DUP5 DUP3 DUP6 ADD PUSH2 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A3 DUP2 PUSH2 0x234 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BC PUSH0 DUP4 ADD DUP5 PUSH2 0x29A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE DUP3 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x2F8 DUP2 DUP6 PUSH2 0x2CC JUMP JUMPDEST SWAP4 POP PUSH2 0x308 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31F DUP3 DUP5 PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 REVERT 0xDD CALL 0x27 TLOAD SSTORE 0xDA 0xA6 SWAP1 0xAE SWAP5 CALLDATALOAD CALLDATASIZE PUSH26 0xB46078C930EEE1C22CAE0451949F22F1FE64736F6C634300081A STOP CALLER ",
							"sourceMap": "349:506:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;383:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;764:89;811:7;837:9;;830:16;;764:89;:::o;409:24::-;;;;:::o;587:171::-;694:5;:18;;713:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:171;:::o;383:20::-;;;;;;;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:98::-;2014:6;2048:5;2042:12;2032:22;;1963:98;;;:::o;2067:147::-;2168:11;2205:3;2190:18;;2067:147;;;;:::o;2220:139::-;2309:6;2304:3;2299;2293:23;2350:1;2341:6;2336:3;2332:16;2325:27;2220:139;;;:::o;2365:386::-;2469:3;2497:38;2529:5;2497:38;:::i;:::-;2551:88;2632:6;2627:3;2551:88;:::i;:::-;2544:95;;2648:65;2706:6;2701:3;2694:4;2687:5;2683:16;2648:65;:::i;:::-;2738:6;2733:3;2729:16;2722:23;;2473:278;2365:386;;;;:::o;2757:271::-;2887:3;2909:93;2998:3;2989:6;2909:93;:::i;:::-;2902:100;;3019:3;3012:10;;2757:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "172800",
								"executionCost": "46591",
								"totalCost": "219391"
							},
							"external": {
								"admin()": "2549",
								"clearance()": "2425",
								"execute(address)": "infinite",
								"getClearance()": "2410"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 349,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 349,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 855,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 468,
									"end": 581,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 468,
									"end": 581,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 468,
									"end": 581,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 468,
									"end": 581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 500,
									"end": 510,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 492,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 497,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 492,
									"end": 510,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 492,
									"end": 510,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 492,
									"end": 510,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 492,
									"end": 510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 532,
									"end": 533,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 520,
									"end": 533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 520,
									"end": 533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 520,
									"end": 533,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 520,
									"end": 533,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 349,
									"end": 855,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 349,
									"end": 855,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 349,
									"end": 855,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 349,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 855,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 349,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 855,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2fdddf1275c55daa690ae94353679b46078c930eee1c22cae0451949f22f1fe64736f6c634300081a0033",
									".code": [
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "D7F46D9"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "14897194"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "4B64E492"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 764,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 764,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 409,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 587,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 587,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 383,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 383,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 764,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 811,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 764,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 587,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "6D6F41C200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 694,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 694,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 587,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1963,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2214,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2220,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2529,
											"end": 2534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2497,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2497,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2551,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2639,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2704,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2648,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2713,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2648,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2736,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2751,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3028,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2757,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2909,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2909,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"clearance()": "14897194",
							"execute(address)": "4b64e492",
							"getClearance()": "0d7f46d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClearance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":\"MACProtectedSystem\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol\":{\"keccak256\":\"0x950eb0fed79a8985ccb0c3b2504a7ed696adf811db567cfd7006e118c57fd1d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86941c7ec66534d1e76c8014613d0dafa88df1a1c474fb1df93a59235c3da01c\",\"dweb:/ipfs/QmTEvyq2qtoG9ADVJmYGiE519Kp7nfc236FGySeFtm9nmn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol:MACProtectedSystem",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol:MACProtectedSystem",
								"label": "clearance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol:26:9:\n   |\n26 |         logic.delegatecall(abi.encodeWithSignature(\"escalate()\"));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 751,
					"file": "M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol",
					"start": 694
				},
				"type": "Warning"
			}
		],
		"sources": {
			"M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol": {
				"ast": {
					"absolutePath": "M/Mandatory Access Control (MAC)/MAC Bypass via Delegatecall.sol",
					"exportedSymbols": {
						"MACBypassLogic": [
							11
						],
						"MACProtectedSystem": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MACBypassLogic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "MACBypassLogic",
							"nameLocation": "67:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "173:172:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "241:77:0",
													"nodeType": "YulBlock",
													"src": "241:77:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "262:3:0",
																		"nodeType": "YulLiteral",
																		"src": "262:3:0",
																		"type": "",
																		"value": "0x1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "267:10:0",
																		"nodeType": "YulLiteral",
																		"src": "267:10:0",
																		"type": "",
																		"value": "0xdeadbeef"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "255:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "255:6:0"
																},
																"nativeSrc": "255:23:0",
																"nodeType": "YulFunctionCall",
																"src": "255:23:0"
															},
															"nativeSrc": "255:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "255:23:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [],
												"id": 6,
												"nodeType": "InlineAssembly",
												"src": "232:86:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "327:11:0"
											}
										]
									},
									"functionSelector": "6d6f41c2",
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "escalate",
									"nameLocation": "140:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "167:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "167:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:6:0"
									},
									"scope": 11,
									"src": "131:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "58:289:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MACProtectedSystem",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "MACProtectedSystem",
							"nameLocation": "358:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 13,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "398:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "383:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "14897194",
									"id": 15,
									"mutability": "mutable",
									"name": "clearance",
									"nameLocation": "424:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "409:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "409:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "482:99:0",
										"statements": [
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "492:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 19,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "500:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "504:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "500:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "492:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "492:18:0"
											},
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "clearance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "520:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "520:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "520:13:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "482:0:0"
									},
									"scope": 52,
									"src": "468:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "628:130:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "657363616c6174652829",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "737:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_6d6f41c2e32504cb504815b20ba4e198d3aea76930485919024deffd86574aae",
																		"typeString": "literal_string \"escalate()\""
																	},
																	"value": "escalate()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_6d6f41c2e32504cb504815b20ba4e198d3aea76930485919024deffd86574aae",
																		"typeString": "literal_string \"escalate()\""
																	}
																],
																"expression": {
																	"id": 36,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "713:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "717:19:0",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "713:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "713:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 33,
															"name": "logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "700:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "694:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "694:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "694:57:0"
											}
										]
									},
									"functionSelector": "4b64e492",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "596:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "logic",
												"nameLocation": "612:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "604:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:15:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "628:0:0"
									},
									"scope": 52,
									"src": "587:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "820:33:0",
										"statements": [
											{
												"expression": {
													"id": 48,
													"name": "clearance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "837:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 47,
												"id": 49,
												"nodeType": "Return",
												"src": "830:16:0"
											}
										]
									},
									"functionSelector": "0d7f46d9",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClearance",
									"nameLocation": "773:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "785:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:9:0"
									},
									"scope": 52,
									"src": "764:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 53,
							"src": "349:506:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:824:0"
				},
				"id": 0
			}
		}
	}
}