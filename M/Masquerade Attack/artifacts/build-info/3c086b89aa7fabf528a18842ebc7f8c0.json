{
	"id": "3c086b89aa7fabf528a18842ebc7f8c0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title FakeOracle - Masquerades as a Chainlink-like price oracle\ncontract FakeOracle {\n    int256 public fakePrice;\n    address public attacker;\n\n    constructor(int256 _price, address _attacker) {\n        fakePrice = _price;\n        attacker = _attacker;\n    }\n\n    function latestAnswer() external view returns (int256) {\n        return fakePrice;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol": {
				"FakeOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "_price",
									"type": "int256"
								},
								{
									"internalType": "address",
									"name": "_attacker",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attacker",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fakePrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "FakeOracle - Masquerades as a Chainlink-like price oracle",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":127:419  contract FakeOracle {... */\n  mstore(0x40, 0x80)\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":212:323  constructor(int256 _price, address _attacker) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":280:286  _price */\n  dup2\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":268:277  fakePrice */\n  0x00\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":268:286  fakePrice = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":307:316  _attacker */\n  dup1\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":296:304  attacker */\n  0x01\n  0x00\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":296:316  attacker = _attacker */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":212:323  constructor(int256 _price, address _attacker) {... */\n  pop\n  pop\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":127:419  contract FakeOracle {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:410   */\ntag_10:\n    /* \"#utility.yul\":370:377   */\n  0x00\n    /* \"#utility.yul\":399:404   */\n  dup2\n    /* \"#utility.yul\":388:404   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:410   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":416:536   */\ntag_11:\n    /* \"#utility.yul\":488:511   */\n  tag_23\n    /* \"#utility.yul\":505:510   */\n  dup2\n    /* \"#utility.yul\":488:511   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":481:486   */\n  dup2\n    /* \"#utility.yul\":478:512   */\n  eq\n    /* \"#utility.yul\":468:530   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  dup1\n    /* \"#utility.yul\":516:528   */\n  revert\n    /* \"#utility.yul\":468:530   */\ntag_24:\n    /* \"#utility.yul\":416:536   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":542:683   */\ntag_12:\n    /* \"#utility.yul\":598:603   */\n  0x00\n    /* \"#utility.yul\":629:635   */\n  dup2\n    /* \"#utility.yul\":623:636   */\n  mload\n    /* \"#utility.yul\":614:636   */\n  swap1\n  pop\n    /* \"#utility.yul\":645:677   */\n  tag_26\n    /* \"#utility.yul\":671:676   */\n  dup2\n    /* \"#utility.yul\":645:677   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":542:683   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:815   */\ntag_13:\n    /* \"#utility.yul\":726:733   */\n  0x00\n    /* \"#utility.yul\":766:808   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":759:764   */\n  dup3\n    /* \"#utility.yul\":755:809   */\n  and\n    /* \"#utility.yul\":744:809   */\n  swap1\n  pop\n    /* \"#utility.yul\":689:815   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":821:917   */\ntag_14:\n    /* \"#utility.yul\":858:865   */\n  0x00\n    /* \"#utility.yul\":887:911   */\n  tag_29\n    /* \"#utility.yul\":905:910   */\n  dup3\n    /* \"#utility.yul\":887:911   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":876:911   */\n  swap1\n  pop\n    /* \"#utility.yul\":821:917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":923:1045   */\ntag_15:\n    /* \"#utility.yul\":996:1020   */\n  tag_31\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_32:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1194   */\ntag_16:\n    /* \"#utility.yul\":1108:1113   */\n  0x00\n    /* \"#utility.yul\":1139:1145   */\n  dup2\n    /* \"#utility.yul\":1133:1146   */\n  mload\n    /* \"#utility.yul\":1124:1146   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:1188   */\n  tag_34\n    /* \"#utility.yul\":1182:1187   */\n  dup2\n    /* \"#utility.yul\":1155:1188   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1051:1194   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1200:1705   */\ntag_3:\n    /* \"#utility.yul\":1278:1284   */\n  0x00\n    /* \"#utility.yul\":1286:1292   */\n  dup1\n    /* \"#utility.yul\":1335:1337   */\n  0x40\n    /* \"#utility.yul\":1323:1332   */\n  dup4\n    /* \"#utility.yul\":1314:1321   */\n  dup6\n    /* \"#utility.yul\":1310:1333   */\n  sub\n    /* \"#utility.yul\":1306:1338   */\n  slt\n    /* \"#utility.yul\":1303:1422   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1341:1420   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1303:1422   */\ntag_36:\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1486:1549   */\n  tag_38\n    /* \"#utility.yul\":1541:1548   */\n  dup6\n    /* \"#utility.yul\":1532:1538   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1539   */\n  add\n    /* \"#utility.yul\":1486:1549   */\n  tag_12\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1476:1549   */\n  swap3\n  pop\n    /* \"#utility.yul\":1432:1559   */\n  pop\n    /* \"#utility.yul\":1598:1600   */\n  0x20\n    /* \"#utility.yul\":1624:1688   */\n  tag_39\n    /* \"#utility.yul\":1680:1687   */\n  dup6\n    /* \"#utility.yul\":1671:1677   */\n  dup3\n    /* \"#utility.yul\":1660:1669   */\n  dup7\n    /* \"#utility.yul\":1656:1678   */\n  add\n    /* \"#utility.yul\":1624:1688   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1614:1688   */\n  swap2\n  pop\n    /* \"#utility.yul\":1569:1698   */\n  pop\n    /* \"#utility.yul\":1200:1705   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":127:419  contract FakeOracle {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":127:419  contract FakeOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x21a1fc6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x48eb76ee\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x50d25bcd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":153:176  int256 public fakePrice */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":182:205  address public attacker */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":329:417  function latestAnswer() external view returns (int256) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":153:176  int256 public fakePrice */\n    tag_7:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":182:205  address public attacker */\n    tag_11:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":329:417  function latestAnswer() external view returns (int256) {... */\n    tag_15:\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":376:382  int256 */\n      0x00\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":401:410  fakePrice */\n      dup1\n      sload\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":394:410  return fakePrice */\n      swap1\n      pop\n        /* \"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":329:417  function latestAnswer() external view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:83   */\n    tag_18:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":72:77   */\n      dup2\n        /* \"#utility.yul\":61:77   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:83   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":89:204   */\n    tag_19:\n        /* \"#utility.yul\":174:197   */\n      tag_26\n        /* \"#utility.yul\":191:196   */\n      dup2\n        /* \"#utility.yul\":174:197   */\n      tag_18\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":169:172   */\n      dup3\n        /* \"#utility.yul\":162:198   */\n      mstore\n        /* \"#utility.yul\":89:204   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":210:428   */\n    tag_9:\n        /* \"#utility.yul\":301:305   */\n      0x00\n        /* \"#utility.yul\":339:341   */\n      0x20\n        /* \"#utility.yul\":328:337   */\n      dup3\n        /* \"#utility.yul\":324:342   */\n      add\n        /* \"#utility.yul\":316:342   */\n      swap1\n      pop\n        /* \"#utility.yul\":352:421   */\n      tag_28\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":352:421   */\n      tag_19\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":210:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_20:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:662   */\n    tag_21:\n        /* \"#utility.yul\":603:610   */\n      0x00\n        /* \"#utility.yul\":632:656   */\n      tag_31\n        /* \"#utility.yul\":650:655   */\n      dup3\n        /* \"#utility.yul\":632:656   */\n      tag_20\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":621:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:786   */\n    tag_22:\n        /* \"#utility.yul\":755:779   */\n      tag_33\n        /* \"#utility.yul\":773:778   */\n      dup2\n        /* \"#utility.yul\":755:779   */\n      tag_21\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":750:753   */\n      dup3\n        /* \"#utility.yul\":743:780   */\n      mstore\n        /* \"#utility.yul\":668:786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":792:1014   */\n    tag_13:\n        /* \"#utility.yul\":885:889   */\n      0x00\n        /* \"#utility.yul\":923:925   */\n      0x20\n        /* \"#utility.yul\":912:921   */\n      dup3\n        /* \"#utility.yul\":908:926   */\n      add\n        /* \"#utility.yul\":900:926   */\n      swap1\n      pop\n        /* \"#utility.yul\":936:1007   */\n      tag_35\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":936:1007   */\n      tag_22\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":792:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122037c8598488168846738830a7f39070903449e0e2ebde8b3f38136ad7594426d664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_address_fromMemory": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1708:1",
										"nodeType": "YulBlock",
										"src": "0:1708:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:32:1",
													"nodeType": "YulBlock",
													"src": "378:32:1",
													"statements": [
														{
															"nativeSrc": "388:16:1",
															"nodeType": "YulAssignment",
															"src": "388:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "399:5:1",
																"nodeType": "YulIdentifier",
																"src": "399:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "334:76:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:76:1"
											},
											{
												"body": {
													"nativeSrc": "458:78:1",
													"nodeType": "YulBlock",
													"src": "458:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "514:16:1",
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "523:1:1",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nativeSrc": "516:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nativeSrc": "516:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "481:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "481:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "505:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "505:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "488:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "488:16:1"
																				},
																				"nativeSrc": "488:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "488:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "478:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "478:2:1"
																		},
																		"nativeSrc": "478:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "478:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "471:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nativeSrc": "471:42:1",
																"nodeType": "YulFunctionCall",
																"src": "471:42:1"
															},
															"nativeSrc": "468:62:1",
															"nodeType": "YulIf",
															"src": "468:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "416:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "451:5:1",
														"nodeType": "YulTypedName",
														"src": "451:5:1",
														"type": ""
													}
												],
												"src": "416:120:1"
											},
											{
												"body": {
													"nativeSrc": "604:79:1",
													"nodeType": "YulBlock",
													"src": "604:79:1",
													"statements": [
														{
															"nativeSrc": "614:22:1",
															"nodeType": "YulAssignment",
															"src": "614:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "623:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "623:5:1"
																},
																"nativeSrc": "623:13:1",
																"nodeType": "YulFunctionCall",
																"src": "623:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "614:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "614:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "671:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "645:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:25:1"
																},
																"nativeSrc": "645:32:1",
																"nodeType": "YulFunctionCall",
																"src": "645:32:1"
															},
															"nativeSrc": "645:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "542:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "582:6:1",
														"nodeType": "YulTypedName",
														"src": "582:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "590:3:1",
														"nodeType": "YulTypedName",
														"src": "590:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "598:5:1",
														"nodeType": "YulTypedName",
														"src": "598:5:1",
														"type": ""
													}
												],
												"src": "542:141:1"
											},
											{
												"body": {
													"nativeSrc": "734:81:1",
													"nodeType": "YulBlock",
													"src": "734:81:1",
													"statements": [
														{
															"nativeSrc": "744:65:1",
															"nodeType": "YulAssignment",
															"src": "744:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "759:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "759:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "766:42:1",
																		"nodeType": "YulLiteral",
																		"src": "766:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "755:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "755:3:1"
																},
																"nativeSrc": "755:54:1",
																"nodeType": "YulFunctionCall",
																"src": "755:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "744:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "744:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "689:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "716:5:1",
														"nodeType": "YulTypedName",
														"src": "716:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "726:7:1",
														"nodeType": "YulTypedName",
														"src": "726:7:1",
														"type": ""
													}
												],
												"src": "689:126:1"
											},
											{
												"body": {
													"nativeSrc": "866:51:1",
													"nodeType": "YulBlock",
													"src": "866:51:1",
													"statements": [
														{
															"nativeSrc": "876:35:1",
															"nodeType": "YulAssignment",
															"src": "876:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "905:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "887:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "887:17:1"
																},
																"nativeSrc": "887:24:1",
																"nodeType": "YulFunctionCall",
																"src": "887:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "876:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "876:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "821:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "848:5:1",
														"nodeType": "YulTypedName",
														"src": "848:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "858:7:1",
														"nodeType": "YulTypedName",
														"src": "858:7:1",
														"type": ""
													}
												],
												"src": "821:96:1"
											},
											{
												"body": {
													"nativeSrc": "966:79:1",
													"nodeType": "YulBlock",
													"src": "966:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1023:16:1",
																"nodeType": "YulBlock",
																"src": "1023:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1035:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1025:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:1"
																			},
																			"nativeSrc": "1025:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:1"
																		},
																		"nativeSrc": "1025:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1014:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "996:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:1"
																				},
																				"nativeSrc": "996:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "986:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:1"
																		},
																		"nativeSrc": "986:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "979:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:1"
																},
																"nativeSrc": "979:43:1",
																"nodeType": "YulFunctionCall",
																"src": "979:43:1"
															},
															"nativeSrc": "976:63:1",
															"nodeType": "YulIf",
															"src": "976:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "923:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "959:5:1",
														"nodeType": "YulTypedName",
														"src": "959:5:1",
														"type": ""
													}
												],
												"src": "923:122:1"
											},
											{
												"body": {
													"nativeSrc": "1114:80:1",
													"nodeType": "YulBlock",
													"src": "1114:80:1",
													"statements": [
														{
															"nativeSrc": "1124:22:1",
															"nodeType": "YulAssignment",
															"src": "1124:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1139:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1139:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1133:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1133:5:1"
																},
																"nativeSrc": "1133:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1133:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1124:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1124:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1182:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1182:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1155:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1155:26:1"
																},
																"nativeSrc": "1155:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1155:33:1"
															},
															"nativeSrc": "1155:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1155:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1051:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1092:6:1",
														"nodeType": "YulTypedName",
														"src": "1092:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1100:3:1",
														"nodeType": "YulTypedName",
														"src": "1100:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1108:5:1",
														"nodeType": "YulTypedName",
														"src": "1108:5:1",
														"type": ""
													}
												],
												"src": "1051:143:1"
											},
											{
												"body": {
													"nativeSrc": "1293:412:1",
													"nodeType": "YulBlock",
													"src": "1293:412:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1339:83:1",
																"nodeType": "YulBlock",
																"src": "1339:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1341:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1341:77:1"
																			},
																			"nativeSrc": "1341:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1341:79:1"
																		},
																		"nativeSrc": "1341:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1341:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1314:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1314:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1323:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1323:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1310:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:1"
																		},
																		"nativeSrc": "1310:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1310:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1335:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1335:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1306:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1306:3:1"
																},
																"nativeSrc": "1306:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1306:32:1"
															},
															"nativeSrc": "1303:119:1",
															"nodeType": "YulIf",
															"src": "1303:119:1"
														},
														{
															"nativeSrc": "1432:127:1",
															"nodeType": "YulBlock",
															"src": "1432:127:1",
															"statements": [
																{
																	"nativeSrc": "1447:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1447:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1461:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1451:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1451:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1476:73:1",
																	"nodeType": "YulAssignment",
																	"src": "1476:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1521:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1521:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1532:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1532:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1517:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1517:3:1"
																				},
																				"nativeSrc": "1517:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1517:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1541:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1541:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "1486:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "1486:30:1"
																		},
																		"nativeSrc": "1486:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1486:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1476:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1476:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1569:129:1",
															"nodeType": "YulBlock",
															"src": "1569:129:1",
															"statements": [
																{
																	"nativeSrc": "1584:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1584:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1598:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1598:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1588:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1588:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1614:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1614:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1660:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1660:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1671:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1671:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1656:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1656:3:1"
																				},
																				"nativeSrc": "1656:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1656:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1680:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1680:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1624:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1624:31:1"
																		},
																		"nativeSrc": "1624:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1624:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1614:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1614:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_address_fromMemory",
												"nativeSrc": "1200:505:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1255:9:1",
														"nodeType": "YulTypedName",
														"src": "1255:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1266:7:1",
														"nodeType": "YulTypedName",
														"src": "1266:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1278:6:1",
														"nodeType": "YulTypedName",
														"src": "1278:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1286:6:1",
														"nodeType": "YulTypedName",
														"src": "1286:6:1",
														"type": ""
													}
												],
												"src": "1200:505:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_int256t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516102e83803806102e88339818101604052810190610031919061010f565b815f819055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061014d565b5f80fd5b5f819050919050565b61009481610082565b811461009e575f80fd5b50565b5f815190506100af8161008b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100de826100b5565b9050919050565b6100ee816100d4565b81146100f8575f80fd5b50565b5f81519050610109816100e5565b92915050565b5f80604083850312156101255761012461007e565b5b5f610132858286016100a1565b9250506020610143858286016100fb565b9150509250929050565b61018e8061015a5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806321a1fc6d1461004357806348eb76ee1461006157806350d25bcd1461007f575b5f80fd5b61004b61009d565b60405161005891906100e7565b60405180910390f35b6100696100a2565b604051610076919061013f565b60405180910390f35b6100876100c7565b60405161009491906100e7565b60405180910390f35b5f5481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054905090565b5f819050919050565b6100e1816100cf565b82525050565b5f6020820190506100fa5f8301846100d8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61012982610100565b9050919050565b6101398161011f565b82525050565b5f6020820190506101525f830184610130565b9291505056fea264697066735822122037c8598488168846738830a7f39070903449e0e2ebde8b3f38136ad7594426d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E8 CODESIZE SUB DUP1 PUSH2 0x2E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x10F JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x14D JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94 DUP2 PUSH2 0x82 JUMP JUMPDEST DUP2 EQ PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xAF DUP2 PUSH2 0x8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE DUP3 PUSH2 0xB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE DUP2 PUSH2 0xD4 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x109 DUP2 PUSH2 0xE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH2 0x124 PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x132 DUP6 DUP3 DUP7 ADD PUSH2 0xA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x143 DUP6 DUP3 DUP7 ADD PUSH2 0xFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E DUP1 PUSH2 0x15A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21A1FC6D EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x48EB76EE EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0xCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA PUSH0 DUP4 ADD DUP5 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x129 DUP3 PUSH2 0x100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139 DUP2 PUSH2 0x11F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x152 PUSH0 DUP4 ADD DUP5 PUSH2 0x130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xC8 MSIZE DUP5 DUP9 AND DUP9 CHAINID PUSH20 0x8830A7F39070903449E0E2EBDE8B3F38136AD759 PREVRANDAO 0x26 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "127:292:0:-:0;;;212:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;280:6;268:9;:18;;;;307:9;296:8;;:20;;;;;;;;;;;;;;;;;;212:111;;127:292;;88:117:1;197:1;194;187:12;334:76;370:7;399:5;388:16;;334:76;;;:::o;416:120::-;488:23;505:5;488:23;:::i;:::-;481:5;478:34;468:62;;526:1;523;516:12;468:62;416:120;:::o;542:141::-;598:5;629:6;623:13;614:22;;645:32;671:5;645:32;:::i;:::-;542:141;;;;:::o;689:126::-;726:7;766:42;759:5;755:54;744:65;;689:126;;;:::o;821:96::-;858:7;887:24;905:5;887:24;:::i;:::-;876:35;;821:96;;;:::o;923:122::-;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;1051:143::-;1108:5;1139:6;1133:13;1124:22;;1155:33;1182:5;1155:33;:::i;:::-;1051:143;;;;:::o;1200:505::-;1278:6;1286;1335:2;1323:9;1314:7;1310:23;1306:32;1303:119;;;1341:79;;:::i;:::-;1303:119;1461:1;1486:63;1541:7;1532:6;1521:9;1517:22;1486:63;:::i;:::-;1476:73;;1432:127;1598:2;1624:64;1680:7;1671:6;1660:9;1656:22;1624:64;:::i;:::-;1614:74;;1569:129;1200:505;;;;;:::o;127:292:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@attacker_6": {
									"entryPoint": 162,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fakePrice_4": {
									"entryPoint": 157,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@latestAnswer_30": {
									"entryPoint": 199,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1017:1",
										"nodeType": "YulBlock",
										"src": "0:1017:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:32:1",
													"nodeType": "YulBlock",
													"src": "51:32:1",
													"statements": [
														{
															"nativeSrc": "61:16:1",
															"nodeType": "YulAssignment",
															"src": "61:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "72:5:1",
																"nodeType": "YulIdentifier",
																"src": "72:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7:76:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:1",
														"nodeType": "YulTypedName",
														"src": "33:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:1",
														"nodeType": "YulTypedName",
														"src": "43:7:1",
														"type": ""
													}
												],
												"src": "7:76:1"
											},
											{
												"body": {
													"nativeSrc": "152:52:1",
													"nodeType": "YulBlock",
													"src": "152:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "169:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "169:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "191:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "191:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "174:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "174:16:1"
																		},
																		"nativeSrc": "174:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "174:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "162:6:1"
																},
																"nativeSrc": "162:36:1",
																"nodeType": "YulFunctionCall",
																"src": "162:36:1"
															},
															"nativeSrc": "162:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "162:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "89:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "140:5:1",
														"nodeType": "YulTypedName",
														"src": "140:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "147:3:1",
														"nodeType": "YulTypedName",
														"src": "147:3:1",
														"type": ""
													}
												],
												"src": "89:115:1"
											},
											{
												"body": {
													"nativeSrc": "306:122:1",
													"nodeType": "YulBlock",
													"src": "306:122:1",
													"statements": [
														{
															"nativeSrc": "316:26:1",
															"nodeType": "YulAssignment",
															"src": "316:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "328:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "328:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "339:2:1",
																		"nodeType": "YulLiteral",
																		"src": "339:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "324:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:1"
																},
																"nativeSrc": "324:18:1",
																"nodeType": "YulFunctionCall",
																"src": "324:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "316:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "352:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "352:41:1"
																},
																"nativeSrc": "352:69:1",
																"nodeType": "YulFunctionCall",
																"src": "352:69:1"
															},
															"nativeSrc": "352:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "352:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "210:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "278:9:1",
														"nodeType": "YulTypedName",
														"src": "278:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "290:6:1",
														"nodeType": "YulTypedName",
														"src": "290:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "301:4:1",
														"nodeType": "YulTypedName",
														"src": "301:4:1",
														"type": ""
													}
												],
												"src": "210:218:1"
											},
											{
												"body": {
													"nativeSrc": "479:81:1",
													"nodeType": "YulBlock",
													"src": "479:81:1",
													"statements": [
														{
															"nativeSrc": "489:65:1",
															"nodeType": "YulAssignment",
															"src": "489:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "504:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:42:1",
																		"nodeType": "YulLiteral",
																		"src": "511:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:54:1",
																"nodeType": "YulFunctionCall",
																"src": "500:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "434:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:1",
														"nodeType": "YulTypedName",
														"src": "461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:1",
														"nodeType": "YulTypedName",
														"src": "471:7:1",
														"type": ""
													}
												],
												"src": "434:126:1"
											},
											{
												"body": {
													"nativeSrc": "611:51:1",
													"nodeType": "YulBlock",
													"src": "611:51:1",
													"statements": [
														{
															"nativeSrc": "621:35:1",
															"nodeType": "YulAssignment",
															"src": "621:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "650:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "650:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "632:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "632:17:1"
																},
																"nativeSrc": "632:24:1",
																"nodeType": "YulFunctionCall",
																"src": "632:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "621:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "621:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "566:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "593:5:1",
														"nodeType": "YulTypedName",
														"src": "593:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "603:7:1",
														"nodeType": "YulTypedName",
														"src": "603:7:1",
														"type": ""
													}
												],
												"src": "566:96:1"
											},
											{
												"body": {
													"nativeSrc": "733:53:1",
													"nodeType": "YulBlock",
													"src": "733:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "750:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "750:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "773:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "755:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "755:17:1"
																		},
																		"nativeSrc": "755:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "755:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:1"
																},
																"nativeSrc": "743:37:1",
																"nodeType": "YulFunctionCall",
																"src": "743:37:1"
															},
															"nativeSrc": "743:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "743:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "668:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:1",
														"nodeType": "YulTypedName",
														"src": "721:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "728:3:1",
														"nodeType": "YulTypedName",
														"src": "728:3:1",
														"type": ""
													}
												],
												"src": "668:118:1"
											},
											{
												"body": {
													"nativeSrc": "890:124:1",
													"nodeType": "YulBlock",
													"src": "890:124:1",
													"statements": [
														{
															"nativeSrc": "900:26:1",
															"nodeType": "YulAssignment",
															"src": "900:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "912:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "912:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "923:2:1",
																		"nodeType": "YulLiteral",
																		"src": "923:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "908:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nativeSrc": "908:18:1",
																"nodeType": "YulFunctionCall",
																"src": "908:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "900:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "900:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:1"
																		},
																		"nativeSrc": "989:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "936:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "936:43:1"
																},
																"nativeSrc": "936:71:1",
																"nodeType": "YulFunctionCall",
																"src": "936:71:1"
															},
															"nativeSrc": "936:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "936:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "792:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "862:9:1",
														"nodeType": "YulTypedName",
														"src": "862:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "874:6:1",
														"nodeType": "YulTypedName",
														"src": "874:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "885:4:1",
														"nodeType": "YulTypedName",
														"src": "885:4:1",
														"type": ""
													}
												],
												"src": "792:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806321a1fc6d1461004357806348eb76ee1461006157806350d25bcd1461007f575b5f80fd5b61004b61009d565b60405161005891906100e7565b60405180910390f35b6100696100a2565b604051610076919061013f565b60405180910390f35b6100876100c7565b60405161009491906100e7565b60405180910390f35b5f5481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054905090565b5f819050919050565b6100e1816100cf565b82525050565b5f6020820190506100fa5f8301846100d8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61012982610100565b9050919050565b6101398161011f565b82525050565b5f6020820190506101525f830184610130565b9291505056fea264697066735822122037c8598488168846738830a7f39070903449e0e2ebde8b3f38136ad7594426d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x21A1FC6D EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x48EB76EE EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x7F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0xCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA PUSH0 DUP4 ADD DUP5 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x129 DUP3 PUSH2 0x100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139 DUP2 PUSH2 0x11F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x152 PUSH0 DUP4 ADD DUP5 PUSH2 0x130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xC8 MSIZE DUP5 DUP9 AND DUP9 CHAINID PUSH20 0x8830A7F39070903449E0E2EBDE8B3F38136AD759 PREVRANDAO 0x26 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "127:292:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;182;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;153:23;;;;:::o;182:::-;;;;;;;;;;;;;:::o;329:88::-;376:6;401:9;;394:16;;329:88;:::o;7:76:1:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "79600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attacker()": "2508",
								"fakePrice()": "2402",
								"latestAnswer()": "2454"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 212,
									"end": 323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 212,
									"end": 323,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 280,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 268,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 268,
									"end": 286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 268,
									"end": 286,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 268,
									"end": 286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 307,
									"end": 316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 304,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 296,
									"end": 316,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 296,
									"end": 316,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 296,
									"end": 316,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 296,
									"end": 316,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 323,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 388,
									"end": 404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 388,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 416,
									"end": 536,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 416,
									"end": 536,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 488,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 505,
									"end": 510,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 488,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 488,
									"end": 511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 488,
									"end": 511,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 488,
									"end": 511,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 486,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 478,
									"end": 512,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 468,
									"end": 530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 468,
									"end": 530,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 468,
									"end": 530,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 468,
									"end": 530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 416,
									"end": 536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 542,
									"end": 683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 598,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 623,
									"end": 636,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 614,
									"end": 636,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 614,
									"end": 636,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 645,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 645,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 645,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 645,
									"end": 677,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 645,
									"end": 677,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 689,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 726,
									"end": 733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 766,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 764,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 755,
									"end": 809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 744,
									"end": 809,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 744,
									"end": 809,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 815,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 689,
									"end": 815,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 821,
									"end": 917,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 821,
									"end": 917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 858,
									"end": 865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 905,
									"end": 910,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 887,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 887,
									"end": 911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 887,
									"end": 911,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 887,
									"end": 911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 876,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 876,
									"end": 911,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 821,
									"end": 917,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 821,
									"end": 917,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 821,
									"end": 917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 821,
									"end": 917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1146,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1124,
									"end": 1146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1124,
									"end": 1146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1182,
									"end": 1187,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1155,
									"end": 1188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1155,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1194,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1194,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1278,
									"end": 1284,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1292,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1335,
									"end": 1337,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1332,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1321,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1333,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1338,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1422,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1303,
									"end": 1422,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1341,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1341,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1341,
									"end": 1420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1341,
									"end": 1420,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1341,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1422,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1303,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1541,
									"end": 1548,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1538,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1539,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1486,
									"end": 1549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1549,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1486,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1549,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1598,
									"end": 1600,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1680,
									"end": 1687,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1677,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 1669,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1624,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1624,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1624,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1569,
									"end": 1698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1200,
									"end": 1705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 127,
									"end": 419,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 127,
									"end": 419,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 419,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037c8598488168846738830a7f39070903449e0e2ebde8b3f38136ad7594426d664736f6c634300081a0033",
									".code": [
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "21A1FC6D"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "48EB76EE"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "50D25BCD"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 153,
											"end": 176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 153,
											"end": 176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 182,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 182,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 83,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 83,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 77,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 77,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 77,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 83,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 89,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 174,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 191,
											"end": 196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 174,
											"end": 197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 174,
											"end": 197,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 162,
											"end": 198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 89,
											"end": 204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 210,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 301,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 341,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 324,
											"end": 342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 352,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 352,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 352,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 566,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 621,
											"end": 656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 668,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 755,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 755,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 750,
											"end": 753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 743,
											"end": 780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 908,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 900,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 900,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 936,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attacker()": "48eb76ee",
							"fakePrice()": "21a1fc6d",
							"latestAnswer()": "50d25bcd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_price\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"_attacker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attacker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fakePrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FakeOracle - Masquerades as a Chainlink-like price oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":\"FakeOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol\":{\"keccak256\":\"0x7684a91041ce3c94fe05a698a430c7fd0ddfb81e80b72e3f062f0c08c62ae130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13e8045161cb1264c7a91734be5d30bf4c24bfece300edda003ab2d166235066\",\"dweb:/ipfs/QmbotxUxAm515Wk2ergQsDcf5BYBJqtYpXsKxW2WoXbBmF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol:FakeOracle",
								"label": "fakePrice",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 6,
								"contract": "M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol:FakeOracle",
								"label": "attacker",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol": {
				"ast": {
					"absolutePath": "M/Masquerade Attack/Masquerade via Contract Identity Spoofing.sol",
					"exportedSymbols": {
						"FakeOracle": [
							31
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FakeOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:69:0",
								"text": "@title FakeOracle - Masquerades as a Chainlink-like price oracle"
							},
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "FakeOracle",
							"nameLocation": "136:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "21a1fc6d",
									"id": 4,
									"mutability": "mutable",
									"name": "fakePrice",
									"nameLocation": "167:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "153:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 3,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "153:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48eb76ee",
									"id": 6,
									"mutability": "mutable",
									"name": "attacker",
									"nameLocation": "197:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "182:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "182:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "258:65:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "fakePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "268:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "280:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "268:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "268:18:0"
											},
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "attacker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "296:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 18,
														"name": "_attacker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "307:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "296:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "296:20:0"
											}
										]
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "224:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 7,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "224:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_attacker",
												"nameLocation": "247:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "239:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:34:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:0:0"
									},
									"scope": 31,
									"src": "212:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "384:33:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"name": "fakePrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "401:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 26,
												"id": 28,
												"nodeType": "Return",
												"src": "394:16:0"
											}
										]
									},
									"functionSelector": "50d25bcd",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestAnswer",
									"nameLocation": "338:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "376:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 24,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:8:0"
									},
									"scope": 31,
									"src": "329:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 32,
							"src": "127:292:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:388:0"
				},
				"id": 0
			}
		}
	}
}