contract ZeroDayFuzzROI {
    IThreatUplink public uplink;
    SimStrategyAI public strategy;

    constructor(address _uplink, address _strategy) {
        uplink = IThreatUplink(_uplink);
        strategy = SimStrategyAI(_strategy);
    }

    event FuzzTested(bytes4 selector, bool success, uint256 roi);

    function fuzzExecute(address target, uint8 rounds) external {
        for (uint8 i = 0; i < rounds; i++) {
            bytes4 sel = bytes4(keccak256(abi.encodePacked(block.timestamp, i)));
            (bool ok, ) = target.call(abi.encodePacked(sel));

            uplink.logThreat(sel, "ZeroDayFuzz", "Auto-fuzz drift attempt");
            strategy.evolve(sel, i);
            strategy.logResult(strategy.payloadCount() - 1, ok);

            emit FuzzTested(sel, ok, ok ? 1 : 0);
        }
    }
}
