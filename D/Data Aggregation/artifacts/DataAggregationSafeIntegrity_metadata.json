{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_minValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxValue",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AGG__InvalidData",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "enum DataAggregationDefenseType",
						"name": "defense",
						"type": "uint8"
					}
				],
				"name": "DataAdded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_DEVIATION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "addData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dataPoints",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addData(uint256,uint256)": {
					"notice": "✅ enforce value ∈ [minValue, maxValue] and within MAX_DEVIATION of previous"
				}
			},
			"notice": "───────────────────────────────────────────────────────────────────────────── 4) SAFE AGGREGATOR WITH INTEGRITY CHECK & OUTLIER FILTER    • Defense: IntegrityCheck – accept only values within configured range                 OutlierFilter – reject extreme outliers   ─────────────────────────────────────────────────────────────────────────────",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"D/Data Aggregation/Data Aggregation.sol": "DataAggregationSafeIntegrity"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"D/Data Aggregation/Data Aggregation.sol": {
			"keccak256": "0x58d81598a3855dc1734c3906eae140ffa076f3d56edf9ccd2d318f6dee63bf88",
			"license": "MIT",
			"urls": [
				"bzz-raw://817e9a482aeb76aa1523f04498931aeb201c5c2047b1758a0fbec528f235f9e3",
				"dweb:/ipfs/QmeshAEEVnw2EyfFQ6JHJxKF7DiyKXU815LYFxVP8h9i4G"
			]
		}
	},
	"version": 1
}