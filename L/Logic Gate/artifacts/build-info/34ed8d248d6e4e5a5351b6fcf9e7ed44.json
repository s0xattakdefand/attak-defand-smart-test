{
	"id": "34ed8d248d6e4e5a5351b6fcf9e7ed44",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol": {
				"content": "// DAO Access requires: isMember AND (isActive OR hasDelegate)\ncontract DaoLogicAccess {\n    function canVote(\n        bool isMember,\n        bool isActive,\n        bool hasDelegate\n    ) external pure returns (bool) {\n        return isMember && (isActive || hasDelegate); // AND-OR combo\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol": {
				"DaoLogicAccess": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isMember",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "hasDelegate",
									"type": "bool"
								}
							],
							"name": "canVote",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":63:296  contract DaoLogicAccess {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":63:296  contract DaoLogicAccess {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x223d3534\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":93:294  function canVote(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":211:215  bool */\n      0x00\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":234:242  isMember */\n      dup4\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":234:271  isMember && (isActive || hasDelegate) */\n      dup1\n      iszero\n      tag_11\n      jumpi\n      pop\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":247:255  isActive */\n      dup3\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":247:270  isActive || hasDelegate */\n      dup1\n      tag_12\n      jumpi\n      pop\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":259:270  hasDelegate */\n      dup2\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":247:270  isActive || hasDelegate */\n    tag_12:\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":234:271  isMember && (isActive || hasDelegate) */\n    tag_11:\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":227:271  return isMember && (isActive || hasDelegate) */\n      swap1\n      pop\n        /* \"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":93:294  function canVote(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_14:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_16:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_17:\n        /* \"#utility.yul\":500:521   */\n      tag_26\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_16\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_27\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_27:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_18:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_29\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_17\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1292   */\n    tag_6:\n        /* \"#utility.yul\":759:765   */\n      0x00\n        /* \"#utility.yul\":767:773   */\n      dup1\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x60\n        /* \"#utility.yul\":812:821   */\n      dup5\n        /* \"#utility.yul\":803:810   */\n      dup7\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:911   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":830:909   */\n      tag_32\n      tag_14\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":792:911   */\n    tag_31:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":975:1025   */\n      tag_33\n        /* \"#utility.yul\":1017:1024   */\n      dup7\n        /* \"#utility.yul\":1008:1014   */\n      dup3\n        /* \"#utility.yul\":997:1006   */\n      dup8\n        /* \"#utility.yul\":993:1015   */\n      add\n        /* \"#utility.yul\":975:1025   */\n      tag_18\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":965:1025   */\n      swap4\n      pop\n        /* \"#utility.yul\":921:1035   */\n      pop\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1100:1150   */\n      tag_34\n        /* \"#utility.yul\":1142:1149   */\n      dup7\n        /* \"#utility.yul\":1133:1139   */\n      dup3\n        /* \"#utility.yul\":1122:1131   */\n      dup8\n        /* \"#utility.yul\":1118:1140   */\n      add\n        /* \"#utility.yul\":1100:1150   */\n      tag_18\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1090:1150   */\n      swap3\n      pop\n        /* \"#utility.yul\":1045:1160   */\n      pop\n        /* \"#utility.yul\":1199:1201   */\n      0x40\n        /* \"#utility.yul\":1225:1275   */\n      tag_35\n        /* \"#utility.yul\":1267:1274   */\n      dup7\n        /* \"#utility.yul\":1258:1264   */\n      dup3\n        /* \"#utility.yul\":1247:1256   */\n      dup8\n        /* \"#utility.yul\":1243:1265   */\n      add\n        /* \"#utility.yul\":1225:1275   */\n      tag_18\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1215:1275   */\n      swap2\n      pop\n        /* \"#utility.yul\":1170:1285   */\n      pop\n        /* \"#utility.yul\":691:1292   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1298:1407   */\n    tag_19:\n        /* \"#utility.yul\":1379:1400   */\n      tag_37\n        /* \"#utility.yul\":1394:1399   */\n      dup2\n        /* \"#utility.yul\":1379:1400   */\n      tag_16\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1374:1377   */\n      dup3\n        /* \"#utility.yul\":1367:1401   */\n      mstore\n        /* \"#utility.yul\":1298:1407   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1413:1623   */\n    tag_9:\n        /* \"#utility.yul\":1500:1504   */\n      0x00\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1527:1536   */\n      dup3\n        /* \"#utility.yul\":1523:1541   */\n      add\n        /* \"#utility.yul\":1515:1541   */\n      swap1\n      pop\n        /* \"#utility.yul\":1551:1616   */\n      tag_39\n        /* \"#utility.yul\":1613:1614   */\n      0x00\n        /* \"#utility.yul\":1602:1611   */\n      dup4\n        /* \"#utility.yul\":1598:1615   */\n      add\n        /* \"#utility.yul\":1589:1595   */\n      dup5\n        /* \"#utility.yul\":1551:1616   */\n      tag_19\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1413:1623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204b53a82da1ae38348954b16bd250ec0a4fefec8e14094706b609b3b93f7a6f4e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101608061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063223d35341461002d575b5f80fd5b610047600480360381019061004291906100b2565b61005d565b6040516100549190610111565b60405180910390f35b5f8380156100705750828061006f5750815b5b90509392505050565b5f80fd5b5f8115159050919050565b6100918161007d565b811461009b575f80fd5b50565b5f813590506100ac81610088565b92915050565b5f805f606084860312156100c9576100c8610079565b5b5f6100d68682870161009e565b93505060206100e78682870161009e565b92505060406100f88682870161009e565b9150509250925092565b61010b8161007d565b82525050565b5f6020820190506101245f830184610102565b9291505056fea26469706673582212204b53a82da1ae38348954b16bd250ec0a4fefec8e14094706b609b3b93f7a6f4e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x223D3534 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xB2 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 DUP1 ISZERO PUSH2 0x70 JUMPI POP DUP3 DUP1 PUSH2 0x6F JUMPI POP DUP2 JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91 DUP2 PUSH2 0x7D JUMP JUMPDEST DUP2 EQ PUSH2 0x9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC DUP2 PUSH2 0x88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9 JUMPI PUSH2 0xC8 PUSH2 0x79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD6 DUP7 DUP3 DUP8 ADD PUSH2 0x9E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7 DUP7 DUP3 DUP8 ADD PUSH2 0x9E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF8 DUP7 DUP3 DUP8 ADD PUSH2 0x9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x10B DUP2 PUSH2 0x7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124 PUSH0 DUP4 ADD DUP5 PUSH2 0x102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B MSTORE8 0xA8 0x2D LOG1 0xAE CODESIZE CALLVALUE DUP10 SLOAD 0xB1 PUSH12 0xD250EC0A4FEFEC8E14094706 0xB6 MULMOD 0xB3 0xB9 EXTCODEHASH PUSH27 0x6F4E64736F6C634300081A00330000000000000000000000000000 ",
							"sourceMap": "63:233:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@canVote_19": {
									"entryPoint": 93,
									"id": 19,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_boolt_bool": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1626:1",
										"nodeType": "YulBlock",
										"src": "0:1626:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "376:48:1",
													"nodeType": "YulBlock",
													"src": "376:48:1",
													"statements": [
														{
															"nativeSrc": "386:32:1",
															"nodeType": "YulAssignment",
															"src": "386:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "411:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "404:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:1"
																		},
																		"nativeSrc": "404:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "397:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:1"
																},
																"nativeSrc": "397:21:1",
																"nodeType": "YulFunctionCall",
																"src": "397:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "386:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "334:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "358:5:1",
														"nodeType": "YulTypedName",
														"src": "358:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "368:7:1",
														"nodeType": "YulTypedName",
														"src": "368:7:1",
														"type": ""
													}
												],
												"src": "334:90:1"
											},
											{
												"body": {
													"nativeSrc": "470:76:1",
													"nodeType": "YulBlock",
													"src": "470:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "524:16:1",
																"nodeType": "YulBlock",
																"src": "524:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "533:1:1",
																					"nodeType": "YulLiteral",
																					"src": "533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:1",
																					"nodeType": "YulLiteral",
																					"src": "536:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "526:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:1"
																			},
																			"nativeSrc": "526:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:1"
																		},
																		"nativeSrc": "526:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "493:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "515:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "500:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:1"
																				},
																				"nativeSrc": "500:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "490:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:1"
																		},
																		"nativeSrc": "490:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "483:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:1"
																},
																"nativeSrc": "483:40:1",
																"nodeType": "YulFunctionCall",
																"src": "483:40:1"
															},
															"nativeSrc": "480:60:1",
															"nodeType": "YulIf",
															"src": "480:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "430:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"src": "430:116:1"
											},
											{
												"body": {
													"nativeSrc": "601:84:1",
													"nodeType": "YulBlock",
													"src": "601:84:1",
													"statements": [
														{
															"nativeSrc": "611:29:1",
															"nodeType": "YulAssignment",
															"src": "611:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "620:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:1"
																},
																"nativeSrc": "620:20:1",
																"nodeType": "YulFunctionCall",
																"src": "620:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "611:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "649:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:1"
																},
																"nativeSrc": "649:30:1",
																"nodeType": "YulFunctionCall",
																"src": "649:30:1"
															},
															"nativeSrc": "649:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "649:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "552:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "579:6:1",
														"nodeType": "YulTypedName",
														"src": "579:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "587:3:1",
														"nodeType": "YulTypedName",
														"src": "587:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "595:5:1",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"src": "552:133:1"
											},
											{
												"body": {
													"nativeSrc": "782:510:1",
													"nodeType": "YulBlock",
													"src": "782:510:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "828:83:1",
																"nodeType": "YulBlock",
																"src": "828:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "830:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:77:1"
																			},
																			"nativeSrc": "830:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "830:79:1"
																		},
																		"nativeSrc": "830:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "830:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "803:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:1"
																		},
																		"nativeSrc": "799:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "824:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "795:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:1"
																},
																"nativeSrc": "795:32:1",
																"nodeType": "YulFunctionCall",
																"src": "795:32:1"
															},
															"nativeSrc": "792:119:1",
															"nodeType": "YulIf",
															"src": "792:119:1"
														},
														{
															"nativeSrc": "921:114:1",
															"nodeType": "YulBlock",
															"src": "921:114:1",
															"statements": [
																{
																	"nativeSrc": "936:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "936:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "950:1:1",
																		"nodeType": "YulLiteral",
																		"src": "950:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "940:6:1",
																			"nodeType": "YulTypedName",
																			"src": "940:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "965:60:1",
																	"nodeType": "YulAssignment",
																	"src": "965:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "997:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "997:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1008:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1008:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "993:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "993:3:1"
																				},
																				"nativeSrc": "993:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "993:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1017:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1017:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "975:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "975:17:1"
																		},
																		"nativeSrc": "975:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "975:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "965:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "965:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1045:115:1",
															"nodeType": "YulBlock",
															"src": "1045:115:1",
															"statements": [
																{
																	"nativeSrc": "1060:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1060:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1064:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1064:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:60:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1122:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1122:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1133:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1133:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1118:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1118:3:1"
																				},
																				"nativeSrc": "1118:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1118:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1142:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1142:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1100:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:17:1"
																		},
																		"nativeSrc": "1100:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1170:115:1",
															"nodeType": "YulBlock",
															"src": "1170:115:1",
															"statements": [
																{
																	"nativeSrc": "1185:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1185:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1199:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1199:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1189:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1189:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1215:60:1",
																	"nodeType": "YulAssignment",
																	"src": "1215:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1247:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1247:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1258:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1258:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1243:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1243:3:1"
																				},
																				"nativeSrc": "1243:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1243:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1267:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1267:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1225:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1225:17:1"
																		},
																		"nativeSrc": "1225:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1225:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1215:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1215:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_boolt_bool",
												"nativeSrc": "691:601:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:1",
														"nodeType": "YulTypedName",
														"src": "736:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "747:7:1",
														"nodeType": "YulTypedName",
														"src": "747:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "759:6:1",
														"nodeType": "YulTypedName",
														"src": "759:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "767:6:1",
														"nodeType": "YulTypedName",
														"src": "767:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "775:6:1",
														"nodeType": "YulTypedName",
														"src": "775:6:1",
														"type": ""
													}
												],
												"src": "691:601:1"
											},
											{
												"body": {
													"nativeSrc": "1357:50:1",
													"nodeType": "YulBlock",
													"src": "1357:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1374:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1374:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1394:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1394:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1379:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1379:14:1"
																		},
																		"nativeSrc": "1379:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:1"
																},
																"nativeSrc": "1367:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1367:34:1"
															},
															"nativeSrc": "1367:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1367:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1298:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1345:5:1",
														"nodeType": "YulTypedName",
														"src": "1345:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1352:3:1",
														"nodeType": "YulTypedName",
														"src": "1352:3:1",
														"type": ""
													}
												],
												"src": "1298:109:1"
											},
											{
												"body": {
													"nativeSrc": "1505:118:1",
													"nodeType": "YulBlock",
													"src": "1505:118:1",
													"statements": [
														{
															"nativeSrc": "1515:26:1",
															"nodeType": "YulAssignment",
															"src": "1515:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1527:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1538:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1523:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:1"
																},
																"nativeSrc": "1523:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1523:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1515:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1515:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1589:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1589:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1602:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1602:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1613:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1613:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1598:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1598:3:1"
																		},
																		"nativeSrc": "1598:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1598:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1551:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1551:37:1"
																},
																"nativeSrc": "1551:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1551:65:1"
															},
															"nativeSrc": "1551:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1551:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1413:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1477:9:1",
														"nodeType": "YulTypedName",
														"src": "1477:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1489:6:1",
														"nodeType": "YulTypedName",
														"src": "1489:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1500:4:1",
														"nodeType": "YulTypedName",
														"src": "1500:4:1",
														"type": ""
													}
												],
												"src": "1413:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_boolt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063223d35341461002d575b5f80fd5b610047600480360381019061004291906100b2565b61005d565b6040516100549190610111565b60405180910390f35b5f8380156100705750828061006f5750815b5b90509392505050565b5f80fd5b5f8115159050919050565b6100918161007d565b811461009b575f80fd5b50565b5f813590506100ac81610088565b92915050565b5f805f606084860312156100c9576100c8610079565b5b5f6100d68682870161009e565b93505060206100e78682870161009e565b92505060406100f88682870161009e565b9150509250925092565b61010b8161007d565b82525050565b5f6020820190506101245f830184610102565b9291505056fea26469706673582212204b53a82da1ae38348954b16bd250ec0a4fefec8e14094706b609b3b93f7a6f4e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x223D3534 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xB2 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP4 DUP1 ISZERO PUSH2 0x70 JUMPI POP DUP3 DUP1 PUSH2 0x6F JUMPI POP DUP2 JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91 DUP2 PUSH2 0x7D JUMP JUMPDEST DUP2 EQ PUSH2 0x9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC DUP2 PUSH2 0x88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC9 JUMPI PUSH2 0xC8 PUSH2 0x79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD6 DUP7 DUP3 DUP8 ADD PUSH2 0x9E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE7 DUP7 DUP3 DUP8 ADD PUSH2 0x9E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF8 DUP7 DUP3 DUP8 ADD PUSH2 0x9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x10B DUP2 PUSH2 0x7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124 PUSH0 DUP4 ADD DUP5 PUSH2 0x102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B MSTORE8 0xA8 0x2D LOG1 0xAE CODESIZE CALLVALUE DUP10 SLOAD 0xB1 PUSH12 0xD250EC0A4FEFEC8E14094706 0xB6 MULMOD 0xB3 0xB9 EXTCODEHASH PUSH27 0x6F4E64736F6C634300081A00330000000000000000000000000000 ",
							"sourceMap": "63:233:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;211:4;234:8;:37;;;;;247:8;:23;;;;259:11;247:23;234:37;227:44;;93:201;;;;;:::o;88:117:1:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:601::-;759:6;767;775;824:2;812:9;803:7;799:23;795:32;792:119;;;830:79;;:::i;:::-;792:119;950:1;975:50;1017:7;1008:6;997:9;993:22;975:50;:::i;:::-;965:60;;921:114;1074:2;1100:50;1142:7;1133:6;1122:9;1118:22;1100:50;:::i;:::-;1090:60;;1045:115;1199:2;1225:50;1267:7;1258:6;1247:9;1243:22;1225:50;:::i;:::-;1215:60;;1170:115;691:601;;;;;:::o;1298:109::-;1379:21;1394:5;1379:21;:::i;:::-;1374:3;1367:34;1298:109;;:::o;1413:210::-;1500:4;1538:2;1527:9;1523:18;1515:26;;1551:65;1613:1;1602:9;1598:17;1589:6;1551:65;:::i;:::-;1413:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "70400",
								"executionCost": "115",
								"totalCost": "70515"
							},
							"external": {
								"canVote(bool,bool,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 296,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 296,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b53a82da1ae38348954b16bd250ec0a4fefec8e14094706b609b3b93f7a6f4e64736f6c634300081a0033",
									".code": [
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "223D3534"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 93,
											"end": 294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 234,
											"end": 271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 234,
											"end": 271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 234,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 234,
											"end": 271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 247,
											"end": 255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 247,
											"end": 270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 247,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 247,
											"end": 270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 247,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 247,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 271,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 792,
											"end": 911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 830,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 830,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 830,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 830,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 830,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 792,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 975,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 975,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1025,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 965,
											"end": 1025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 921,
											"end": 1035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1100,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1100,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1150,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1225,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1225,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 1292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1298,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1394,
											"end": 1399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1379,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1623,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1413,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1551,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1616,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1551,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1623,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"canVote(bool,bool,bool)": "223d3534"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isMember\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDelegate\",\"type\":\"bool\"}],\"name\":\"canVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":\"DaoLogicAccess\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\":{\"keccak256\":\"0x8ea8f2c415b2ee894701ee130340f764b501ece008f2c3329cae77bbc3e04031\",\"urls\":[\"bzz-raw://16317a7a36945ea1989d52f6d7575c3d8463f59000eff1efa21dbf001def13b7\",\"dweb:/ipfs/QmWmFQUhA6hKSoZ7BaXzudEaQDMjyet3DS7ThPF626X9M6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol": {
				"ast": {
					"absolutePath": "L/Logic Gate/Real use cases DAOV VOTING system with logic gate enforcement.sol",
					"exportedSymbols": {
						"DaoLogicAccess": [
							20
						]
					},
					"id": 21,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DaoLogicAccess",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "DaoLogicAccess",
							"nameLocation": "72:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "217:77:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 11,
														"name": "isMember",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "234:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 12,
																	"name": "isActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "247:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 13,
																	"name": "hasDelegate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "259:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "247:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 15,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "246:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "234:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 10,
												"id": 17,
												"nodeType": "Return",
												"src": "227:44:0"
											}
										]
									},
									"functionSelector": "223d3534",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canVote",
									"nameLocation": "102:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2,
												"mutability": "mutable",
												"name": "isMember",
												"nameLocation": "124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "147:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "142:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "142:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "hasDelegate",
												"nameLocation": "170:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "165:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:78:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 8,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:6:0"
									},
									"scope": 20,
									"src": "93:201:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "63:233:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "63:234:0"
				},
				"id": 0
			}
		}
	}
}