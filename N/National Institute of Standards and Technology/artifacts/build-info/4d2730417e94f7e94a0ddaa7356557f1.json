{
	"id": "4d2730417e94f7e94a0ddaa7356557f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol": {
				"content": "contract Proxy {\n    address public implementation;\n\n    function upgradeTo(address newImpl) external {\n        // Add NIST-based checks: signature, quorum, etc.\n        implementation = newImpl;\n    }\n\n    fallback() external payable {\n        address impl = implementation;\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), impl, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImpl",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":0:616  contract Proxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":0:616  contract Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":245:257  address impl */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":260:274  implementation */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":245:274  address impl = implementation */\n      swap1\n      pop\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":326:340  calldatasize() */\n      calldatasize\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":323:324  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":320:321  0 */\n      dup1\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":307:341  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":416:417  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":413:414  0 */\n      dup1\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":397:411  calldatasize() */\n      calldatasize\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":394:395  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":388:392  impl */\n      dup5\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":381:386  gas() */\n      gas\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":368:418  delegatecall(gas(), impl, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":452:468  returndatasize() */\n      returndatasize\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":449:450  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":446:447  0 */\n      dup1\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":431:469  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":489:495  result */\n      dup1\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":513:514  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":508:546  case 0 { revert(0, returndatasize()) } */\n      dup2\n      eq\n      tag_8\n      jumpi\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":579:595  returndatasize() */\n      returndatasize\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":576:577  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":569:596  return(0, returndatasize()) */\n      return\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":508:546  case 0 { revert(0, returndatasize()) } */\n    tag_8:\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":527:543  returndatasize() */\n      returndatasize\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":524:525  0 */\n      0x00\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":517:544  revert(0, returndatasize()) */\n      revert\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":57:201  function upgradeTo(address newImpl) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":21:50  address public implementation */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":57:201  function upgradeTo(address newImpl) external {... */\n    tag_13:\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":187:194  newImpl */\n      dup1\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":170:184  implementation */\n      0x00\n      dup1\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":170:194  implementation = newImpl */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":57:201  function upgradeTo(address newImpl) external {... */\n      pop\n      jump\t// out\n        /* \"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\xe2\\x80\\x93 Proxy Pattern.sol\":21:50  address public implementation */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_21:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_23:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_24:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_34\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_23\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_25:\n        /* \"#utility.yul\":641:665   */\n      tag_36\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_24\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_37:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_26:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_39\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_12:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_42\n      tag_21\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":917:1036   */\n    tag_41:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_43\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_26\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_27:\n        /* \"#utility.yul\":1263:1287   */\n      tag_45\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_24\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_18:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_47\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220011873c45dcdf0b6143f7763b570299392efafb4466aae47e1f45219b61dd4f664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061020e8061001c5f395ff3fe60806040526004361061002c575f3560e01c80633659cfe6146100705780635c60da1b146100985761002d565b5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050365f80375f80365f845af43d5f803e805f811461006c573d5ff35b3d5ffd5b34801561007b575f80fd5b5061009660048036038101906100919190610185565b6100c2565b005b3480156100a3575f80fd5b506100ac610104565b6040516100b991906101bf565b60405180910390f35b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101548261012b565b9050919050565b6101648161014a565b811461016e575f80fd5b50565b5f8135905061017f8161015b565b92915050565b5f6020828403121561019a57610199610127565b5b5f6101a784828501610171565b91505092915050565b6101b98161014a565b82525050565b5f6020820190506101d25f8301846101b0565b9291505056fea2646970667358221220011873c45dcdf0b6143f7763b570299392efafb4466aae47e1f45219b61dd4f664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x98 JUMPI PUSH2 0x2D JUMP JUMPDEST JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x6C JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x185 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x154 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164 DUP2 PUSH2 0x14A JUMP JUMPDEST DUP2 EQ PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F DUP2 PUSH2 0x15B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0x127 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7 DUP5 DUP3 DUP6 ADD PUSH2 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x14A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD XOR PUSH20 0xC45DCDF0B6143F7763B570299392EFAFB4466AAE SELFBALANCE 0xE1 DELEGATECALL MSTORE NOT 0xB6 SAR 0xD4 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:616:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@implementation_2": {
									"entryPoint": 260,
									"id": 2,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeTo_12": {
									"entryPoint": 194,
									"id": 12,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1525:1",
										"nodeType": "YulBlock",
										"src": "0:1525:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1241:53:1",
													"nodeType": "YulBlock",
													"src": "1241:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:1"
																		},
																		"nativeSrc": "1263:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:1"
																},
																"nativeSrc": "1251:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:1"
															},
															"nativeSrc": "1251:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:1",
														"nodeType": "YulTypedName",
														"src": "1229:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:1",
														"nodeType": "YulTypedName",
														"src": "1236:3:1",
														"type": ""
													}
												],
												"src": "1176:118:1"
											},
											{
												"body": {
													"nativeSrc": "1398:124:1",
													"nodeType": "YulBlock",
													"src": "1398:124:1",
													"statements": [
														{
															"nativeSrc": "1408:26:1",
															"nodeType": "YulAssignment",
															"src": "1408:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:1"
																},
																"nativeSrc": "1416:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1408:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1488:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1501:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1444:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:1"
																},
																"nativeSrc": "1444:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1444:71:1"
															},
															"nativeSrc": "1444:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1300:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1370:9:1",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1382:6:1",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1393:4:1",
														"nodeType": "YulTypedName",
														"src": "1393:4:1",
														"type": ""
													}
												],
												"src": "1300:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002c575f3560e01c80633659cfe6146100705780635c60da1b146100985761002d565b5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050365f80375f80365f845af43d5f803e805f811461006c573d5ff35b3d5ffd5b34801561007b575f80fd5b5061009660048036038101906100919190610185565b6100c2565b005b3480156100a3575f80fd5b506100ac610104565b6040516100b991906101bf565b60405180910390f35b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101548261012b565b9050919050565b6101648161014a565b811461016e575f80fd5b50565b5f8135905061017f8161015b565b92915050565b5f6020828403121561019a57610199610127565b5b5f6101a784828501610171565b91505092915050565b6101b98161014a565b82525050565b5f6020820190506101d25f8301846101b0565b9291505056fea2646970667358221220011873c45dcdf0b6143f7763b570299392efafb4466aae47e1f45219b61dd4f664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x98 JUMPI PUSH2 0x2D JUMP JUMPDEST JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x6C JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x185 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x154 DUP3 PUSH2 0x12B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164 DUP2 PUSH2 0x14A JUMP JUMPDEST DUP2 EQ PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17F DUP2 PUSH2 0x15B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0x127 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7 DUP5 DUP3 DUP6 ADD PUSH2 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x14A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD XOR PUSH20 0xC45DCDF0B6143F7763B570299392EFAFB4466AAE SELFBALANCE 0xE1 DELEGATECALL MSTORE NOT 0xB6 SAR 0xD4 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:616:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;245:12;260:14;;;;;;;;;;;245:29;;326:14;323:1;320;307:34;416:1;413;397:14;394:1;388:4;381:5;368:50;452:16;449:1;446;431:38;489:6;513:1;508:38;;;;579:16;576:1;569:27;508:38;527:16;524:1;517:27;57:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;57:144;187:7;170:14;;:24;;;;;;;;;;;;;;;;;;57:144;:::o;21:29::-;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "105200",
								"executionCost": "151",
								"totalCost": "105351"
							},
							"external": {
								"": "infinite",
								"implementation()": "2505",
								"upgradeTo(address)": "24693"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 616,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 616,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220011873c45dcdf0b6143f7763b570299392efafb4466aae47e1f45219b61dd4f664736f6c634300081a0033",
									".code": [
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH",
											"source": 0,
											"value": "5C60DA1B"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 616,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 245,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 260,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 340,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 416,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 411,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 394,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 388,
											"end": 392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 381,
											"end": 386,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 368,
											"end": 418,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 452,
											"end": 468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 431,
											"end": 469,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 489,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 508,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 508,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 579,
											"end": 595,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 508,
											"end": 546,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 508,
											"end": 546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 543,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21,
											"end": 50,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21,
											"end": 50,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21,
											"end": 50,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21,
											"end": 50,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\u2013 Proxy Pattern.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) \\u2013 Proxy Pattern.sol\":{\"keccak256\":\"0x0d23890c918c1728faf2f28a519b01fdf42d1d702536fc9cabac258f3ed7ad41\",\"urls\":[\"bzz-raw://82723b5da619ef20194d9b128576e368c87e2519f867f4c2fab9a6915035a20f\",\"dweb:/ipfs/QmXoDRDooEVfsZGmdskQu8yWyKowgyTs8f1RxxtCmT1gBS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2,
								"contract": "N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol:Proxy",
								"label": "implementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol:1:1:\n  |\n1 | contract Proxy {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n --> N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol:9:5:\n  |\n9 |     fallback() external payable {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 614,
						"file": "N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol",
						"message": "The payable fallback function is defined here.",
						"start": 207
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 616,
					"file": "N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol",
					"start": 0
				},
				"type": "Warning"
			}
		],
		"sources": {
			"N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol": {
				"ast": {
					"absolutePath": "N/National Institute of Standards and Technology/Upgradable Architecture (NIST CM) – Proxy Pattern.sol",
					"exportedSymbols": {
						"Proxy": [
							22
						]
					},
					"id": 23,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Proxy",
							"nameLocation": "9:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 2,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "36:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 22,
									"src": "21:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "21:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "102:99:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 7,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "170:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 8,
														"name": "newImpl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "170:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "170:24:0"
											}
										]
									},
									"functionSelector": "3659cfe6",
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "66:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "newImpl",
												"nameLocation": "84:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "76:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75:17:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:0:0"
									},
									"scope": 22,
									"src": "57:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "235:379:0",
										"statements": [
											{
												"assignments": [
													16
												],
												"declarations": [
													{
														"constant": false,
														"id": 16,
														"mutability": "mutable",
														"name": "impl",
														"nameLocation": "253:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 20,
														"src": "245:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 15,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "245:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 18,
												"initialValue": {
													"id": 17,
													"name": "implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2,
													"src": "260:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "245:29:0"
											},
											{
												"AST": {
													"nativeSrc": "293:315:0",
													"nodeType": "YulBlock",
													"src": "293:315:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:0",
																		"nodeType": "YulLiteral",
																		"src": "320:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "323:1:0",
																		"nodeType": "YulLiteral",
																		"src": "323:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "326:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "326:12:0"
																		},
																		"nativeSrc": "326:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "326:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "307:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "307:12:0"
																},
																"nativeSrc": "307:34:0",
																"nodeType": "YulFunctionCall",
																"src": "307:34:0"
															},
															"nativeSrc": "307:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "307:34:0"
														},
														{
															"nativeSrc": "354:64:0",
															"nodeType": "YulVariableDeclaration",
															"src": "354:64:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "381:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "381:3:0"
																		},
																		"nativeSrc": "381:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "381:5:0"
																	},
																	{
																		"name": "impl",
																		"nativeSrc": "388:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "388:4:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "394:1:0",
																		"nodeType": "YulLiteral",
																		"src": "394:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "397:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "397:12:0"
																		},
																		"nativeSrc": "397:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "397:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "413:1:0",
																		"nodeType": "YulLiteral",
																		"src": "413:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "416:1:0",
																		"nodeType": "YulLiteral",
																		"src": "416:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "368:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "368:12:0"
																},
																"nativeSrc": "368:50:0",
																"nodeType": "YulFunctionCall",
																"src": "368:50:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "358:6:0",
																	"nodeType": "YulTypedName",
																	"src": "358:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "446:1:0",
																		"nodeType": "YulLiteral",
																		"src": "446:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "449:1:0",
																		"nodeType": "YulLiteral",
																		"src": "449:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "452:14:0",
																			"nodeType": "YulIdentifier",
																			"src": "452:14:0"
																		},
																		"nativeSrc": "452:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "452:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "431:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "431:14:0"
																},
																"nativeSrc": "431:38:0",
																"nodeType": "YulFunctionCall",
																"src": "431:38:0"
															},
															"nativeSrc": "431:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "431:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "515:31:0",
																		"nodeType": "YulBlock",
																		"src": "515:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "524:1:0",
																							"nodeType": "YulLiteral",
																							"src": "524:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "527:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "527:14:0"
																							},
																							"nativeSrc": "527:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "527:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "517:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "517:6:0"
																					},
																					"nativeSrc": "517:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "517:27:0"
																				},
																				"nativeSrc": "517:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "517:27:0"
																			}
																		]
																	},
																	"nativeSrc": "508:38:0",
																	"nodeType": "YulCase",
																	"src": "508:38:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "513:1:0",
																		"nodeType": "YulLiteral",
																		"src": "513:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "567:31:0",
																		"nodeType": "YulBlock",
																		"src": "567:31:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "576:1:0",
																							"nodeType": "YulLiteral",
																							"src": "576:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "579:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "579:14:0"
																							},
																							"nativeSrc": "579:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "579:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "569:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "569:6:0"
																					},
																					"nativeSrc": "569:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "569:27:0"
																				},
																				"nativeSrc": "569:27:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "569:27:0"
																			}
																		]
																	},
																	"nativeSrc": "559:39:0",
																	"nodeType": "YulCase",
																	"src": "559:39:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "489:6:0",
																"nodeType": "YulIdentifier",
																"src": "489:6:0"
															},
															"nativeSrc": "482:116:0",
															"nodeType": "YulSwitch",
															"src": "482:116:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 16,
														"isOffset": false,
														"isSlot": false,
														"src": "388:4:0",
														"valueSize": 1
													}
												],
												"id": 19,
												"nodeType": "InlineAssembly",
												"src": "284:324:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"scope": 22,
									"src": "207:407:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 23,
							"src": "0:616:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:617:0"
				},
				"id": 0
			}
		}
	}
}