{
	"id": "6ce3442d971d441db58be5d9424c408f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"N/Netmask/SubnetAccessRegistry.sol": {
				"content": "contract SubnetAccessRegistry {\n    struct Subnet {\n        uint160 mask;\n        uint160 base;\n    }\n\n    mapping(address => Subnet) public permitted;\n\n    function register(address user, uint160 mask, uint160 base) external {\n        permitted[user] = Subnet(mask, base);\n    }\n\n    function isInSubnet(address user, address query) external view returns (bool) {\n        Subnet memory s = permitted[user];\n        return (uint160(query) & s.mask) == s.base;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"N/Netmask/SubnetAccessRegistry.sol": {
				"SubnetAccessRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "query",
									"type": "address"
								}
							],
							"name": "isInSubnet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "permitted",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "mask",
									"type": "uint160"
								},
								{
									"internalType": "uint160",
									"name": "base",
									"type": "uint160"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "mask",
									"type": "uint160"
								},
								{
									"internalType": "uint160",
									"name": "base",
									"type": "uint160"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"N/Netmask/SubnetAccessRegistry.sol\":0:467  contract SubnetAccessRegistry {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":0:467  contract SubnetAccessRegistry {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6cc301e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb651eb77\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd633134f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":107:150  mapping(address => Subnet) public permitted */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":157:279  function register(address user, uint160 mask, uint160 base) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":285:465  function isInSubnet(address user, address query) external view returns (bool) {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":107:150  mapping(address => Subnet) public permitted */\n    tag_9:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":157:279  function register(address user, uint160 mask, uint160 base) external {... */\n    tag_15:\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":254:272  Subnet(mask, base) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":261:265  mask */\n      dup4\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":254:272  Subnet(mask, base) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":267:271  base */\n      dup3\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":254:272  Subnet(mask, base) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":236:245  permitted */\n      0x00\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":236:251  permitted[user] */\n      dup1\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":246:250  user */\n      dup6\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":236:251  permitted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":236:272  permitted[user] = Subnet(mask, base) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":157:279  function register(address user, uint160 mask, uint160 base) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":285:465  function isInSubnet(address user, address query) external view returns (bool) {... */\n    tag_19:\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":357:361  bool */\n      0x00\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":373:388  Subnet memory s */\n      dup1\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":391:400  permitted */\n      0x00\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":391:406  permitted[user] */\n      dup1\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":401:405  user */\n      dup6\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":391:406  permitted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":373:406  Subnet memory s = permitted[user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":452:453  s */\n      dup1\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":452:458  s.base */\n      0x20\n      add\n      mload\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":423:458  (uint160(query) & s.mask) == s.base */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":441:442  s */\n      dup2\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":441:447  s.mask */\n      0x00\n      add\n      mload\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":432:437  query */\n      dup5\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":424:447  uint160(query) & s.mask */\n      and\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":423:458  (uint160(query) & s.mask) == s.base */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":416:458  return (uint160(query) & s.mask) == s.base */\n      swap2\n      pop\n      pop\n        /* \"N/Netmask/SubnetAccessRegistry.sol\":285:465  function isInSubnet(address user, address query) external view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_25:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_27:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_28:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_42\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_27\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_29:\n        /* \"#utility.yul\":641:665   */\n      tag_44\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_28\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_45:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_30:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_47\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_29\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_50\n      tag_25\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":917:1036   */\n    tag_49:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_51\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_30\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_31:\n        /* \"#utility.yul\":1263:1287   */\n      tag_53\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_27\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1632   */\n    tag_11:\n        /* \"#utility.yul\":1421:1425   */\n      0x00\n        /* \"#utility.yul\":1459:1461   */\n      0x40\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1444:1462   */\n      add\n        /* \"#utility.yul\":1436:1462   */\n      swap1\n      pop\n        /* \"#utility.yul\":1472:1543   */\n      tag_55\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1529:1538   */\n      dup4\n        /* \"#utility.yul\":1525:1542   */\n      add\n        /* \"#utility.yul\":1516:1522   */\n      dup6\n        /* \"#utility.yul\":1472:1543   */\n      tag_31\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1553:1625   */\n      tag_56\n        /* \"#utility.yul\":1621:1623   */\n      0x20\n        /* \"#utility.yul\":1610:1619   */\n      dup4\n        /* \"#utility.yul\":1606:1624   */\n      add\n        /* \"#utility.yul\":1597:1603   */\n      dup5\n        /* \"#utility.yul\":1553:1625   */\n      tag_31\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1300:1632   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1638:1760   */\n    tag_32:\n        /* \"#utility.yul\":1711:1735   */\n      tag_58\n        /* \"#utility.yul\":1729:1734   */\n      dup2\n        /* \"#utility.yul\":1711:1735   */\n      tag_27\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1704:1709   */\n      dup2\n        /* \"#utility.yul\":1701:1736   */\n      eq\n        /* \"#utility.yul\":1691:1754   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1750:1751   */\n      0x00\n        /* \"#utility.yul\":1747:1748   */\n      dup1\n        /* \"#utility.yul\":1740:1752   */\n      revert\n        /* \"#utility.yul\":1691:1754   */\n    tag_59:\n        /* \"#utility.yul\":1638:1760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1766:1905   */\n    tag_33:\n        /* \"#utility.yul\":1812:1817   */\n      0x00\n        /* \"#utility.yul\":1850:1856   */\n      dup2\n        /* \"#utility.yul\":1837:1857   */\n      calldataload\n        /* \"#utility.yul\":1828:1857   */\n      swap1\n      pop\n        /* \"#utility.yul\":1866:1899   */\n      tag_61\n        /* \"#utility.yul\":1893:1898   */\n      dup2\n        /* \"#utility.yul\":1866:1899   */\n      tag_32\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1766:1905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1911:2530   */\n    tag_14:\n        /* \"#utility.yul\":1988:1994   */\n      0x00\n        /* \"#utility.yul\":1996:2002   */\n      dup1\n        /* \"#utility.yul\":2004:2010   */\n      0x00\n        /* \"#utility.yul\":2053:2055   */\n      0x60\n        /* \"#utility.yul\":2041:2050   */\n      dup5\n        /* \"#utility.yul\":2032:2039   */\n      dup7\n        /* \"#utility.yul\":2028:2051   */\n      sub\n        /* \"#utility.yul\":2024:2056   */\n      slt\n        /* \"#utility.yul\":2021:2140   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2059:2138   */\n      tag_64\n      tag_25\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2021:2140   */\n    tag_63:\n        /* \"#utility.yul\":2179:2180   */\n      0x00\n        /* \"#utility.yul\":2204:2257   */\n      tag_65\n        /* \"#utility.yul\":2249:2256   */\n      dup7\n        /* \"#utility.yul\":2240:2246   */\n      dup3\n        /* \"#utility.yul\":2229:2238   */\n      dup8\n        /* \"#utility.yul\":2225:2247   */\n      add\n        /* \"#utility.yul\":2204:2257   */\n      tag_30\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2194:2257   */\n      swap4\n      pop\n        /* \"#utility.yul\":2150:2267   */\n      pop\n        /* \"#utility.yul\":2306:2308   */\n      0x20\n        /* \"#utility.yul\":2332:2385   */\n      tag_66\n        /* \"#utility.yul\":2377:2384   */\n      dup7\n        /* \"#utility.yul\":2368:2374   */\n      dup3\n        /* \"#utility.yul\":2357:2366   */\n      dup8\n        /* \"#utility.yul\":2353:2375   */\n      add\n        /* \"#utility.yul\":2332:2385   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2322:2385   */\n      swap3\n      pop\n        /* \"#utility.yul\":2277:2395   */\n      pop\n        /* \"#utility.yul\":2434:2436   */\n      0x40\n        /* \"#utility.yul\":2460:2513   */\n      tag_67\n        /* \"#utility.yul\":2505:2512   */\n      dup7\n        /* \"#utility.yul\":2496:2502   */\n      dup3\n        /* \"#utility.yul\":2485:2494   */\n      dup8\n        /* \"#utility.yul\":2481:2503   */\n      add\n        /* \"#utility.yul\":2460:2513   */\n      tag_33\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2450:2513   */\n      swap2\n      pop\n        /* \"#utility.yul\":2405:2523   */\n      pop\n        /* \"#utility.yul\":1911:2530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2536:3010   */\n    tag_18:\n        /* \"#utility.yul\":2604:2610   */\n      0x00\n        /* \"#utility.yul\":2612:2618   */\n      dup1\n        /* \"#utility.yul\":2661:2663   */\n      0x40\n        /* \"#utility.yul\":2649:2658   */\n      dup4\n        /* \"#utility.yul\":2640:2647   */\n      dup6\n        /* \"#utility.yul\":2636:2659   */\n      sub\n        /* \"#utility.yul\":2632:2664   */\n      slt\n        /* \"#utility.yul\":2629:2748   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2667:2746   */\n      tag_70\n      tag_25\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2629:2748   */\n    tag_69:\n        /* \"#utility.yul\":2787:2788   */\n      0x00\n        /* \"#utility.yul\":2812:2865   */\n      tag_71\n        /* \"#utility.yul\":2857:2864   */\n      dup6\n        /* \"#utility.yul\":2848:2854   */\n      dup3\n        /* \"#utility.yul\":2837:2846   */\n      dup7\n        /* \"#utility.yul\":2833:2855   */\n      add\n        /* \"#utility.yul\":2812:2865   */\n      tag_30\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2802:2865   */\n      swap3\n      pop\n        /* \"#utility.yul\":2758:2875   */\n      pop\n        /* \"#utility.yul\":2914:2916   */\n      0x20\n        /* \"#utility.yul\":2940:2993   */\n      tag_72\n        /* \"#utility.yul\":2985:2992   */\n      dup6\n        /* \"#utility.yul\":2976:2982   */\n      dup3\n        /* \"#utility.yul\":2965:2974   */\n      dup7\n        /* \"#utility.yul\":2961:2983   */\n      add\n        /* \"#utility.yul\":2940:2993   */\n      tag_30\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2930:2993   */\n      swap2\n      pop\n        /* \"#utility.yul\":2885:3003   */\n      pop\n        /* \"#utility.yul\":2536:3010   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3016:3106   */\n    tag_34:\n        /* \"#utility.yul\":3050:3057   */\n      0x00\n        /* \"#utility.yul\":3093:3098   */\n      dup2\n        /* \"#utility.yul\":3086:3099   */\n      iszero\n        /* \"#utility.yul\":3079:3100   */\n      iszero\n        /* \"#utility.yul\":3068:3100   */\n      swap1\n      pop\n        /* \"#utility.yul\":3016:3106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3112:3221   */\n    tag_35:\n        /* \"#utility.yul\":3193:3214   */\n      tag_75\n        /* \"#utility.yul\":3208:3213   */\n      dup2\n        /* \"#utility.yul\":3193:3214   */\n      tag_34\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3188:3191   */\n      dup3\n        /* \"#utility.yul\":3181:3215   */\n      mstore\n        /* \"#utility.yul\":3112:3221   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3227:3437   */\n    tag_21:\n        /* \"#utility.yul\":3314:3318   */\n      0x00\n        /* \"#utility.yul\":3352:3354   */\n      0x20\n        /* \"#utility.yul\":3341:3350   */\n      dup3\n        /* \"#utility.yul\":3337:3355   */\n      add\n        /* \"#utility.yul\":3329:3355   */\n      swap1\n      pop\n        /* \"#utility.yul\":3365:3430   */\n      tag_77\n        /* \"#utility.yul\":3427:3428   */\n      0x00\n        /* \"#utility.yul\":3416:3425   */\n      dup4\n        /* \"#utility.yul\":3412:3429   */\n      add\n        /* \"#utility.yul\":3403:3409   */\n      dup5\n        /* \"#utility.yul\":3365:3430   */\n      tag_35\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3227:3437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122099bfb0fccf01b83cd308246661f099baeaf2b0b403f02d672818e2869f0c2b5164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506105418061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80636cc301e314610043578063b651eb7714610074578063d633134f14610090575b5f80fd5b61005d600480360381019061005891906103bf565b6100c0565b60405161006b9291906103f9565b60405180910390f35b61008e6004803603810190610089919061044a565b61011d565b005b6100aa60048036038101906100a5919061049a565b61022c565b6040516100b791906104f2565b60405180910390f35b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b5f805f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806020015173ffffffffffffffffffffffffffffffffffffffff16815f0151841673ffffffffffffffffffffffffffffffffffffffff161491505092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61038e82610365565b9050919050565b61039e81610384565b81146103a8575f80fd5b50565b5f813590506103b981610395565b92915050565b5f602082840312156103d4576103d3610361565b5b5f6103e1848285016103ab565b91505092915050565b6103f381610365565b82525050565b5f60408201905061040c5f8301856103ea565b61041960208301846103ea565b9392505050565b61042981610365565b8114610433575f80fd5b50565b5f8135905061044481610420565b92915050565b5f805f6060848603121561046157610460610361565b5b5f61046e868287016103ab565b935050602061047f86828701610436565b925050604061049086828701610436565b9150509250925092565b5f80604083850312156104b0576104af610361565b5b5f6104bd858286016103ab565b92505060206104ce858286016103ab565b9150509250929050565b5f8115159050919050565b6104ec816104d8565b82525050565b5f6020820190506105055f8301846104e3565b9291505056fea264697066735822122099bfb0fccf01b83cd308246661f099baeaf2b0b403f02d672818e2869f0c2b5164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CC301E3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB651EB77 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0xD633134F EQ PUSH2 0x90 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP3 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD DUP5 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x38E DUP3 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x384 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B9 DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3E1 DUP5 DUP3 DUP6 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F3 DUP2 PUSH2 0x365 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40C PUSH0 DUP4 ADD DUP6 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x419 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x429 DUP2 PUSH2 0x365 JUMP JUMPDEST DUP2 EQ PUSH2 0x433 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x444 DUP2 PUSH2 0x420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x46E DUP7 DUP3 DUP8 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x47F DUP7 DUP3 DUP8 ADD PUSH2 0x436 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x490 DUP7 DUP3 DUP8 ADD PUSH2 0x436 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4BD DUP6 DUP3 DUP7 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4CE DUP6 DUP3 DUP7 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x4D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x505 PUSH0 DUP4 ADD DUP5 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xBF 0xB0 0xFC 0xCF ADD 0xB8 EXTCODECOPY 0xD3 ADDMOD 0x24 PUSH7 0x61F099BAEAF2B0 0xB4 SUB CREATE 0x2D PUSH8 0x2818E2869F0C2B51 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:467:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isInSubnet_58": {
									"entryPoint": 556,
									"id": 58,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@permitted_10": {
									"entryPoint": 192,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@register_29": {
									"entryPoint": 285,
									"id": 29,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint160t_uint160": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160_t_uint160__to_t_uint160_t_uint160__fromStack_reversed": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3440:1",
										"nodeType": "YulBlock",
										"src": "0:3440:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1241:53:1",
													"nodeType": "YulBlock",
													"src": "1241:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "1263:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:1"
																		},
																		"nativeSrc": "1263:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:1"
																},
																"nativeSrc": "1251:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:1"
															},
															"nativeSrc": "1251:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "1176:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:1",
														"nodeType": "YulTypedName",
														"src": "1229:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:1",
														"nodeType": "YulTypedName",
														"src": "1236:3:1",
														"type": ""
													}
												],
												"src": "1176:118:1"
											},
											{
												"body": {
													"nativeSrc": "1426:206:1",
													"nodeType": "YulBlock",
													"src": "1426:206:1",
													"statements": [
														{
															"nativeSrc": "1436:26:1",
															"nodeType": "YulAssignment",
															"src": "1436:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1459:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1444:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1444:3:1"
																},
																"nativeSrc": "1444:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1444:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1436:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1436:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1516:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1516:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1529:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1540:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1540:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1525:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:1"
																		},
																		"nativeSrc": "1525:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "1472:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1472:43:1"
																},
																"nativeSrc": "1472:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1472:71:1"
															},
															"nativeSrc": "1472:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1472:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1597:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1610:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1606:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:1"
																		},
																		"nativeSrc": "1606:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "1553:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:1"
																},
																"nativeSrc": "1553:72:1",
																"nodeType": "YulFunctionCall",
																"src": "1553:72:1"
															},
															"nativeSrc": "1553:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "1553:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160_t_uint160__to_t_uint160_t_uint160__fromStack_reversed",
												"nativeSrc": "1300:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:1",
														"nodeType": "YulTypedName",
														"src": "1390:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1402:6:1",
														"nodeType": "YulTypedName",
														"src": "1402:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1410:6:1",
														"nodeType": "YulTypedName",
														"src": "1410:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1421:4:1",
														"nodeType": "YulTypedName",
														"src": "1421:4:1",
														"type": ""
													}
												],
												"src": "1300:332:1"
											},
											{
												"body": {
													"nativeSrc": "1681:79:1",
													"nodeType": "YulBlock",
													"src": "1681:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1738:16:1",
																"nodeType": "YulBlock",
																"src": "1738:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1747:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1750:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1750:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1740:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:1"
																			},
																			"nativeSrc": "1740:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1740:12:1"
																		},
																		"nativeSrc": "1740:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1740:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1704:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1704:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1729:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1729:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1711:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1711:17:1"
																				},
																				"nativeSrc": "1711:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1711:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1701:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1701:2:1"
																		},
																		"nativeSrc": "1701:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1701:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1694:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1694:6:1"
																},
																"nativeSrc": "1694:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1694:43:1"
															},
															"nativeSrc": "1691:63:1",
															"nodeType": "YulIf",
															"src": "1691:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "1638:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1674:5:1",
														"nodeType": "YulTypedName",
														"src": "1674:5:1",
														"type": ""
													}
												],
												"src": "1638:122:1"
											},
											{
												"body": {
													"nativeSrc": "1818:87:1",
													"nodeType": "YulBlock",
													"src": "1818:87:1",
													"statements": [
														{
															"nativeSrc": "1828:29:1",
															"nodeType": "YulAssignment",
															"src": "1828:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1850:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1850:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1837:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1837:12:1"
																},
																"nativeSrc": "1837:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1837:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1828:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1828:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1893:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1893:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "1866:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1866:26:1"
																},
																"nativeSrc": "1866:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1866:33:1"
															},
															"nativeSrc": "1866:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1866:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint160",
												"nativeSrc": "1766:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1796:6:1",
														"nodeType": "YulTypedName",
														"src": "1796:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1804:3:1",
														"nodeType": "YulTypedName",
														"src": "1804:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1812:5:1",
														"nodeType": "YulTypedName",
														"src": "1812:5:1",
														"type": ""
													}
												],
												"src": "1766:139:1"
											},
											{
												"body": {
													"nativeSrc": "2011:519:1",
													"nodeType": "YulBlock",
													"src": "2011:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2057:83:1",
																"nodeType": "YulBlock",
																"src": "2057:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2059:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2059:77:1"
																			},
																			"nativeSrc": "2059:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2059:79:1"
																		},
																		"nativeSrc": "2059:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2059:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2032:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2032:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2041:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2041:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2028:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:1"
																		},
																		"nativeSrc": "2028:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2053:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2024:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2024:3:1"
																},
																"nativeSrc": "2024:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2024:32:1"
															},
															"nativeSrc": "2021:119:1",
															"nodeType": "YulIf",
															"src": "2021:119:1"
														},
														{
															"nativeSrc": "2150:117:1",
															"nodeType": "YulBlock",
															"src": "2150:117:1",
															"statements": [
																{
																	"nativeSrc": "2165:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2165:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2179:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2179:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2169:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2169:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2194:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2194:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2229:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2229:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2240:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2240:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2225:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2225:3:1"
																				},
																				"nativeSrc": "2225:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2225:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2249:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2204:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2204:20:1"
																		},
																		"nativeSrc": "2204:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2194:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2194:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2277:118:1",
															"nodeType": "YulBlock",
															"src": "2277:118:1",
															"statements": [
																{
																	"nativeSrc": "2292:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2292:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2306:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2306:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2296:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2296:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2322:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2322:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2357:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2357:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2368:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2353:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2353:3:1"
																				},
																				"nativeSrc": "2353:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2353:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2377:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2377:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160",
																			"nativeSrc": "2332:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2332:20:1"
																		},
																		"nativeSrc": "2332:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2332:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2322:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2322:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2405:118:1",
															"nodeType": "YulBlock",
															"src": "2405:118:1",
															"statements": [
																{
																	"nativeSrc": "2420:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2420:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2434:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2434:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2424:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2424:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2450:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2450:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2485:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2485:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2496:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2496:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2481:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2481:3:1"
																				},
																				"nativeSrc": "2481:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2481:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2505:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2505:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160",
																			"nativeSrc": "2460:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2460:20:1"
																		},
																		"nativeSrc": "2460:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2460:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2450:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2450:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint160t_uint160",
												"nativeSrc": "1911:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1965:9:1",
														"nodeType": "YulTypedName",
														"src": "1965:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1976:7:1",
														"nodeType": "YulTypedName",
														"src": "1976:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1988:6:1",
														"nodeType": "YulTypedName",
														"src": "1988:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1996:6:1",
														"nodeType": "YulTypedName",
														"src": "1996:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2004:6:1",
														"nodeType": "YulTypedName",
														"src": "2004:6:1",
														"type": ""
													}
												],
												"src": "1911:619:1"
											},
											{
												"body": {
													"nativeSrc": "2619:391:1",
													"nodeType": "YulBlock",
													"src": "2619:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2665:83:1",
																"nodeType": "YulBlock",
																"src": "2665:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2667:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2667:77:1"
																			},
																			"nativeSrc": "2667:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:79:1"
																		},
																		"nativeSrc": "2667:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2640:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2649:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2649:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:1"
																		},
																		"nativeSrc": "2636:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2661:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2632:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2632:3:1"
																},
																"nativeSrc": "2632:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2632:32:1"
															},
															"nativeSrc": "2629:119:1",
															"nodeType": "YulIf",
															"src": "2629:119:1"
														},
														{
															"nativeSrc": "2758:117:1",
															"nodeType": "YulBlock",
															"src": "2758:117:1",
															"statements": [
																{
																	"nativeSrc": "2773:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2773:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2787:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2787:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2777:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2777:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2802:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2802:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2837:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2837:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2848:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2848:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2833:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2833:3:1"
																				},
																				"nativeSrc": "2833:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2833:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2857:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2857:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2812:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2812:20:1"
																		},
																		"nativeSrc": "2812:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2802:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2802:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2885:118:1",
															"nodeType": "YulBlock",
															"src": "2885:118:1",
															"statements": [
																{
																	"nativeSrc": "2900:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2900:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2914:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2914:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2904:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2904:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2930:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2930:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2965:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2965:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2976:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2976:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2961:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2961:3:1"
																				},
																				"nativeSrc": "2961:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2961:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2985:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2985:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2940:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2940:20:1"
																		},
																		"nativeSrc": "2940:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2940:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2930:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2930:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2536:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2581:9:1",
														"nodeType": "YulTypedName",
														"src": "2581:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2592:7:1",
														"nodeType": "YulTypedName",
														"src": "2592:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2604:6:1",
														"nodeType": "YulTypedName",
														"src": "2604:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2612:6:1",
														"nodeType": "YulTypedName",
														"src": "2612:6:1",
														"type": ""
													}
												],
												"src": "2536:474:1"
											},
											{
												"body": {
													"nativeSrc": "3058:48:1",
													"nodeType": "YulBlock",
													"src": "3058:48:1",
													"statements": [
														{
															"nativeSrc": "3068:32:1",
															"nodeType": "YulAssignment",
															"src": "3068:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3093:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3093:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3086:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3086:6:1"
																		},
																		"nativeSrc": "3086:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3086:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3079:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3079:6:1"
																},
																"nativeSrc": "3079:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3079:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3068:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3068:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3016:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3040:5:1",
														"nodeType": "YulTypedName",
														"src": "3040:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3050:7:1",
														"nodeType": "YulTypedName",
														"src": "3050:7:1",
														"type": ""
													}
												],
												"src": "3016:90:1"
											},
											{
												"body": {
													"nativeSrc": "3171:50:1",
													"nodeType": "YulBlock",
													"src": "3171:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3188:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3208:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3208:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3193:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3193:14:1"
																		},
																		"nativeSrc": "3193:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3193:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3181:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:1"
																},
																"nativeSrc": "3181:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3181:34:1"
															},
															"nativeSrc": "3181:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3181:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3112:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3159:5:1",
														"nodeType": "YulTypedName",
														"src": "3159:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3166:3:1",
														"nodeType": "YulTypedName",
														"src": "3166:3:1",
														"type": ""
													}
												],
												"src": "3112:109:1"
											},
											{
												"body": {
													"nativeSrc": "3319:118:1",
													"nodeType": "YulBlock",
													"src": "3319:118:1",
													"statements": [
														{
															"nativeSrc": "3329:26:1",
															"nodeType": "YulAssignment",
															"src": "3329:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3341:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3341:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3337:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3337:3:1"
																},
																"nativeSrc": "3337:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3337:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3329:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3329:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3403:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3416:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3416:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3427:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3427:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3412:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3412:3:1"
																		},
																		"nativeSrc": "3412:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3412:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3365:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3365:37:1"
																},
																"nativeSrc": "3365:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3365:65:1"
															},
															"nativeSrc": "3365:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3365:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3227:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3291:9:1",
														"nodeType": "YulTypedName",
														"src": "3291:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3303:6:1",
														"nodeType": "YulTypedName",
														"src": "3303:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3314:4:1",
														"nodeType": "YulTypedName",
														"src": "3314:4:1",
														"type": ""
													}
												],
												"src": "3227:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_tuple_t_uint160_t_uint160__to_t_uint160_t_uint160__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint160t_uint160(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint160(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint160(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80636cc301e314610043578063b651eb7714610074578063d633134f14610090575b5f80fd5b61005d600480360381019061005891906103bf565b6100c0565b60405161006b9291906103f9565b60405180910390f35b61008e6004803603810190610089919061044a565b61011d565b005b6100aa60048036038101906100a5919061049a565b61022c565b6040516100b791906104f2565b60405180910390f35b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152505f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b5f805f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806020015173ffffffffffffffffffffffffffffffffffffffff16815f0151841673ffffffffffffffffffffffffffffffffffffffff161491505092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61038e82610365565b9050919050565b61039e81610384565b81146103a8575f80fd5b50565b5f813590506103b981610395565b92915050565b5f602082840312156103d4576103d3610361565b5b5f6103e1848285016103ab565b91505092915050565b6103f381610365565b82525050565b5f60408201905061040c5f8301856103ea565b61041960208301846103ea565b9392505050565b61042981610365565b8114610433575f80fd5b50565b5f8135905061044481610420565b92915050565b5f805f6060848603121561046157610460610361565b5b5f61046e868287016103ab565b935050602061047f86828701610436565b925050604061049086828701610436565b9150509250925092565b5f80604083850312156104b0576104af610361565b5b5f6104bd858286016103ab565b92505060206104ce858286016103ab565b9150509250929050565b5f8115159050919050565b6104ec816104d8565b82525050565b5f6020820190506105055f8301846104e3565b9291505056fea264697066735822122099bfb0fccf01b83cd308246661f099baeaf2b0b403f02d672818e2869f0c2b5164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CC301E3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB651EB77 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0xD633134F EQ PUSH2 0x90 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP3 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD MLOAD DUP5 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x38E DUP3 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x384 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3B9 DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3E1 DUP5 DUP3 DUP6 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F3 DUP2 PUSH2 0x365 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x40C PUSH0 DUP4 ADD DUP6 PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x419 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x429 DUP2 PUSH2 0x365 JUMP JUMPDEST DUP2 EQ PUSH2 0x433 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x444 DUP2 PUSH2 0x420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x46E DUP7 DUP3 DUP8 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x47F DUP7 DUP3 DUP8 ADD PUSH2 0x436 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x490 DUP7 DUP3 DUP8 ADD PUSH2 0x436 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0x361 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4BD DUP6 DUP3 DUP7 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4CE DUP6 DUP3 DUP7 ADD PUSH2 0x3AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x4D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x505 PUSH0 DUP4 ADD DUP5 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xBF 0xB0 0xFC 0xCF ADD 0xB8 EXTCODECOPY 0xD3 ADDMOD 0x24 PUSH7 0x61F099BAEAF2B0 0xB4 SUB CREATE 0x2D PUSH8 0x2818E2869F0C2B51 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:467:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;107:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;157:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;285:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;107:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;157:122::-;254:18;;;;;;;;261:4;254:18;;;;;;267:4;254:18;;;;;236:9;:15;246:4;236:15;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;157:122;;;:::o;285:180::-;357:4;373:15;391:9;:15;401:4;391:15;;;;;;;;;;;;;;;373:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:1;:6;;;423:35;;441:1;:6;;;432:5;424:23;423:35;;;416:42;;;285:180;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:332::-;1421:4;1459:2;1448:9;1444:18;1436:26;;1472:71;1540:1;1529:9;1525:17;1516:6;1472:71;:::i;:::-;1553:72;1621:2;1610:9;1606:18;1597:6;1553:72;:::i;:::-;1300:332;;;;;:::o;1638:122::-;1711:24;1729:5;1711:24;:::i;:::-;1704:5;1701:35;1691:63;;1750:1;1747;1740:12;1691:63;1638:122;:::o;1766:139::-;1812:5;1850:6;1837:20;1828:29;;1866:33;1893:5;1866:33;:::i;:::-;1766:139;;;;:::o;1911:619::-;1988:6;1996;2004;2053:2;2041:9;2032:7;2028:23;2024:32;2021:119;;;2059:79;;:::i;:::-;2021:119;2179:1;2204:53;2249:7;2240:6;2229:9;2225:22;2204:53;:::i;:::-;2194:63;;2150:117;2306:2;2332:53;2377:7;2368:6;2357:9;2353:22;2332:53;:::i;:::-;2322:63;;2277:118;2434:2;2460:53;2505:7;2496:6;2485:9;2481:22;2460:53;:::i;:::-;2450:63;;2405:118;1911:619;;;;;:::o;2536:474::-;2604:6;2612;2661:2;2649:9;2640:7;2636:23;2632:32;2629:119;;;2667:79;;:::i;:::-;2629:119;2787:1;2812:53;2857:7;2848:6;2837:9;2833:22;2812:53;:::i;:::-;2802:63;;2758:117;2914:2;2940:53;2985:7;2976:6;2965:9;2961:22;2940:53;:::i;:::-;2930:63;;2885:118;2536:474;;;;;:::o;3016:90::-;3050:7;3093:5;3086:13;3079:21;3068:32;;3016:90;;;:::o;3112:109::-;3193:21;3208:5;3193:21;:::i;:::-;3188:3;3181:34;3112:109;;:::o;3227:210::-;3314:4;3352:2;3341:9;3337:18;3329:26;;3365:65;3427:1;3416:9;3412:17;3403:6;3365:65;:::i;:::-;3227:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "269000",
								"executionCost": "310",
								"totalCost": "269310"
							},
							"external": {
								"isInSubnet(address,address)": "infinite",
								"permitted(address)": "infinite",
								"register(address,uint160,uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 467,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099bfb0fccf01b83cd308246661f099baeaf2b0b403f02d672818e2869f0c2b5164736f6c634300081a0033",
									".code": [
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "6CC301E3"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "B651EB77"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "D633134F"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 107,
											"end": 150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 107,
											"end": 150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 107,
											"end": 150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 157,
											"end": 279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 157,
											"end": 279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 285,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 285,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 285,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 157,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 261,
											"end": 265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 254,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 285,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 391,
											"end": 406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 423,
											"end": 458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 441,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 441,
											"end": 447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 432,
											"end": 437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 424,
											"end": 447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 423,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 423,
											"end": 458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 423,
											"end": 458,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1472,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1553,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1553,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1760,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1729,
											"end": 1734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1711,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1735,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1711,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1736,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1691,
											"end": 1754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1754,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1691,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1905,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1766,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1866,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1866,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1905,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2039,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2056,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2059,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2059,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2138,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2059,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2021,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2238,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2204,
											"end": 2257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2257,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2204,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2257,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2377,
											"end": 2384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2332,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2385,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2332,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2505,
											"end": 2512,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2481,
											"end": 2503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2460,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2513,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2460,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 2530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2664,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2629,
											"end": 2748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2667,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2667,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2746,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2667,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2748,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2629,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2812,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2812,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2985,
											"end": 2992,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2940,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2993,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2940,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 3003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3112,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3193,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3227,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3365,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3365,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3437,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"N/Netmask/SubnetAccessRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isInSubnet(address,address)": "d633134f",
							"permitted(address)": "6cc301e3",
							"register(address,uint160,uint160)": "b651eb77"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"query\",\"type\":\"address\"}],\"name\":\"isInSubnet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permitted\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"mask\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"base\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"mask\",\"type\":\"uint160\"},{\"internalType\":\"uint160\",\"name\":\"base\",\"type\":\"uint160\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"N/Netmask/SubnetAccessRegistry.sol\":\"SubnetAccessRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"N/Netmask/SubnetAccessRegistry.sol\":{\"keccak256\":\"0x320facb69f6414536c7664109814d6c6c636c40c4354ae99ad48cfba3c14a557\",\"urls\":[\"bzz-raw://02308d5364b977cfa5dd93bfe1429f39ff6c77b74a0d3dc4ff4d997246c4a991\",\"dweb:/ipfs/QmW6ApMi7nZRWNQs7LaXRMFXsYKT4g1rUiK9ucaoVmz421\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "N/Netmask/SubnetAccessRegistry.sol:SubnetAccessRegistry",
								"label": "permitted",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Subnet)5_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Subnet)5_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct SubnetAccessRegistry.Subnet)",
								"numberOfBytes": "32",
								"value": "t_struct(Subnet)5_storage"
							},
							"t_struct(Subnet)5_storage": {
								"encoding": "inplace",
								"label": "struct SubnetAccessRegistry.Subnet",
								"members": [
									{
										"astId": 2,
										"contract": "N/Netmask/SubnetAccessRegistry.sol:SubnetAccessRegistry",
										"label": "mask",
										"offset": 0,
										"slot": "0",
										"type": "t_uint160"
									},
									{
										"astId": 4,
										"contract": "N/Netmask/SubnetAccessRegistry.sol:SubnetAccessRegistry",
										"label": "base",
										"offset": 0,
										"slot": "1",
										"type": "t_uint160"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> N/Netmask/SubnetAccessRegistry.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "N/Netmask/SubnetAccessRegistry.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> N/Netmask/SubnetAccessRegistry.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "N/Netmask/SubnetAccessRegistry.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"N/Netmask/SubnetAccessRegistry.sol": {
				"ast": {
					"absolutePath": "N/Netmask/SubnetAccessRegistry.sol",
					"exportedSymbols": {
						"SubnetAccessRegistry": [
							59
						]
					},
					"id": 60,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SubnetAccessRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "SubnetAccessRegistry",
							"nameLocation": "9:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SubnetAccessRegistry.Subnet",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 2,
											"mutability": "mutable",
											"name": "mask",
											"nameLocation": "68:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "60:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "60:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "base",
											"nameLocation": "90:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "82:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 3,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "82:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Subnet",
									"nameLocation": "43:6:0",
									"nodeType": "StructDefinition",
									"scope": 59,
									"src": "36:65:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6cc301e3",
									"id": 10,
									"mutability": "mutable",
									"name": "permitted",
									"nameLocation": "141:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "107:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subnet_$5_storage_$",
										"typeString": "mapping(address => struct SubnetAccessRegistry.Subnet)"
									},
									"typeName": {
										"id": 9,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "115:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "107:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subnet_$5_storage_$",
											"typeString": "mapping(address => struct SubnetAccessRegistry.Subnet)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 8,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 7,
												"name": "Subnet",
												"nameLocations": [
													"126:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5,
												"src": "126:6:0"
											},
											"referencedDeclaration": 5,
											"src": "126:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Subnet_$5_storage_ptr",
												"typeString": "struct SubnetAccessRegistry.Subnet"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "226:53:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 19,
															"name": "permitted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "236:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subnet_$5_storage_$",
																"typeString": "mapping(address => struct SubnetAccessRegistry.Subnet storage ref)"
															}
														},
														"id": 21,
														"indexExpression": {
															"id": 20,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "236:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Subnet_$5_storage",
															"typeString": "struct SubnetAccessRegistry.Subnet storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 23,
																"name": "mask",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 24,
																"name": "base",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "267:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 22,
															"name": "Subnet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Subnet_$5_storage_ptr_$",
																"typeString": "type(struct SubnetAccessRegistry.Subnet storage pointer)"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "254:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Subnet_$5_memory_ptr",
															"typeString": "struct SubnetAccessRegistry.Subnet memory"
														}
													},
													"src": "236:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Subnet_$5_storage",
														"typeString": "struct SubnetAccessRegistry.Subnet storage ref"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "236:36:0"
											}
										]
									},
									"functionSelector": "b651eb77",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "166:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "197:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "189:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 13,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "211:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "203:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 15,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:42:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:0:0"
									},
									"scope": 59,
									"src": "157:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "363:102:0",
										"statements": [
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "387:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 57,
														"src": "373:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Subnet_$5_memory_ptr",
															"typeString": "struct SubnetAccessRegistry.Subnet"
														},
														"typeName": {
															"id": 39,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 38,
																"name": "Subnet",
																"nameLocations": [
																	"373:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5,
																"src": "373:6:0"
															},
															"referencedDeclaration": 5,
															"src": "373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Subnet_$5_storage_ptr",
																"typeString": "struct SubnetAccessRegistry.Subnet"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"baseExpression": {
														"id": 41,
														"name": "permitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "391:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Subnet_$5_storage_$",
															"typeString": "mapping(address => struct SubnetAccessRegistry.Subnet storage ref)"
														}
													},
													"id": 43,
													"indexExpression": {
														"id": 42,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "401:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "391:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Subnet_$5_storage",
														"typeString": "struct SubnetAccessRegistry.Subnet storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "373:33:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 47,
																			"name": "query",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 33,
																			"src": "432:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "424:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 45,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "424:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "424:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"expression": {
																		"id": 49,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "441:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Subnet_$5_memory_ptr",
																			"typeString": "struct SubnetAccessRegistry.Subnet memory"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "443:4:0",
																	"memberName": "mask",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2,
																	"src": "441:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "424:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 52,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "423:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 53,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "452:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Subnet_$5_memory_ptr",
																"typeString": "struct SubnetAccessRegistry.Subnet memory"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "454:4:0",
														"memberName": "base",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "452:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "423:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 37,
												"id": 56,
												"nodeType": "Return",
												"src": "416:42:0"
											}
										]
									},
									"functionSelector": "d633134f",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInSubnet",
									"nameLocation": "294:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "313:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "305:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "query",
												"nameLocation": "327:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "319:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:29:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "357:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 35,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:6:0"
									},
									"scope": 59,
									"src": "285:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "0:467:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:468:0"
				},
				"id": 0
			}
		}
	}
}