{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_seller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "_hashedPassword",
						"type": "bytes32"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "buyer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hashedPassword",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isReleased",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "price",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "plaintext",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "salt",
						"type": "bytes32"
					}
				],
				"name": "release",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"release(string,bytes32)": {
					"details": "The user reveals the plaintext + salt. We check if keccak256(plaintext+salt) == hashedPassword."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "DEFENSE TYPE: We store only a hash of the password, not the plaintext. The escrow is funded, and only the user who knows the real password can reveal it. Attackers cannot see the real password in the contract, just the hash.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/Escrow Passwords/defense Commit-Reveal or Hashed Password.sol": "HashedEscrowPassword"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"E/Escrow Passwords/defense Commit-Reveal or Hashed Password.sol": {
			"keccak256": "0x4c11e116a89f88104d1b1cab7c973734eca94c8827f23ed5860990ffc9f6e6e8",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad6cf9d91d631413c234390acc4088278422093bfc90145164b604aa0367668f",
				"dweb:/ipfs/QmR9icrrvQVbejG6dp22hxb4pzbftJVkknEPyfuFAy17zV"
			]
		}
	},
	"version": 1
}