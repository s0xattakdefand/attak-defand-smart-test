{
	"id": "097dfbbe61020f5a9bf6cd3e1c71949c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * Another approach: not purely exponential, but e.g. wait time = baseDelay * log2(attempt)\n * or a custom weighting. \n */\ncontract LogarithmicBackoff {\n    mapping(address => uint256) public attemptCount;\n    mapping(address => uint256) public nextAllowedTime;\n    uint256 public baseDelay = 60;\n\n    function doAction() external {\n        require(block.timestamp >= nextAllowedTime[msg.sender], \"Wait more\");\n        attemptCount[msg.sender]++;\n        // compute wait using log2 or sqrt for slower growth\n        uint256 wait = baseDelay * log2(attemptCount[msg.sender]);\n        nextAllowedTime[msg.sender] = block.timestamp + wait;\n    }\n\n    // For demonstration, a small integer log2 approach:\n    function log2(uint256 x) internal pure returns (uint256) {\n        // quick approximate\n        uint256 n;\n        while (x > 1) {\n            x >>= 1;\n            n++;\n        }\n        return n;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol": {
				"LogarithmicBackoff": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "attemptCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "doAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nextAllowedTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":185:971  contract LogarithmicBackoff {... */\n  mstore(0x40, 0x80)\n    /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":355:357  60 */\n  0x3c\n    /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":328:357  uint256 public baseDelay = 60 */\n  0x02\n  sstore\n    /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":185:971  contract LogarithmicBackoff {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":185:971  contract LogarithmicBackoff {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2a7a1298\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5994e5bb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x776638fa\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbda261e3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":364:704  function doAction() external {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":219:266  mapping(address => uint256) public attemptCount */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":328:357  uint256 public baseDelay = 60 */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":272:322  mapping(address => uint256) public nextAllowedTime */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":364:704  function doAction() external {... */\n    tag_8:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":430:445  nextAllowedTime */\n      0x01\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":430:457  nextAllowedTime[msg.sender] */\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":446:456  msg.sender */\n      caller\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":430:457  nextAllowedTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":411:426  block.timestamp */\n      timestamp\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":411:457  block.timestamp >= nextAllowedTime[msg.sender] */\n      lt\n      iszero\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":403:471  require(block.timestamp >= nextAllowedTime[msg.sender], \"Wait more\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":481:493  attemptCount */\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":481:505  attemptCount[msg.sender] */\n      dup1\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":494:504  msg.sender */\n      caller\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":481:505  attemptCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":481:507  attemptCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":578:590  uint256 wait */\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":605:635  log2(attemptCount[msg.sender]) */\n      tag_28\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":610:622  attemptCount */\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":610:634  attemptCount[msg.sender] */\n      dup1\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":623:633  msg.sender */\n      caller\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":610:634  attemptCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":605:609  log2 */\n      tag_29\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":605:635  log2(attemptCount[msg.sender]) */\n      jump\t// in\n    tag_28:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":593:602  baseDelay */\n      sload(0x02)\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":593:635  baseDelay * log2(attemptCount[msg.sender]) */\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":578:635  uint256 wait = baseDelay * log2(attemptCount[msg.sender]) */\n      swap1\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":693:697  wait */\n      dup1\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":675:690  block.timestamp */\n      timestamp\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":675:697  block.timestamp + wait */\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":645:660  nextAllowedTime */\n      0x01\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":645:672  nextAllowedTime[msg.sender] */\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":661:671  msg.sender */\n      caller\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":645:672  nextAllowedTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":645:697  nextAllowedTime[msg.sender] = block.timestamp + wait */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":393:704  {... */\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":364:704  function doAction() external {... */\n      jump\t// out\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":219:266  mapping(address => uint256) public attemptCount */\n    tag_12:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":328:357  uint256 public baseDelay = 60 */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":272:322  mapping(address => uint256) public nextAllowedTime */\n    tag_20:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":767:969  function log2(uint256 x) internal pure returns (uint256) {... */\n    tag_29:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":815:822  uint256 */\n      0x00\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":863:872  uint256 n */\n      dup1\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":882:945  while (x > 1) {... */\n    tag_35:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":893:894  1 */\n      0x01\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":889:890  x */\n      dup4\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":889:894  x > 1 */\n      gt\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":882:945  while (x > 1) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":916:917  1 */\n      0x01\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":910:917  x >>= 1 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":931:934  n++ */\n      dup1\n      dup1\n      tag_37\n      swap1\n      tag_27\n      jump\t// in\n    tag_37:\n      swap2\n      pop\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":882:945  while (x > 1) {... */\n      jump(tag_35)\n    tag_36:\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":961:962  n */\n      dup1\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":954:962  return n */\n      swap2\n      pop\n      pop\n        /* \"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":767:969  function log2(uint256 x) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_39:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_41:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_42:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_57\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_41\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_43:\n        /* \"#utility.yul\":641:665   */\n      tag_59\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_42\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_60:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_44:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_62\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_43\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_65\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":917:1036   */\n    tag_64:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_66\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_44\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_45:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_46:\n        /* \"#utility.yul\":1346:1370   */\n      tag_69\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_45\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_14:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_71\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_46\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1780   */\n    tag_47:\n        /* \"#utility.yul\":1695:1706   */\n      0x00\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup3\n        /* \"#utility.yul\":1717:1736   */\n      mstore\n        /* \"#utility.yul\":1769:1773   */\n      0x20\n        /* \"#utility.yul\":1764:1767   */\n      dup3\n        /* \"#utility.yul\":1760:1774   */\n      add\n        /* \"#utility.yul\":1745:1774   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1945   */\n    tag_48:\n        /* \"#utility.yul\":1926:1937   */\n      0x57616974206d6f72650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1922:1923   */\n      0x00\n        /* \"#utility.yul\":1914:1920   */\n      dup3\n        /* \"#utility.yul\":1910:1924   */\n      add\n        /* \"#utility.yul\":1903:1938   */\n      mstore\n        /* \"#utility.yul\":1786:1945   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1951:2316   */\n    tag_49:\n        /* \"#utility.yul\":2093:2096   */\n      0x00\n        /* \"#utility.yul\":2114:2180   */\n      tag_75\n        /* \"#utility.yul\":2178:2179   */\n      0x09\n        /* \"#utility.yul\":2173:2176   */\n      dup4\n        /* \"#utility.yul\":2114:2180   */\n      tag_47\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2107:2180   */\n      swap2\n      pop\n        /* \"#utility.yul\":2189:2282   */\n      tag_76\n        /* \"#utility.yul\":2278:2281   */\n      dup3\n        /* \"#utility.yul\":2189:2282   */\n      tag_48\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2302:2305   */\n      dup3\n        /* \"#utility.yul\":2298:2310   */\n      add\n        /* \"#utility.yul\":2291:2310   */\n      swap1\n      pop\n        /* \"#utility.yul\":1951:2316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2322:2741   */\n    tag_25:\n        /* \"#utility.yul\":2488:2492   */\n      0x00\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2515:2524   */\n      dup3\n        /* \"#utility.yul\":2511:2529   */\n      add\n        /* \"#utility.yul\":2503:2529   */\n      swap1\n      pop\n        /* \"#utility.yul\":2575:2584   */\n      dup2\n        /* \"#utility.yul\":2569:2573   */\n      dup2\n        /* \"#utility.yul\":2565:2585   */\n      sub\n        /* \"#utility.yul\":2561:2562   */\n      0x00\n        /* \"#utility.yul\":2550:2559   */\n      dup4\n        /* \"#utility.yul\":2546:2563   */\n      add\n        /* \"#utility.yul\":2539:2586   */\n      mstore\n        /* \"#utility.yul\":2603:2734   */\n      tag_78\n        /* \"#utility.yul\":2729:2733   */\n      dup2\n        /* \"#utility.yul\":2603:2734   */\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2595:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2322:2741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2747:2927   */\n    tag_50:\n        /* \"#utility.yul\":2795:2872   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2785:2873   */\n      mstore\n        /* \"#utility.yul\":2892:2896   */\n      0x11\n        /* \"#utility.yul\":2889:2890   */\n      0x04\n        /* \"#utility.yul\":2882:2897   */\n      mstore\n        /* \"#utility.yul\":2916:2920   */\n      0x24\n        /* \"#utility.yul\":2913:2914   */\n      0x00\n        /* \"#utility.yul\":2906:2921   */\n      revert\n        /* \"#utility.yul\":2933:3166   */\n    tag_27:\n        /* \"#utility.yul\":2972:2975   */\n      0x00\n        /* \"#utility.yul\":2995:3019   */\n      tag_81\n        /* \"#utility.yul\":3013:3018   */\n      dup3\n        /* \"#utility.yul\":2995:3019   */\n      tag_45\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2986:3019   */\n      swap2\n      pop\n        /* \"#utility.yul\":3041:3107   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3034:3039   */\n      dup3\n        /* \"#utility.yul\":3031:3108   */\n      sub\n        /* \"#utility.yul\":3028:3131   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3111:3129   */\n      tag_83\n      tag_50\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3028:3131   */\n    tag_82:\n        /* \"#utility.yul\":3158:3159   */\n      0x01\n        /* \"#utility.yul\":3151:3156   */\n      dup3\n        /* \"#utility.yul\":3147:3160   */\n      add\n        /* \"#utility.yul\":3140:3160   */\n      swap1\n      pop\n        /* \"#utility.yul\":2933:3166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3172:3582   */\n    tag_31:\n        /* \"#utility.yul\":3212:3219   */\n      0x00\n        /* \"#utility.yul\":3235:3255   */\n      tag_85\n        /* \"#utility.yul\":3253:3254   */\n      dup3\n        /* \"#utility.yul\":3235:3255   */\n      tag_45\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3230:3255   */\n      swap2\n      pop\n        /* \"#utility.yul\":3269:3289   */\n      tag_86\n        /* \"#utility.yul\":3287:3288   */\n      dup4\n        /* \"#utility.yul\":3269:3289   */\n      tag_45\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3264:3289   */\n      swap3\n      pop\n        /* \"#utility.yul\":3324:3325   */\n      dup3\n        /* \"#utility.yul\":3321:3322   */\n      dup3\n        /* \"#utility.yul\":3317:3326   */\n      mul\n        /* \"#utility.yul\":3346:3376   */\n      tag_87\n        /* \"#utility.yul\":3364:3375   */\n      dup2\n        /* \"#utility.yul\":3346:3376   */\n      tag_45\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3335:3376   */\n      swap2\n      pop\n        /* \"#utility.yul\":3525:3526   */\n      dup3\n        /* \"#utility.yul\":3516:3523   */\n      dup3\n        /* \"#utility.yul\":3512:3527   */\n      div\n        /* \"#utility.yul\":3509:3510   */\n      dup5\n        /* \"#utility.yul\":3506:3528   */\n      eq\n        /* \"#utility.yul\":3486:3487   */\n      dup4\n        /* \"#utility.yul\":3479:3488   */\n      iszero\n        /* \"#utility.yul\":3459:3542   */\n      or\n        /* \"#utility.yul\":3436:3575   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3555:3573   */\n      tag_89\n      tag_50\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3436:3575   */\n    tag_88:\n        /* \"#utility.yul\":3220:3582   */\n      pop\n        /* \"#utility.yul\":3172:3582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3779   */\n    tag_33:\n        /* \"#utility.yul\":3628:3631   */\n      0x00\n        /* \"#utility.yul\":3647:3667   */\n      tag_91\n        /* \"#utility.yul\":3665:3666   */\n      dup3\n        /* \"#utility.yul\":3647:3667   */\n      tag_45\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3642:3667   */\n      swap2\n      pop\n        /* \"#utility.yul\":3681:3701   */\n      tag_92\n        /* \"#utility.yul\":3699:3700   */\n      dup4\n        /* \"#utility.yul\":3681:3701   */\n      tag_45\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3676:3701   */\n      swap3\n      pop\n        /* \"#utility.yul\":3724:3725   */\n      dup3\n        /* \"#utility.yul\":3721:3722   */\n      dup3\n        /* \"#utility.yul\":3717:3726   */\n      add\n        /* \"#utility.yul\":3710:3726   */\n      swap1\n      pop\n        /* \"#utility.yul\":3745:3748   */\n      dup1\n        /* \"#utility.yul\":3742:3743   */\n      dup3\n        /* \"#utility.yul\":3739:3749   */\n      gt\n        /* \"#utility.yul\":3736:3772   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3752:3770   */\n      tag_94\n      tag_50\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3736:3772   */\n    tag_93:\n        /* \"#utility.yul\":3588:3779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203385ac4466125f217acf4b65c42bbc06419e80f3d77391b6925bffe17e2d30de64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052603c6002553480156013575f80fd5b506104fa806100215f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632a7a12981461004e5780635994e5bb14610058578063776638fa14610088578063bda261e3146100a6575b5f80fd5b6100566100d6565b005b610072600480360381019061006d9190610308565b61024c565b60405161007f919061034b565b60405180910390f35b610090610260565b60405161009d919061034b565b60405180910390f35b6100c060048036038101906100bb9190610308565b610266565b6040516100cd919061034b565b60405180910390f35b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906103be565b60405180910390fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154809291906101a290610409565b91905055505f6101ed5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461027b565b6002546101fa9190610450565b905080426102089190610491565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f602052805f5260405f205f915090505481565b60025481565b6001602052805f5260405f205f915090505481565b5f805b60018311156102a157600183901c9250808061029990610409565b91505061027e565b80915050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102d7826102ae565b9050919050565b6102e7816102cd565b81146102f1575f80fd5b50565b5f81359050610302816102de565b92915050565b5f6020828403121561031d5761031c6102aa565b5b5f61032a848285016102f4565b91505092915050565b5f819050919050565b61034581610333565b82525050565b5f60208201905061035e5f83018461033c565b92915050565b5f82825260208201905092915050565b7f57616974206d6f726500000000000000000000000000000000000000000000005f82015250565b5f6103a8600983610364565b91506103b382610374565b602082019050919050565b5f6020820190508181035f8301526103d58161039c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61041382610333565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610445576104446103dc565b5b600182019050919050565b5f61045a82610333565b915061046583610333565b925082820261047381610333565b9150828204841483151761048a576104896103dc565b5b5092915050565b5f61049b82610333565b91506104a683610333565b92508282019050808211156104be576104bd6103dc565b5b9291505056fea26469706673582212203385ac4466125f217acf4b65c42bbc06419e80f3d77391b6925bffe17e2d30de64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3C PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FA DUP1 PUSH2 0x21 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A7A1298 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x5994E5BB EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x776638FA EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xBDA261E3 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D SWAP1 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2 SWAP1 PUSH2 0x409 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH2 0x1ED PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x491 JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 DUP4 GT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x1 DUP4 SWAP1 SHR SWAP3 POP DUP1 DUP1 PUSH2 0x299 SWAP1 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7 DUP3 PUSH2 0x2AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x2CD JUMP JUMPDEST DUP2 EQ PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x302 DUP2 PUSH2 0x2DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31D JUMPI PUSH2 0x31C PUSH2 0x2AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x32A DUP5 DUP3 DUP6 ADD PUSH2 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x333 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH0 DUP4 ADD DUP5 PUSH2 0x33C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57616974206D6F72650000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3A8 PUSH1 0x9 DUP4 PUSH2 0x364 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B3 DUP3 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3D5 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x413 DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x445 JUMPI PUSH2 0x444 PUSH2 0x3DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x45A DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH2 0x465 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x473 DUP2 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x48A JUMPI PUSH2 0x489 PUSH2 0x3DC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x49B DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A6 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x3DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER DUP6 0xAC PREVRANDAO PUSH7 0x125F217ACF4B65 0xC4 0x2B 0xBC MOD COINBASE SWAP15 DUP1 RETURN 0xD7 PUSH20 0x91B6925BFFE17E2D30DE64736F6C634300081A00 CALLER ",
							"sourceMap": "185:786:0:-:0;;;355:2;328:29;;185:786;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@attemptCount_6": {
									"entryPoint": 588,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@baseDelay_13": {
									"entryPoint": 608,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@doAction_55": {
									"entryPoint": 214,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log2_80": {
									"entryPoint": 635,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nextAllowedTime_10": {
									"entryPoint": 614,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af": {
									"entryPoint": 884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3782:1",
										"nodeType": "YulBlock",
										"src": "0:3782:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1221:32:1",
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nativeSrc": "1231:16:1",
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:1",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:1",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:1",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nativeSrc": "1324:53:1",
													"nodeType": "YulBlock",
													"src": "1324:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:1"
																		},
																		"nativeSrc": "1346:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:1"
																},
																"nativeSrc": "1334:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:1"
															},
															"nativeSrc": "1334:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:1",
														"nodeType": "YulTypedName",
														"src": "1312:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:1",
														"nodeType": "YulTypedName",
														"src": "1319:3:1",
														"type": ""
													}
												],
												"src": "1259:118:1"
											},
											{
												"body": {
													"nativeSrc": "1481:124:1",
													"nodeType": "YulBlock",
													"src": "1481:124:1",
													"statements": [
														{
															"nativeSrc": "1491:26:1",
															"nodeType": "YulAssignment",
															"src": "1491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:1"
																},
																"nativeSrc": "1499:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:1"
																		},
																		"nativeSrc": "1580:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:1"
																},
																"nativeSrc": "1527:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:1"
															},
															"nativeSrc": "1527:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:1",
														"nodeType": "YulTypedName",
														"src": "1453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:1",
														"nodeType": "YulTypedName",
														"src": "1465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:1",
														"nodeType": "YulTypedName",
														"src": "1476:4:1",
														"type": ""
													}
												],
												"src": "1383:222:1"
											},
											{
												"body": {
													"nativeSrc": "1707:73:1",
													"nodeType": "YulBlock",
													"src": "1707:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1724:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1724:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1729:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1717:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:1"
																},
																"nativeSrc": "1717:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1717:19:1"
															},
															"nativeSrc": "1717:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1717:19:1"
														},
														{
															"nativeSrc": "1745:29:1",
															"nodeType": "YulAssignment",
															"src": "1745:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1764:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1764:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1769:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1760:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:1"
																},
																"nativeSrc": "1760:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1760:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1745:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1745:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1611:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1684:6:1",
														"nodeType": "YulTypedName",
														"src": "1684:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1695:11:1",
														"nodeType": "YulTypedName",
														"src": "1695:11:1",
														"type": ""
													}
												],
												"src": "1611:169:1"
											},
											{
												"body": {
													"nativeSrc": "1892:53:1",
													"nodeType": "YulBlock",
													"src": "1892:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1914:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1914:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1922:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1922:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:1"
																		},
																		"nativeSrc": "1910:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:14:1"
																	},
																	{
																		"hexValue": "57616974206d6f7265",
																		"kind": "string",
																		"nativeSrc": "1926:11:1",
																		"nodeType": "YulLiteral",
																		"src": "1926:11:1",
																		"type": "",
																		"value": "Wait more"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nativeSrc": "1903:35:1",
																"nodeType": "YulFunctionCall",
																"src": "1903:35:1"
															},
															"nativeSrc": "1903:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "1903:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af",
												"nativeSrc": "1786:159:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1884:6:1",
														"nodeType": "YulTypedName",
														"src": "1884:6:1",
														"type": ""
													}
												],
												"src": "1786:159:1"
											},
											{
												"body": {
													"nativeSrc": "2097:219:1",
													"nodeType": "YulBlock",
													"src": "2097:219:1",
													"statements": [
														{
															"nativeSrc": "2107:73:1",
															"nodeType": "YulAssignment",
															"src": "2107:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2173:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2178:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2114:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2114:58:1"
																},
																"nativeSrc": "2114:66:1",
																"nodeType": "YulFunctionCall",
																"src": "2114:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2107:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2278:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af",
																	"nativeSrc": "2189:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2189:88:1"
																},
																"nativeSrc": "2189:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2189:93:1"
															},
															"nativeSrc": "2189:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2189:93:1"
														},
														{
															"nativeSrc": "2291:19:1",
															"nodeType": "YulAssignment",
															"src": "2291:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2302:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2302:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2307:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2298:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																},
																"nativeSrc": "2298:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2298:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2291:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2291:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1951:365:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2085:3:1",
														"nodeType": "YulTypedName",
														"src": "2085:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2093:3:1",
														"nodeType": "YulTypedName",
														"src": "2093:3:1",
														"type": ""
													}
												],
												"src": "1951:365:1"
											},
											{
												"body": {
													"nativeSrc": "2493:248:1",
													"nodeType": "YulBlock",
													"src": "2493:248:1",
													"statements": [
														{
															"nativeSrc": "2503:26:1",
															"nodeType": "YulAssignment",
															"src": "2503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2515:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2515:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2526:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2526:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2511:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:1"
																},
																"nativeSrc": "2511:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2503:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2503:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2561:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2561:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2546:3:1"
																		},
																		"nativeSrc": "2546:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2546:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2569:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2569:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2575:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2575:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2565:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:1"
																		},
																		"nativeSrc": "2565:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2539:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2539:6:1"
																},
																"nativeSrc": "2539:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2539:47:1"
															},
															"nativeSrc": "2539:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2539:47:1"
														},
														{
															"nativeSrc": "2595:139:1",
															"nodeType": "YulAssignment",
															"src": "2595:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2729:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2729:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2603:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2603:124:1"
																},
																"nativeSrc": "2603:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2603:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2595:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2595:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2322:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2473:9:1",
														"nodeType": "YulTypedName",
														"src": "2473:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2488:4:1",
														"nodeType": "YulTypedName",
														"src": "2488:4:1",
														"type": ""
													}
												],
												"src": "2322:419:1"
											},
											{
												"body": {
													"nativeSrc": "2775:152:1",
													"nodeType": "YulBlock",
													"src": "2775:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2792:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2795:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2795:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2785:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:1"
																},
																"nativeSrc": "2785:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2785:88:1"
															},
															"nativeSrc": "2785:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2785:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2889:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2892:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2892:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2882:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:1"
																},
																"nativeSrc": "2882:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2882:15:1"
															},
															"nativeSrc": "2882:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2882:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2913:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2913:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2916:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2916:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2906:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:1"
																},
																"nativeSrc": "2906:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2906:15:1"
															},
															"nativeSrc": "2906:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2906:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2747:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2747:180:1"
											},
											{
												"body": {
													"nativeSrc": "2976:190:1",
													"nodeType": "YulBlock",
													"src": "2976:190:1",
													"statements": [
														{
															"nativeSrc": "2986:33:1",
															"nodeType": "YulAssignment",
															"src": "2986:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3013:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3013:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:24:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2986:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2986:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3109:22:1",
																"nodeType": "YulBlock",
																"src": "3109:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3111:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3111:16:1"
																			},
																			"nativeSrc": "3111:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3111:18:1"
																		},
																		"nativeSrc": "3111:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3111:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3034:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3041:66:1",
																		"nodeType": "YulLiteral",
																		"src": "3041:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3031:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3031:2:1"
																},
																"nativeSrc": "3031:77:1",
																"nodeType": "YulFunctionCall",
																"src": "3031:77:1"
															},
															"nativeSrc": "3028:103:1",
															"nodeType": "YulIf",
															"src": "3028:103:1"
														},
														{
															"nativeSrc": "3140:20:1",
															"nodeType": "YulAssignment",
															"src": "3140:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3151:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3151:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3158:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3147:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:1"
																},
																"nativeSrc": "3147:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3147:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3140:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "2933:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2962:5:1",
														"nodeType": "YulTypedName",
														"src": "2962:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2972:3:1",
														"nodeType": "YulTypedName",
														"src": "2972:3:1",
														"type": ""
													}
												],
												"src": "2933:233:1"
											},
											{
												"body": {
													"nativeSrc": "3220:362:1",
													"nodeType": "YulBlock",
													"src": "3220:362:1",
													"statements": [
														{
															"nativeSrc": "3230:25:1",
															"nodeType": "YulAssignment",
															"src": "3230:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3253:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3253:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3235:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3235:17:1"
																},
																"nativeSrc": "3235:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3235:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3230:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3230:1:1"
																}
															]
														},
														{
															"nativeSrc": "3264:25:1",
															"nodeType": "YulAssignment",
															"src": "3264:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3287:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3287:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3269:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3269:17:1"
																},
																"nativeSrc": "3269:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3269:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3264:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3264:1:1"
																}
															]
														},
														{
															"nativeSrc": "3298:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3298:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3321:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3321:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3324:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3324:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3317:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3317:3:1"
																},
																"nativeSrc": "3317:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3317:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3302:11:1",
																	"nodeType": "YulTypedName",
																	"src": "3302:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3335:41:1",
															"nodeType": "YulAssignment",
															"src": "3335:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3364:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "3364:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3346:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3346:17:1"
																},
																"nativeSrc": "3346:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3346:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3335:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3335:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3553:22:1",
																"nodeType": "YulBlock",
																"src": "3553:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3555:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3555:16:1"
																			},
																			"nativeSrc": "3555:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3555:18:1"
																		},
																		"nativeSrc": "3555:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3555:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3486:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3486:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3479:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3479:6:1"
																				},
																				"nativeSrc": "3479:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3479:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3509:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "3509:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3516:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "3516:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3525:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "3525:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3512:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3512:3:1"
																						},
																						"nativeSrc": "3512:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3512:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3506:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3506:2:1"
																				},
																				"nativeSrc": "3506:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3506:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3459:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3459:2:1"
																		},
																		"nativeSrc": "3459:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3459:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3439:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:1"
																},
																"nativeSrc": "3439:113:1",
																"nodeType": "YulFunctionCall",
																"src": "3439:113:1"
															},
															"nativeSrc": "3436:139:1",
															"nodeType": "YulIf",
															"src": "3436:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3172:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3203:1:1",
														"nodeType": "YulTypedName",
														"src": "3203:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3206:1:1",
														"nodeType": "YulTypedName",
														"src": "3206:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3212:7:1",
														"nodeType": "YulTypedName",
														"src": "3212:7:1",
														"type": ""
													}
												],
												"src": "3172:410:1"
											},
											{
												"body": {
													"nativeSrc": "3632:147:1",
													"nodeType": "YulBlock",
													"src": "3632:147:1",
													"statements": [
														{
															"nativeSrc": "3642:25:1",
															"nodeType": "YulAssignment",
															"src": "3642:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3665:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3665:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3647:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3647:17:1"
																},
																"nativeSrc": "3647:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3647:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3642:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:1:1"
																}
															]
														},
														{
															"nativeSrc": "3676:25:1",
															"nodeType": "YulAssignment",
															"src": "3676:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3699:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3699:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3681:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3681:17:1"
																},
																"nativeSrc": "3681:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3681:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3676:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "3676:1:1"
																}
															]
														},
														{
															"nativeSrc": "3710:16:1",
															"nodeType": "YulAssignment",
															"src": "3710:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3721:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3721:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3724:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3724:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3717:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3717:3:1"
																},
																"nativeSrc": "3717:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3717:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3710:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3710:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3750:22:1",
																"nodeType": "YulBlock",
																"src": "3750:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3752:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3752:16:1"
																			},
																			"nativeSrc": "3752:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3752:18:1"
																		},
																		"nativeSrc": "3752:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3752:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3742:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3742:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3745:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3745:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3739:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3739:2:1"
																},
																"nativeSrc": "3739:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3739:10:1"
															},
															"nativeSrc": "3736:36:1",
															"nodeType": "YulIf",
															"src": "3736:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3588:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3619:1:1",
														"nodeType": "YulTypedName",
														"src": "3619:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3622:1:1",
														"nodeType": "YulTypedName",
														"src": "3622:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3628:3:1",
														"nodeType": "YulTypedName",
														"src": "3628:3:1",
														"type": ""
													}
												],
												"src": "3588:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wait more\")\n\n    }\n\n    function abi_encode_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632a7a12981461004e5780635994e5bb14610058578063776638fa14610088578063bda261e3146100a6575b5f80fd5b6100566100d6565b005b610072600480360381019061006d9190610308565b61024c565b60405161007f919061034b565b60405180910390f35b610090610260565b60405161009d919061034b565b60405180910390f35b6100c060048036038101906100bb9190610308565b610266565b6040516100cd919061034b565b60405180910390f35b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906103be565b60405180910390fd5b5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154809291906101a290610409565b91905055505f6101ed5f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461027b565b6002546101fa9190610450565b905080426102089190610491565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f602052805f5260405f205f915090505481565b60025481565b6001602052805f5260405f205f915090505481565b5f805b60018311156102a157600183901c9250808061029990610409565b91505061027e565b80915050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102d7826102ae565b9050919050565b6102e7816102cd565b81146102f1575f80fd5b50565b5f81359050610302816102de565b92915050565b5f6020828403121561031d5761031c6102aa565b5b5f61032a848285016102f4565b91505092915050565b5f819050919050565b61034581610333565b82525050565b5f60208201905061035e5f83018461033c565b92915050565b5f82825260208201905092915050565b7f57616974206d6f726500000000000000000000000000000000000000000000005f82015250565b5f6103a8600983610364565b91506103b382610374565b602082019050919050565b5f6020820190508181035f8301526103d58161039c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61041382610333565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610445576104446103dc565b5b600182019050919050565b5f61045a82610333565b915061046583610333565b925082820261047381610333565b9150828204841483151761048a576104896103dc565b5b5092915050565b5f61049b82610333565b91506104a683610333565b92508282019050808211156104be576104bd6103dc565b5b9291505056fea26469706673582212203385ac4466125f217acf4b65c42bbc06419e80f3d77391b6925bffe17e2d30de64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A7A1298 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x5994E5BB EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x776638FA EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xBDA261E3 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D SWAP1 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2 SWAP1 PUSH2 0x409 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH2 0x1ED PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x491 JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 DUP4 GT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x1 DUP4 SWAP1 SHR SWAP3 POP DUP1 DUP1 PUSH2 0x299 SWAP1 PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7 DUP3 PUSH2 0x2AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7 DUP2 PUSH2 0x2CD JUMP JUMPDEST DUP2 EQ PUSH2 0x2F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x302 DUP2 PUSH2 0x2DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31D JUMPI PUSH2 0x31C PUSH2 0x2AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x32A DUP5 DUP3 DUP6 ADD PUSH2 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x333 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35E PUSH0 DUP4 ADD DUP5 PUSH2 0x33C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x57616974206D6F72650000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3A8 PUSH1 0x9 DUP4 PUSH2 0x364 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B3 DUP3 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3D5 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x413 DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x445 JUMPI PUSH2 0x444 PUSH2 0x3DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x45A DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH2 0x465 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x473 DUP2 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x48A JUMPI PUSH2 0x489 PUSH2 0x3DC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x49B DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A6 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x3DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER DUP6 0xAC PREVRANDAO PUSH7 0x125F217ACF4B65 0xC4 0x2B 0xBC MOD COINBASE SWAP15 DUP1 RETURN 0xD7 PUSH20 0x91B6925BFFE17E2D30DE64736F6C634300081A00 CALLER ",
							"sourceMap": "185:786:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:340;;;:::i;:::-;;219:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;272:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:340;430:15;:27;446:10;430:27;;;;;;;;;;;;;;;;411:15;:46;;403:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;481:12;:24;494:10;481:24;;;;;;;;;;;;;;;;:26;;;;;;;;;:::i;:::-;;;;;;578:12;605:30;610:12;:24;623:10;610:24;;;;;;;;;;;;;;;;605:4;:30::i;:::-;593:9;;:42;;;;:::i;:::-;578:57;;693:4;675:15;:22;;;;:::i;:::-;645:15;:27;661:10;645:27;;;;;;;;;;;;;;;:52;;;;393:311;364:340::o;219:47::-;;;;;;;;;;;;;;;;;:::o;328:29::-;;;;:::o;272:50::-;;;;;;;;;;;;;;;;;:::o;767:202::-;815:7;863:9;882:63;893:1;889;:5;882:63;;;916:1;910:7;;;;;931:3;;;;;:::i;:::-;;;;882:63;;;961:1;954:8;;;767:202;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:169::-;1695:11;1729:6;1724:3;1717:19;1769:4;1764:3;1760:14;1745:29;;1611:169;;;;:::o;1786:159::-;1926:11;1922:1;1914:6;1910:14;1903:35;1786:159;:::o;1951:365::-;2093:3;2114:66;2178:1;2173:3;2114:66;:::i;:::-;2107:73;;2189:93;2278:3;2189:93;:::i;:::-;2307:2;2302:3;2298:12;2291:19;;1951:365;;;:::o;2322:419::-;2488:4;2526:2;2515:9;2511:18;2503:26;;2575:9;2569:4;2565:20;2561:1;2550:9;2546:17;2539:47;2603:131;2729:4;2603:131;:::i;:::-;2595:139;;2322:419;;;:::o;2747:180::-;2795:77;2792:1;2785:88;2892:4;2889:1;2882:15;2916:4;2913:1;2906:15;2933:233;2972:3;2995:24;3013:5;2995:24;:::i;:::-;2986:33;;3041:66;3034:5;3031:77;3028:103;;3111:18;;:::i;:::-;3028:103;3158:1;3151:5;3147:13;3140:20;;2933:233;;;:::o;3172:410::-;3212:7;3235:20;3253:1;3235:20;:::i;:::-;3230:25;;3269:20;3287:1;3269:20;:::i;:::-;3264:25;;3324:1;3321;3317:9;3346:30;3364:11;3346:30;:::i;:::-;3335:41;;3525:1;3516:7;3512:15;3509:1;3506:22;3486:1;3479:9;3459:83;3436:139;;3555:18;;:::i;:::-;3436:139;3220:362;3172:410;;;;:::o;3588:191::-;3628:3;3647:20;3665:1;3647:20;:::i;:::-;3642:25;;3681:20;3699:1;3681:20;:::i;:::-;3676:25;;3724:1;3721;3717:9;3710:16;;3745:3;3742:1;3739:10;3736:36;;;3752:18;;:::i;:::-;3736:36;3588:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "254800",
								"executionCost": "22398",
								"totalCost": "277198"
							},
							"external": {
								"attemptCount(address)": "2801",
								"baseDelay()": "2447",
								"doAction()": "infinite",
								"nextAllowedTime(address)": "2846"
							},
							"internal": {
								"log2(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "3C"
								},
								{
									"begin": 328,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 328,
									"end": 357,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 185,
									"end": 971,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 971,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203385ac4466125f217acf4b65c42bbc06419e80f3d77391b6925bffe17e2d30de64736f6c634300081a0033",
									".code": [
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "2A7A1298"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "5994E5BB"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "776638FA"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "BDA261E3"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 185,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 364,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 364,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 364,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 364,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 704,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 219,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 219,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 219,
											"end": 266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 364,
											"end": 704,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 364,
											"end": 704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 456,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 457,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 430,
											"end": 457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 411,
											"end": 426,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 411,
											"end": 457,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 411,
											"end": 457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 403,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 403,
											"end": 471,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 505,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 481,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 481,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 481,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 578,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 610,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 623,
											"end": 633,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 634,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 610,
											"end": 634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 605,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 605,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 605,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 593,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 593,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 593,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 593,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 593,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 593,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 593,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 578,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 578,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 693,
											"end": 697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 690,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 675,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 675,
											"end": 697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 675,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 675,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 675,
											"end": 697,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 675,
											"end": 697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 671,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 645,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 672,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 645,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 697,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 645,
											"end": 697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 328,
											"end": 357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 272,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 767,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 815,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 882,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 889,
											"end": 890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 889,
											"end": 894,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 882,
											"end": 945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 910,
											"end": 917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 917,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 910,
											"end": 917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 910,
											"end": 917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 931,
											"end": 934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 931,
											"end": 934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 882,
											"end": 945,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 882,
											"end": 945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 961,
											"end": 962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 954,
											"end": 962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 767,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1786,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "57616974206D6F72650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2316,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1951,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2173,
											"end": 2176,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2114,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2114,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2189,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2189,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2741,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2322,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2603,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2734,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2603,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2747,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2896,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2889,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2882,
											"end": 2897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2933,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3013,
											"end": 3018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2995,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3019,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2995,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 3019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3028,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3111,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3028,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3151,
											"end": 3156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3582,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3172,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3235,
											"end": 3255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3235,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3364,
											"end": 3375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3346,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3376,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3346,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3527,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3528,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3542,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3555,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3436,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3588,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3665,
											"end": 3666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3647,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3699,
											"end": 3700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3681,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3701,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3681,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3701,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3749,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3772,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3736,
											"end": 3772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3752,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3772,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3736,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3779,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attemptCount(address)": "5994e5bb",
							"baseDelay()": "776638fa",
							"doAction()": "2a7a1298",
							"nextAllowedTime(address)": "bda261e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"attemptCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nextAllowedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Another approach: not purely exponential, but e.g. wait time = baseDelay * log2(attempt) or a custom weighting. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":\"LogarithmicBackoff\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol\":{\"keccak256\":\"0x60b9dce8d22ed7c763ae4e5cbe478ab1da174e9a7bf3390c535825cfc6cec559\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163b5fd2f5e2b4644406e5a9a409a855241b91d66ce586ad2a1a8315f7f01d4d\",\"dweb:/ipfs/QmYFor4Y6qxtVo1aJHhoi3SZFYwkDyetsixrfk86Hox1S7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol:LogarithmicBackoff",
								"label": "attemptCount",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 10,
								"contract": "E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol:LogarithmicBackoff",
								"label": "nextAllowedTime",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 13,
								"contract": "E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol:LogarithmicBackoff",
								"label": "baseDelay",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Another approach: not purely exponential, but e.g. wait time = baseDelay * log2(attempt) or a custom weighting. ",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol": {
				"ast": {
					"absolutePath": "E/Exponential Backoff Algorithm/Logarithmic or Weighted Approach (non-exponential).sol",
					"exportedSymbols": {
						"LogarithmicBackoff": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LogarithmicBackoff",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:126:0",
								"text": " Another approach: not purely exponential, but e.g. wait time = baseDelay * log2(attempt)\n or a custom weighting. "
							},
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "LogarithmicBackoff",
							"nameLocation": "194:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5994e5bb",
									"id": 6,
									"mutability": "mutable",
									"name": "attemptCount",
									"nameLocation": "254:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "219:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 5,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "227:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "219:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "238:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bda261e3",
									"id": 10,
									"mutability": "mutable",
									"name": "nextAllowedTime",
									"nameLocation": "307:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "272:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 9,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "280:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "272:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 8,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "291:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "776638fa",
									"id": 13,
									"mutability": "mutable",
									"name": "baseDelay",
									"nameLocation": "343:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "328:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "355:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "393:311:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 17,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "411:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "417:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "411:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 19,
																	"name": "nextAllowedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "430:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 22,
																"indexExpression": {
																	"expression": {
																		"id": 20,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "446:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "450:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "446:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "430:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "411:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57616974206d6f7265",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "459:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af",
																"typeString": "literal_string \"Wait more\""
															},
															"value": "Wait more"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_745d708b1b45550ca78d85e016cca1b2aba0ad0f2fd3236d2ff3bd45c701f1af",
																"typeString": "literal_string \"Wait more\""
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "403:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "403:68:0"
											},
											{
												"expression": {
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "481:26:0",
													"subExpression": {
														"baseExpression": {
															"id": 27,
															"name": "attemptCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "481:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 30,
														"indexExpression": {
															"expression": {
																"id": 28,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "494:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "498:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "494:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "481:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "481:26:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "wait",
														"nameLocation": "586:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "578:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 33,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "578:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "baseDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "593:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 37,
																	"name": "attemptCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "610:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 40,
																"indexExpression": {
																	"expression": {
																		"id": 38,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "623:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "627:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "623:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "610:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 36,
															"name": "log2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "605:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "605:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "593:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "578:57:0"
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 44,
															"name": "nextAllowedTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "645:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "661:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "665:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "661:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "645:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 48,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "675:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "681:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "675:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 50,
															"name": "wait",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "675:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "645:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "645:52:0"
											}
										]
									},
									"functionSelector": "2a7a1298",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doAction",
									"nameLocation": "373:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:0:0"
									},
									"scope": 81,
									"src": "364:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "824:145:0",
										"statements": [
											{
												"assignments": [
													63
												],
												"declarations": [
													{
														"constant": false,
														"id": 63,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "871:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "863:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 62,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "863:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"nodeType": "VariableDeclarationStatement",
												"src": "863:9:0"
											},
											{
												"body": {
													"id": 75,
													"nodeType": "Block",
													"src": "896:49:0",
													"statements": [
														{
															"expression": {
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 68,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "910:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "916:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "910:7:0"
														},
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "931:3:0",
																"subExpression": {
																	"id": 72,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "931:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "931:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "889:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "893:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "WhileStatement",
												"src": "882:63:0"
											},
											{
												"expression": {
													"id": 77,
													"name": "n",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 63,
													"src": "961:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 61,
												"id": 78,
												"nodeType": "Return",
												"src": "954:8:0"
											}
										]
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "776:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "789:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:11:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:9:0"
									},
									"scope": 81,
									"src": "767:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 82,
							"src": "185:786:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:940:0"
				},
				"id": 0
			}
		}
	}
}