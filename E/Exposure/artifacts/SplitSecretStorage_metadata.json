{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "_shares",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "shares",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Another approach:  We store partial shares of a secret if we want multiple parties to combine them off-chain, but no single party can reconstruct on-chain alone.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/Exposure/Split Secret (Shamir or partial approach).sol": "SplitSecretStorage"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"E/Exposure/Split Secret (Shamir or partial approach).sol": {
			"keccak256": "0x9f56a3d00c435790993db20e466a6d30f45b46731d1aae3157f5e290618eb968",
			"license": "MIT",
			"urls": [
				"bzz-raw://9024ebca5400b094de8736cff33dc07644d1fa7a67919d3054117a4e9b3cf7ae",
				"dweb:/ipfs/QmXQ6ZDbotgpRbEY1VKDWRkAagJHdsSkXYhG2gu66zn1tt"
			]
		}
	},
	"version": 1
}