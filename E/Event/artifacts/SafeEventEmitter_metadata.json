{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"name": "LimitedMessage",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "cooldown",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "msgData",
						"type": "string"
					}
				],
				"name": "emitSafeMessage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lastEmitTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newCooldown",
						"type": "uint256"
					}
				],
				"name": "setCooldown",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newFee",
						"type": "uint256"
					}
				],
				"name": "setFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "DEFENSE TYPE: A contract that charges a small fee or imposes a cooldown  before event emission => prevents indefinite spam or large data usage.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/Event/Rate-Limited or Fee-Based Events defense.sol": "SafeEventEmitter"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"E/Event/Rate-Limited or Fee-Based Events defense.sol": {
			"keccak256": "0xb8cb8892518a25ab279833476e71dead583da1345026fcf76df89e740ce254b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://eea2e1275b463579d7b28a3f6810374fce30a0fe445e1a57f0fca14b4af1066b",
				"dweb:/ipfs/Qmdi8M1j1ew3QAN1HgSx4mjJgJ2Zs7XQYaCfaSgq51nGMp"
			]
		}
	},
	"version": 1
}