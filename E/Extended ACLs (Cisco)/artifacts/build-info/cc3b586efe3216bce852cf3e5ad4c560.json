{
	"id": "cc3b586efe3216bce852cf3e5ad4c560",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * DEFENSE TYPE:\n * We do advanced access checks like: \n * - Role-based from AccessControl\n * - Condition on function param\n * - Possibly time-based or multi-sig approach\n */\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract ExtendedACLContract is AccessControl {\n    bytes32 public constant EDITOR_ROLE = keccak256(\"EDITOR_ROLE\");\n    uint256 public data;\n    uint256 public lastUpdate;\n\n    constructor(address admin, address editor) {\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(EDITOR_ROLE, editor);\n    }\n\n    /**\n     * @dev Only addresses with EDITOR_ROLE can call, \n     * plus we do an extra condition, e.g. only certain time range or param check.\n     */\n    function updateData(uint256 newData) external onlyRole(EDITOR_ROLE) {\n        require(newData < 10000, \"Data must be < 10000\"); // extended condition\n        require(block.timestamp > lastUpdate + 60, \"Wait 60s before next update\"); // time-based check\n        data = newData;\n        lastUpdate = block.timestamp;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol": {
				"ExtendedACLContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "editor",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EDITOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newData",
									"type": "uint256"
								}
							],
							"name": "updateData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"updateData(uint256)": {
								"details": "Only addresses with EDITOR_ROLE can call,  plus we do an extra condition, e.g. only certain time range or param check."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":297:1094  contract ExtendedACLContract is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":474:612  constructor(address admin, address editor) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":527:564  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":538:556  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":558:563  admin */\n  dup4\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":527:537  _grantRole */\n  shl(0x20, tag_7)\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":527:564  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":574:605  _grantRole(EDITOR_ROLE, editor) */\n  tag_8\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":387:411  keccak256(\"EDITOR_ROLE\") */\n  0x21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":598:604  editor */\n  dup3\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":574:584  _grantRole */\n  shl(0x20, tag_7)\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":574:605  _grantRole(EDITOR_ROLE, editor) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":474:612  constructor(address admin, address editor) {... */\n  pop\n  pop\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":297:1094  contract ExtendedACLContract is AccessControl {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":949:1068   */\ntag_39:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_41\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_42\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":297:1094  contract ExtendedACLContract is AccessControl {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":297:1094  contract ExtendedACLContract is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73d4a13a\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x73d4a13a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa853211a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc0463711\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x09e96008\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":772:1092  function updateData(uint256 newData) external onlyRole(EDITOR_ROLE) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":417:436  uint256 public data */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":349:411  bytes32 public constant EDITOR_ROLE = keccak256(\"EDITOR_ROLE\") */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":442:467  uint256 public lastUpdate */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_13:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":772:1092  function updateData(uint256 newData) external onlyRole(EDITOR_ROLE) {... */\n    tag_24:\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":387:411  keccak256(\"EDITOR_ROLE\") */\n      0x21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_63\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_63:\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":868:873  10000 */\n      0x2710\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":858:865  newData */\n      dup3\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":858:873  newData < 10000 */\n      lt\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":850:898  require(newData < 10000, \"Data must be < 10000\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":969:971  60 */\n      0x3c\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":956:966  lastUpdate */\n      sload(0x02)\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":956:971  lastUpdate + 60 */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":938:953  block.timestamp */\n      timestamp\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":938:971  block.timestamp > lastUpdate + 60 */\n      gt\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":930:1003  require(block.timestamp > lastUpdate + 60, \"Wait 60s before next update\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":1040:1047  newData */\n      dup2\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":1033:1037  data */\n      0x01\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":1033:1047  data = newData */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":1070:1085  block.timestamp */\n      timestamp\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":1057:1067  lastUpdate */\n      0x02\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":1057:1085  lastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":772:1092  function updateData(uint256 newData) external onlyRole(EDITOR_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_86\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":417:436  uint256 public data */\n    tag_39:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":349:411  bytes32 public constant EDITOR_ROLE = keccak256(\"EDITOR_ROLE\") */\n    tag_50:\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":387:411  keccak256(\"EDITOR_ROLE\") */\n      0x21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":349:411  bytes32 public constant EDITOR_ROLE = keccak256(\"EDITOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":442:467  uint256 public lastUpdate */\n    tag_53:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_86\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_92:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_98)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_98:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_104)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_104:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_115:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_117:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_118:\n        /* \"#utility.yul\":561:584   */\n      tag_147\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_117\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_148:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_119:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_150\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_118\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_17:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_153\n      tag_115\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":833:952   */\n    tag_152:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_154\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_119\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_120:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_121:\n        /* \"#utility.yul\":1268:1289   */\n      tag_157\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_120\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_20:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_159\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_121\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_122:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_123:\n        /* \"#utility.yul\":1674:1698   */\n      tag_162\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_122\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_163:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_124:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_165\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_123\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_23:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_168\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1950:2069   */\n    tag_167:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_169\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_124\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2286   */\n    tag_125:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2275:2280   */\n      dup2\n        /* \"#utility.yul\":2264:2280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2414   */\n    tag_126:\n        /* \"#utility.yul\":2365:2389   */\n      tag_172\n        /* \"#utility.yul\":2383:2388   */\n      dup2\n        /* \"#utility.yul\":2365:2389   */\n      tag_125\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2355:2390   */\n      eq\n        /* \"#utility.yul\":2345:2408   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2345:2408   */\n    tag_173:\n        /* \"#utility.yul\":2292:2414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2559   */\n    tag_127:\n        /* \"#utility.yul\":2466:2471   */\n      0x00\n        /* \"#utility.yul\":2504:2510   */\n      dup2\n        /* \"#utility.yul\":2491:2511   */\n      calldataload\n        /* \"#utility.yul\":2482:2511   */\n      swap1\n      pop\n        /* \"#utility.yul\":2520:2553   */\n      tag_175\n        /* \"#utility.yul\":2547:2552   */\n      dup2\n        /* \"#utility.yul\":2520:2553   */\n      tag_126\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2420:2559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2894   */\n    tag_27:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2673:2675   */\n      0x20\n        /* \"#utility.yul\":2661:2670   */\n      dup3\n        /* \"#utility.yul\":2652:2659   */\n      dup5\n        /* \"#utility.yul\":2648:2671   */\n      sub\n        /* \"#utility.yul\":2644:2676   */\n      slt\n        /* \"#utility.yul\":2641:2760   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2679:2758   */\n      tag_178\n      tag_115\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2641:2760   */\n    tag_177:\n        /* \"#utility.yul\":2799:2800   */\n      0x00\n        /* \"#utility.yul\":2824:2877   */\n      tag_179\n        /* \"#utility.yul\":2869:2876   */\n      dup5\n        /* \"#utility.yul\":2860:2866   */\n      dup3\n        /* \"#utility.yul\":2849:2858   */\n      dup6\n        /* \"#utility.yul\":2845:2867   */\n      add\n        /* \"#utility.yul\":2824:2877   */\n      tag_127\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2814:2877   */\n      swap2\n      pop\n        /* \"#utility.yul\":2770:2887   */\n      pop\n        /* \"#utility.yul\":2565:2894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2900:3018   */\n    tag_128:\n        /* \"#utility.yul\":2987:3011   */\n      tag_181\n        /* \"#utility.yul\":3005:3010   */\n      dup2\n        /* \"#utility.yul\":2987:3011   */\n      tag_125\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2982:2985   */\n      dup3\n        /* \"#utility.yul\":2975:3012   */\n      mstore\n        /* \"#utility.yul\":2900:3018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3246   */\n    tag_30:\n        /* \"#utility.yul\":3117:3121   */\n      0x00\n        /* \"#utility.yul\":3155:3157   */\n      0x20\n        /* \"#utility.yul\":3144:3153   */\n      dup3\n        /* \"#utility.yul\":3140:3158   */\n      add\n        /* \"#utility.yul\":3132:3158   */\n      swap1\n      pop\n        /* \"#utility.yul\":3168:3239   */\n      tag_183\n        /* \"#utility.yul\":3236:3237   */\n      0x00\n        /* \"#utility.yul\":3225:3234   */\n      dup4\n        /* \"#utility.yul\":3221:3238   */\n      add\n        /* \"#utility.yul\":3212:3218   */\n      dup5\n        /* \"#utility.yul\":3168:3239   */\n      tag_128\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3024:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3378   */\n    tag_129:\n        /* \"#utility.yul\":3289:3296   */\n      0x00\n        /* \"#utility.yul\":3329:3371   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3322:3327   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      and\n        /* \"#utility.yul\":3307:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3252:3378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3480   */\n    tag_130:\n        /* \"#utility.yul\":3421:3428   */\n      0x00\n        /* \"#utility.yul\":3450:3474   */\n      tag_186\n        /* \"#utility.yul\":3468:3473   */\n      dup3\n        /* \"#utility.yul\":3450:3474   */\n      tag_129\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3439:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3384:3480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3608   */\n    tag_131:\n        /* \"#utility.yul\":3559:3583   */\n      tag_188\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3559:3583   */\n      tag_130\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3549:3584   */\n      eq\n        /* \"#utility.yul\":3539:3602   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      dup1\n        /* \"#utility.yul\":3588:3600   */\n      revert\n        /* \"#utility.yul\":3539:3602   */\n    tag_189:\n        /* \"#utility.yul\":3486:3608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3753   */\n    tag_132:\n        /* \"#utility.yul\":3660:3665   */\n      0x00\n        /* \"#utility.yul\":3698:3704   */\n      dup2\n        /* \"#utility.yul\":3685:3705   */\n      calldataload\n        /* \"#utility.yul\":3676:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3747   */\n      tag_191\n        /* \"#utility.yul\":3741:3746   */\n      dup2\n        /* \"#utility.yul\":3714:3747   */\n      tag_131\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3614:3753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4233   */\n    tag_33:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3835:3841   */\n      dup1\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3872:3881   */\n      dup4\n        /* \"#utility.yul\":3863:3870   */\n      dup6\n        /* \"#utility.yul\":3859:3882   */\n      sub\n        /* \"#utility.yul\":3855:3887   */\n      slt\n        /* \"#utility.yul\":3852:3971   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":3890:3969   */\n      tag_194\n      tag_115\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3852:3971   */\n    tag_193:\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4035:4088   */\n      tag_195\n        /* \"#utility.yul\":4080:4087   */\n      dup6\n        /* \"#utility.yul\":4071:4077   */\n      dup3\n        /* \"#utility.yul\":4060:4069   */\n      dup7\n        /* \"#utility.yul\":4056:4078   */\n      add\n        /* \"#utility.yul\":4035:4088   */\n      tag_127\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4025:4088   */\n      swap3\n      pop\n        /* \"#utility.yul\":3981:4098   */\n      pop\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"#utility.yul\":4163:4216   */\n      tag_196\n        /* \"#utility.yul\":4208:4215   */\n      dup6\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_132\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4226   */\n      pop\n        /* \"#utility.yul\":3759:4233   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4357   */\n    tag_133:\n        /* \"#utility.yul\":4326:4350   */\n      tag_198\n        /* \"#utility.yul\":4344:4349   */\n      dup2\n        /* \"#utility.yul\":4326:4350   */\n      tag_122\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4321:4324   */\n      dup3\n        /* \"#utility.yul\":4314:4351   */\n      mstore\n        /* \"#utility.yul\":4239:4357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4585   */\n    tag_41:\n        /* \"#utility.yul\":4456:4460   */\n      0x00\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4483:4492   */\n      dup3\n        /* \"#utility.yul\":4479:4497   */\n      add\n        /* \"#utility.yul\":4471:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4578   */\n      tag_200\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4577   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4507:4578   */\n      tag_133\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4363:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4760   */\n    tag_134:\n        /* \"#utility.yul\":4675:4686   */\n      0x00\n        /* \"#utility.yul\":4709:4715   */\n      dup3\n        /* \"#utility.yul\":4704:4707   */\n      dup3\n        /* \"#utility.yul\":4697:4716   */\n      mstore\n        /* \"#utility.yul\":4749:4753   */\n      0x20\n        /* \"#utility.yul\":4744:4747   */\n      dup3\n        /* \"#utility.yul\":4740:4754   */\n      add\n        /* \"#utility.yul\":4725:4754   */\n      swap1\n      pop\n        /* \"#utility.yul\":4591:4760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4766:4936   */\n    tag_135:\n        /* \"#utility.yul\":4906:4928   */\n      0x44617461206d757374206265203c203130303030000000000000000000000000\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4894:4900   */\n      dup3\n        /* \"#utility.yul\":4890:4904   */\n      add\n        /* \"#utility.yul\":4883:4929   */\n      mstore\n        /* \"#utility.yul\":4766:4936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4942:5308   */\n    tag_136:\n        /* \"#utility.yul\":5084:5087   */\n      0x00\n        /* \"#utility.yul\":5105:5172   */\n      tag_204\n        /* \"#utility.yul\":5169:5171   */\n      0x14\n        /* \"#utility.yul\":5164:5167   */\n      dup4\n        /* \"#utility.yul\":5105:5172   */\n      tag_134\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5098:5172   */\n      swap2\n      pop\n        /* \"#utility.yul\":5181:5274   */\n      tag_205\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5181:5274   */\n      tag_135\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5299:5301   */\n      0x20\n        /* \"#utility.yul\":5294:5297   */\n      dup3\n        /* \"#utility.yul\":5290:5302   */\n      add\n        /* \"#utility.yul\":5283:5302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4942:5308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5733   */\n    tag_68:\n        /* \"#utility.yul\":5480:5484   */\n      0x00\n        /* \"#utility.yul\":5518:5520   */\n      0x20\n        /* \"#utility.yul\":5507:5516   */\n      dup3\n        /* \"#utility.yul\":5503:5521   */\n      add\n        /* \"#utility.yul\":5495:5521   */\n      swap1\n      pop\n        /* \"#utility.yul\":5567:5576   */\n      dup2\n        /* \"#utility.yul\":5561:5565   */\n      dup2\n        /* \"#utility.yul\":5557:5577   */\n      sub\n        /* \"#utility.yul\":5553:5554   */\n      0x00\n        /* \"#utility.yul\":5542:5551   */\n      dup4\n        /* \"#utility.yul\":5538:5555   */\n      add\n        /* \"#utility.yul\":5531:5578   */\n      mstore\n        /* \"#utility.yul\":5595:5726   */\n      tag_207\n        /* \"#utility.yul\":5721:5725   */\n      dup2\n        /* \"#utility.yul\":5595:5726   */\n      tag_136\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5587:5726   */\n      swap1\n      pop\n        /* \"#utility.yul\":5314:5733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5739:5919   */\n    tag_137:\n        /* \"#utility.yul\":5787:5864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5784:5785   */\n      0x00\n        /* \"#utility.yul\":5777:5865   */\n      mstore\n        /* \"#utility.yul\":5884:5888   */\n      0x11\n        /* \"#utility.yul\":5881:5882   */\n      0x04\n        /* \"#utility.yul\":5874:5889   */\n      mstore\n        /* \"#utility.yul\":5908:5912   */\n      0x24\n        /* \"#utility.yul\":5905:5906   */\n      0x00\n        /* \"#utility.yul\":5898:5913   */\n      revert\n        /* \"#utility.yul\":5925:6116   */\n    tag_70:\n        /* \"#utility.yul\":5965:5968   */\n      0x00\n        /* \"#utility.yul\":5984:6004   */\n      tag_210\n        /* \"#utility.yul\":6002:6003   */\n      dup3\n        /* \"#utility.yul\":5984:6004   */\n      tag_122\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5979:6004   */\n      swap2\n      pop\n        /* \"#utility.yul\":6018:6038   */\n      tag_211\n        /* \"#utility.yul\":6036:6037   */\n      dup4\n        /* \"#utility.yul\":6018:6038   */\n      tag_122\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6013:6038   */\n      swap3\n      pop\n        /* \"#utility.yul\":6061:6062   */\n      dup3\n        /* \"#utility.yul\":6058:6059   */\n      dup3\n        /* \"#utility.yul\":6054:6063   */\n      add\n        /* \"#utility.yul\":6047:6063   */\n      swap1\n      pop\n        /* \"#utility.yul\":6082:6085   */\n      dup1\n        /* \"#utility.yul\":6079:6080   */\n      dup3\n        /* \"#utility.yul\":6076:6086   */\n      gt\n        /* \"#utility.yul\":6073:6109   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6089:6107   */\n      tag_213\n      tag_137\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6073:6109   */\n    tag_212:\n        /* \"#utility.yul\":5925:6116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6299   */\n    tag_138:\n        /* \"#utility.yul\":6262:6291   */\n      0x5761697420363073206265666f7265206e657874207570646174650000000000\n        /* \"#utility.yul\":6258:6259   */\n      0x00\n        /* \"#utility.yul\":6250:6256   */\n      dup3\n        /* \"#utility.yul\":6246:6260   */\n      add\n        /* \"#utility.yul\":6239:6292   */\n      mstore\n        /* \"#utility.yul\":6122:6299   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6305:6671   */\n    tag_139:\n        /* \"#utility.yul\":6447:6450   */\n      0x00\n        /* \"#utility.yul\":6468:6535   */\n      tag_216\n        /* \"#utility.yul\":6532:6534   */\n      0x1b\n        /* \"#utility.yul\":6527:6530   */\n      dup4\n        /* \"#utility.yul\":6468:6535   */\n      tag_134\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6461:6535   */\n      swap2\n      pop\n        /* \"#utility.yul\":6544:6637   */\n      tag_217\n        /* \"#utility.yul\":6633:6636   */\n      dup3\n        /* \"#utility.yul\":6544:6637   */\n      tag_138\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6662:6664   */\n      0x20\n        /* \"#utility.yul\":6657:6660   */\n      dup3\n        /* \"#utility.yul\":6653:6665   */\n      add\n        /* \"#utility.yul\":6646:6665   */\n      swap1\n      pop\n        /* \"#utility.yul\":6305:6671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6677:7096   */\n    tag_73:\n        /* \"#utility.yul\":6843:6847   */\n      0x00\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup3\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6858:6884   */\n      swap1\n      pop\n        /* \"#utility.yul\":6930:6939   */\n      dup2\n        /* \"#utility.yul\":6924:6928   */\n      dup2\n        /* \"#utility.yul\":6920:6940   */\n      sub\n        /* \"#utility.yul\":6916:6917   */\n      0x00\n        /* \"#utility.yul\":6905:6914   */\n      dup4\n        /* \"#utility.yul\":6901:6918   */\n      add\n        /* \"#utility.yul\":6894:6941   */\n      mstore\n        /* \"#utility.yul\":6958:7089   */\n      tag_219\n        /* \"#utility.yul\":7084:7088   */\n      dup2\n        /* \"#utility.yul\":6958:7089   */\n      tag_139\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6950:7089   */\n      swap1\n      pop\n        /* \"#utility.yul\":6677:7096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7102:7220   */\n    tag_140:\n        /* \"#utility.yul\":7189:7213   */\n      tag_221\n        /* \"#utility.yul\":7207:7212   */\n      dup2\n        /* \"#utility.yul\":7189:7213   */\n      tag_130\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7184:7187   */\n      dup3\n        /* \"#utility.yul\":7177:7214   */\n      mstore\n        /* \"#utility.yul\":7102:7220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7226:7558   */\n    tag_113:\n        /* \"#utility.yul\":7347:7351   */\n      0x00\n        /* \"#utility.yul\":7385:7387   */\n      0x40\n        /* \"#utility.yul\":7374:7383   */\n      dup3\n        /* \"#utility.yul\":7370:7388   */\n      add\n        /* \"#utility.yul\":7362:7388   */\n      swap1\n      pop\n        /* \"#utility.yul\":7398:7469   */\n      tag_223\n        /* \"#utility.yul\":7466:7467   */\n      0x00\n        /* \"#utility.yul\":7455:7464   */\n      dup4\n        /* \"#utility.yul\":7451:7468   */\n      add\n        /* \"#utility.yul\":7442:7448   */\n      dup6\n        /* \"#utility.yul\":7398:7469   */\n      tag_140\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7479:7551   */\n      tag_224\n        /* \"#utility.yul\":7547:7549   */\n      0x20\n        /* \"#utility.yul\":7536:7545   */\n      dup4\n        /* \"#utility.yul\":7532:7550   */\n      add\n        /* \"#utility.yul\":7523:7529   */\n      dup5\n        /* \"#utility.yul\":7479:7551   */\n      tag_128\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7226:7558   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d68c2aeb0d607e7bf3f7cee628e5df97fb3e1024f1975d4db7df3806f9f4900364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_476": {
									"entryPoint": null,
									"id": 476,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 124,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": 468,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 369,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:6",
										"nodeType": "YulBlock",
										"src": "0:1355:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610e12380380610e1283398181016040528101906100319190610239565b6100435f801b8361007c60201b60201c565b506100747f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c8261007c60201b60201c565b505050610277565b5f61008d838361017160201b60201c565b6101675760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101046101d460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061016b565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610208826101df565b9050919050565b610218816101fe565b8114610222575f80fd5b50565b5f815190506102338161020f565b92915050565b5f806040838503121561024f5761024e6101db565b5b5f61025c85828601610225565b925050602061026d85828601610225565b9150509250929050565b610b8e806102845f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806373d4a13a1161006f57806373d4a13a1461015f57806391d148541461017d578063a217fddf146101ad578063a853211a146101cb578063c0463711146101e9578063d547741f14610207576100a7565b806301ffc9a7146100ab57806309e96008146100db578063248a9ca3146100f75780632f2ff15d1461012757806336568abe14610143575b5f80fd5b6100c560048036038101906100c091906107e0565b610223565b6040516100d29190610825565b60405180910390f35b6100f560048036038101906100f09190610871565b61029c565b005b610111600480360381019061010c91906108cf565b61036c565b60405161011e9190610909565b60405180910390f35b610141600480360381019061013c919061097c565b610388565b005b61015d6004803603810190610158919061097c565b6103aa565b005b610167610425565b60405161017491906109c9565b60405180910390f35b6101976004803603810190610192919061097c565b61042b565b6040516101a49190610825565b60405180910390f35b6101b561048e565b6040516101c29190610909565b60405180910390f35b6101d3610494565b6040516101e09190610909565b60405180910390f35b6101f16104b8565b6040516101fe91906109c9565b60405180910390f35b610221600480360381019061021c919061097c565b6104be565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102955750610294826104e0565b5b9050919050565b7f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c6102c681610549565b612710821061030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030190610a3c565b60405180910390fd5b603c6002546103199190610a87565b421161035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610b04565b60405180910390fd5b81600181905550426002819055505050565b5f805f8381526020019081526020015f20600101549050919050565b6103918261036c565b61039a81610549565b6103a4838361055d565b50505050565b6103b2610646565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610416576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610420828261064d565b505050565b60015481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b7f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c81565b60025481565b6104c78261036c565b6104d081610549565b6104da838361064d565b50505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61055a81610555610646565b610736565b50565b5f610568838361042b565b61063c5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506105d9610646565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610640565b5f90505b92915050565b5f33905090565b5f610658838361042b565b1561072c575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506106c9610646565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610730565b5f90505b92915050565b610740828261042b565b6107835780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161077a929190610b31565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6107bf8161078b565b81146107c9575f80fd5b50565b5f813590506107da816107b6565b92915050565b5f602082840312156107f5576107f4610787565b5b5f610802848285016107cc565b91505092915050565b5f8115159050919050565b61081f8161080b565b82525050565b5f6020820190506108385f830184610816565b92915050565b5f819050919050565b6108508161083e565b811461085a575f80fd5b50565b5f8135905061086b81610847565b92915050565b5f6020828403121561088657610885610787565b5b5f6108938482850161085d565b91505092915050565b5f819050919050565b6108ae8161089c565b81146108b8575f80fd5b50565b5f813590506108c9816108a5565b92915050565b5f602082840312156108e4576108e3610787565b5b5f6108f1848285016108bb565b91505092915050565b6109038161089c565b82525050565b5f60208201905061091c5f8301846108fa565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61094b82610922565b9050919050565b61095b81610941565b8114610965575f80fd5b50565b5f8135905061097681610952565b92915050565b5f806040838503121561099257610991610787565b5b5f61099f858286016108bb565b92505060206109b085828601610968565b9150509250929050565b6109c38161083e565b82525050565b5f6020820190506109dc5f8301846109ba565b92915050565b5f82825260208201905092915050565b7f44617461206d757374206265203c2031303030300000000000000000000000005f82015250565b5f610a266014836109e2565b9150610a31826109f2565b602082019050919050565b5f6020820190508181035f830152610a5381610a1a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a918261083e565b9150610a9c8361083e565b9250828201905080821115610ab457610ab3610a5a565b5b92915050565b7f5761697420363073206265666f7265206e6578742075706461746500000000005f82015250565b5f610aee601b836109e2565b9150610af982610aba565b602082019050919050565b5f6020820190508181035f830152610b1b81610ae2565b9050919050565b610b2b81610941565b82525050565b5f604082019050610b445f830185610b22565b610b5160208301846108fa565b939250505056fea2646970667358221220d68c2aeb0d607e7bf3f7cee628e5df97fb3e1024f1975d4db7df3806f9f4900364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE12 CODESIZE SUB DUP1 PUSH2 0xE12 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST PUSH2 0x43 PUSH0 DUP1 SHL DUP4 PUSH2 0x7C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x74 PUSH32 0x21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C DUP3 PUSH2 0x7C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x277 JUMP JUMPDEST PUSH0 PUSH2 0x8D DUP4 DUP4 PUSH2 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x167 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x104 PUSH2 0x1D4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16B JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208 DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218 DUP2 PUSH2 0x1FE JUMP JUMPDEST DUP2 EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F JUMPI PUSH2 0x24E PUSH2 0x1DB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25C DUP6 DUP3 DUP7 ADD PUSH2 0x225 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26D DUP6 DUP3 DUP7 ADD PUSH2 0x225 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8E DUP1 PUSH2 0x284 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73D4A13A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xA853211A EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xC0463711 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x207 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x9E96008 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x143 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x295 JUMPI POP PUSH2 0x294 DUP3 PUSH2 0x4E0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C PUSH2 0x2C6 DUP2 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x2710 DUP3 LT PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x2 SLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391 DUP3 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x39A DUP2 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3A4 DUP4 DUP4 PUSH2 0x55D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x420 DUP3 DUP3 PUSH2 0x64D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C7 DUP3 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x4D0 DUP2 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x4DA DUP4 DUP4 PUSH2 0x64D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x555 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x568 DUP4 DUP4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x63C JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x5D9 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x640 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x658 DUP4 DUP4 PUSH2 0x42B JUMP JUMPDEST ISZERO PUSH2 0x72C JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x6C9 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x730 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x740 DUP3 DUP3 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x783 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP3 SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BF DUP2 PUSH2 0x78B JUMP JUMPDEST DUP2 EQ PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DA DUP2 PUSH2 0x7B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F5 JUMPI PUSH2 0x7F4 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x802 DUP5 DUP3 DUP6 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81F DUP2 PUSH2 0x80B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x838 PUSH0 DUP4 ADD DUP5 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x850 DUP2 PUSH2 0x83E JUMP JUMPDEST DUP2 EQ PUSH2 0x85A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86B DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x893 DUP5 DUP3 DUP6 ADD PUSH2 0x85D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x89C JUMP JUMPDEST DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F1 DUP5 DUP3 DUP6 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x89C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH0 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x94B DUP3 PUSH2 0x922 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95B DUP2 PUSH2 0x941 JUMP JUMPDEST DUP2 EQ PUSH2 0x965 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x976 DUP2 PUSH2 0x952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x99F DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9B0 DUP6 DUP3 DUP7 ADD PUSH2 0x968 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x83E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DC PUSH0 DUP4 ADD DUP5 PUSH2 0x9BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44617461206D757374206265203C203130303030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA26 PUSH1 0x14 DUP4 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA31 DUP3 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA53 DUP2 PUSH2 0xA1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA91 DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP2 POP PUSH2 0xA9C DUP4 PUSH2 0x83E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xAB3 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5761697420363073206265666F7265206E657874207570646174650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAEE PUSH1 0x1B DUP4 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF9 DUP3 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB1B DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0x941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB44 PUSH0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xB51 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 DUP13 0x2A 0xEB 0xD PUSH1 0x7E PUSH28 0xF3F7CEE628E5DF97FB3E1024F1975D4DB7DF3806F9F4900364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "297:797:5:-:0;;;474:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;527:37;2232:4:0;538:18:5;;558:5;527:10;;;:37;;:::i;:::-;;574:31;387:24;598:6;574:10;;;:31;;:::i;:::-;;474:138;;297:797;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;297:797:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1166,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EDITOR_ROLE_454": {
									"entryPoint": 1172,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 1846,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 1353,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 1373,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": 1606,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 1613,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@data_456": {
									"entryPoint": 1061,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 876,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 904,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1067,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lastUpdate_458": {
									"entryPoint": 1208,
									"id": 458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 938,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1214,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_431": {
									"entryPoint": 1248,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 547,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateData_512": {
									"entryPoint": 668,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1": {
									"entryPoint": 2746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7561:6",
										"nodeType": "YulBlock",
										"src": "0:7561:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "378:105:6",
													"nodeType": "YulBlock",
													"src": "378:105:6",
													"statements": [
														{
															"nativeSrc": "388:89:6",
															"nodeType": "YulAssignment",
															"src": "388:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:6",
																		"nodeType": "YulLiteral",
																		"src": "410:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:6"
																},
																"nativeSrc": "399:78:6",
																"nodeType": "YulFunctionCall",
																"src": "399:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:6",
														"nodeType": "YulTypedName",
														"src": "360:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:6",
														"nodeType": "YulTypedName",
														"src": "370:7:6",
														"type": ""
													}
												],
												"src": "334:149:6"
											},
											{
												"body": {
													"nativeSrc": "531:78:6",
													"nodeType": "YulBlock",
													"src": "531:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:6",
																"nodeType": "YulBlock",
																"src": "587:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:6",
																					"nodeType": "YulLiteral",
																					"src": "596:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "599:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:6"
																			},
																			"nativeSrc": "589:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:6"
																		},
																		"nativeSrc": "589:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:6"
																				},
																				"nativeSrc": "561:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:6"
																		},
																		"nativeSrc": "551:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "541:62:6",
															"nodeType": "YulIf",
															"src": "541:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:6",
														"nodeType": "YulTypedName",
														"src": "524:5:6",
														"type": ""
													}
												],
												"src": "489:120:6"
											},
											{
												"body": {
													"nativeSrc": "666:86:6",
													"nodeType": "YulBlock",
													"src": "666:86:6",
													"statements": [
														{
															"nativeSrc": "676:29:6",
															"nodeType": "YulAssignment",
															"src": "676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:6"
																},
																"nativeSrc": "685:20:6",
																"nodeType": "YulFunctionCall",
																"src": "685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:6"
																},
																"nativeSrc": "714:32:6",
																"nodeType": "YulFunctionCall",
																"src": "714:32:6"
															},
															"nativeSrc": "714:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:6",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:6",
														"nodeType": "YulTypedName",
														"src": "652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:6",
														"nodeType": "YulTypedName",
														"src": "660:5:6",
														"type": ""
													}
												],
												"src": "615:137:6"
											},
											{
												"body": {
													"nativeSrc": "823:262:6",
													"nodeType": "YulBlock",
													"src": "823:262:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:6",
																"nodeType": "YulBlock",
																"src": "869:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:6"
																			},
																			"nativeSrc": "871:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:6"
																		},
																		"nativeSrc": "871:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nativeSrc": "840:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:6",
																		"nodeType": "YulLiteral",
																		"src": "865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:6"
																},
																"nativeSrc": "836:32:6",
																"nodeType": "YulFunctionCall",
																"src": "836:32:6"
															},
															"nativeSrc": "833:119:6",
															"nodeType": "YulIf",
															"src": "833:119:6"
														},
														{
															"nativeSrc": "962:116:6",
															"nodeType": "YulBlock",
															"src": "962:116:6",
															"statements": [
																{
																	"nativeSrc": "977:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:6",
																		"nodeType": "YulLiteral",
																		"src": "991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:6",
																			"nodeType": "YulTypedName",
																			"src": "981:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:6",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:6"
																				},
																				"nativeSrc": "1036:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:6"
																		},
																		"nativeSrc": "1016:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:6",
														"nodeType": "YulTypedName",
														"src": "793:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:6",
														"nodeType": "YulTypedName",
														"src": "804:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:6",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													}
												],
												"src": "758:327:6"
											},
											{
												"body": {
													"nativeSrc": "1133:48:6",
													"nodeType": "YulBlock",
													"src": "1133:48:6",
													"statements": [
														{
															"nativeSrc": "1143:32:6",
															"nodeType": "YulAssignment",
															"src": "1143:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:6"
																		},
																		"nativeSrc": "1161:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:6"
																},
																"nativeSrc": "1154:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:6",
														"nodeType": "YulTypedName",
														"src": "1115:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:6",
														"nodeType": "YulTypedName",
														"src": "1125:7:6",
														"type": ""
													}
												],
												"src": "1091:90:6"
											},
											{
												"body": {
													"nativeSrc": "1246:50:6",
													"nodeType": "YulBlock",
													"src": "1246:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:6"
																		},
																		"nativeSrc": "1268:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																},
																"nativeSrc": "1256:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:6"
															},
															"nativeSrc": "1256:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:6",
														"nodeType": "YulTypedName",
														"src": "1234:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:6",
														"nodeType": "YulTypedName",
														"src": "1241:3:6",
														"type": ""
													}
												],
												"src": "1187:109:6"
											},
											{
												"body": {
													"nativeSrc": "1394:118:6",
													"nodeType": "YulBlock",
													"src": "1394:118:6",
													"statements": [
														{
															"nativeSrc": "1404:26:6",
															"nodeType": "YulAssignment",
															"src": "1404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:6"
																},
																"nativeSrc": "1412:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nativeSrc": "1487:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:6"
																},
																"nativeSrc": "1440:65:6",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:6"
															},
															"nativeSrc": "1440:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:6",
														"nodeType": "YulTypedName",
														"src": "1366:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:6",
														"nodeType": "YulTypedName",
														"src": "1378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:6",
														"nodeType": "YulTypedName",
														"src": "1389:4:6",
														"type": ""
													}
												],
												"src": "1302:210:6"
											},
											{
												"body": {
													"nativeSrc": "1563:32:6",
													"nodeType": "YulBlock",
													"src": "1563:32:6",
													"statements": [
														{
															"nativeSrc": "1573:16:6",
															"nodeType": "YulAssignment",
															"src": "1573:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:6",
																"nodeType": "YulIdentifier",
																"src": "1584:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:6",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:6",
														"nodeType": "YulTypedName",
														"src": "1555:7:6",
														"type": ""
													}
												],
												"src": "1518:77:6"
											},
											{
												"body": {
													"nativeSrc": "1644:79:6",
													"nodeType": "YulBlock",
													"src": "1644:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:6",
																"nodeType": "YulBlock",
																"src": "1701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:6"
																			},
																			"nativeSrc": "1703:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:6"
																		},
																		"nativeSrc": "1703:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1674:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:6"
																				},
																				"nativeSrc": "1674:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:6"
																		},
																		"nativeSrc": "1664:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:6"
																},
																"nativeSrc": "1657:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:6"
															},
															"nativeSrc": "1654:63:6",
															"nodeType": "YulIf",
															"src": "1654:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1601:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:6",
														"nodeType": "YulTypedName",
														"src": "1637:5:6",
														"type": ""
													}
												],
												"src": "1601:122:6"
											},
											{
												"body": {
													"nativeSrc": "1781:87:6",
													"nodeType": "YulBlock",
													"src": "1781:87:6",
													"statements": [
														{
															"nativeSrc": "1791:29:6",
															"nodeType": "YulAssignment",
															"src": "1791:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:6"
																},
																"nativeSrc": "1800:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1829:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:6"
																},
																"nativeSrc": "1829:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:6"
															},
															"nativeSrc": "1829:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1729:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:6",
														"nodeType": "YulTypedName",
														"src": "1759:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:6",
														"nodeType": "YulTypedName",
														"src": "1767:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:6",
														"nodeType": "YulTypedName",
														"src": "1775:5:6",
														"type": ""
													}
												],
												"src": "1729:139:6"
											},
											{
												"body": {
													"nativeSrc": "1940:263:6",
													"nodeType": "YulBlock",
													"src": "1940:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:6",
																"nodeType": "YulBlock",
																"src": "1986:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:6"
																			},
																			"nativeSrc": "1988:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:6"
																		},
																		"nativeSrc": "1988:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:6"
																		},
																		"nativeSrc": "1957:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:6"
																},
																"nativeSrc": "1953:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:6"
															},
															"nativeSrc": "1950:119:6",
															"nodeType": "YulIf",
															"src": "1950:119:6"
														},
														{
															"nativeSrc": "2079:117:6",
															"nodeType": "YulBlock",
															"src": "2079:117:6",
															"statements": [
																{
																	"nativeSrc": "2094:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:6"
																				},
																				"nativeSrc": "2154:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2133:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:6"
																		},
																		"nativeSrc": "2133:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1874:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:6",
														"nodeType": "YulTypedName",
														"src": "1910:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:6",
														"nodeType": "YulTypedName",
														"src": "1921:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:6",
														"nodeType": "YulTypedName",
														"src": "1933:6:6",
														"type": ""
													}
												],
												"src": "1874:329:6"
											},
											{
												"body": {
													"nativeSrc": "2254:32:6",
													"nodeType": "YulBlock",
													"src": "2254:32:6",
													"statements": [
														{
															"nativeSrc": "2264:16:6",
															"nodeType": "YulAssignment",
															"src": "2264:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2275:5:6",
																"nodeType": "YulIdentifier",
																"src": "2275:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2264:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2209:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2236:5:6",
														"nodeType": "YulTypedName",
														"src": "2236:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2246:7:6",
														"nodeType": "YulTypedName",
														"src": "2246:7:6",
														"type": ""
													}
												],
												"src": "2209:77:6"
											},
											{
												"body": {
													"nativeSrc": "2335:79:6",
													"nodeType": "YulBlock",
													"src": "2335:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2392:16:6",
																"nodeType": "YulBlock",
																"src": "2392:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2401:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2404:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2394:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:6"
																			},
																			"nativeSrc": "2394:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2394:12:6"
																		},
																		"nativeSrc": "2394:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2394:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2358:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2358:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2383:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2383:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2365:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2365:17:6"
																				},
																				"nativeSrc": "2365:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2365:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2355:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2355:2:6"
																		},
																		"nativeSrc": "2355:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2348:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:6"
																},
																"nativeSrc": "2348:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2348:43:6"
															},
															"nativeSrc": "2345:63:6",
															"nodeType": "YulIf",
															"src": "2345:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2292:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2328:5:6",
														"nodeType": "YulTypedName",
														"src": "2328:5:6",
														"type": ""
													}
												],
												"src": "2292:122:6"
											},
											{
												"body": {
													"nativeSrc": "2472:87:6",
													"nodeType": "YulBlock",
													"src": "2472:87:6",
													"statements": [
														{
															"nativeSrc": "2482:29:6",
															"nodeType": "YulAssignment",
															"src": "2482:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2504:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2504:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2491:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2491:12:6"
																},
																"nativeSrc": "2491:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2491:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2482:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2482:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2520:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2520:26:6"
																},
																"nativeSrc": "2520:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2520:33:6"
															},
															"nativeSrc": "2520:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2520:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2420:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2450:6:6",
														"nodeType": "YulTypedName",
														"src": "2450:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2458:3:6",
														"nodeType": "YulTypedName",
														"src": "2458:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2466:5:6",
														"nodeType": "YulTypedName",
														"src": "2466:5:6",
														"type": ""
													}
												],
												"src": "2420:139:6"
											},
											{
												"body": {
													"nativeSrc": "2631:263:6",
													"nodeType": "YulBlock",
													"src": "2631:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2677:83:6",
																"nodeType": "YulBlock",
																"src": "2677:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2679:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2679:77:6"
																			},
																			"nativeSrc": "2679:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:79:6"
																		},
																		"nativeSrc": "2679:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2652:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2648:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:6"
																		},
																		"nativeSrc": "2648:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2673:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2644:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:6"
																},
																"nativeSrc": "2644:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2644:32:6"
															},
															"nativeSrc": "2641:119:6",
															"nodeType": "YulIf",
															"src": "2641:119:6"
														},
														{
															"nativeSrc": "2770:117:6",
															"nodeType": "YulBlock",
															"src": "2770:117:6",
															"statements": [
																{
																	"nativeSrc": "2785:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2785:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2799:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2799:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2789:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2789:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2814:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2814:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2849:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2849:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2860:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2860:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2845:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2845:3:6"
																				},
																				"nativeSrc": "2845:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2845:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2869:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2869:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2824:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2824:20:6"
																		},
																		"nativeSrc": "2824:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2824:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2814:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2814:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2565:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2601:9:6",
														"nodeType": "YulTypedName",
														"src": "2601:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2612:7:6",
														"nodeType": "YulTypedName",
														"src": "2612:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2624:6:6",
														"nodeType": "YulTypedName",
														"src": "2624:6:6",
														"type": ""
													}
												],
												"src": "2565:329:6"
											},
											{
												"body": {
													"nativeSrc": "2965:53:6",
													"nodeType": "YulBlock",
													"src": "2965:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2982:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2982:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3005:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3005:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2987:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2987:17:6"
																		},
																		"nativeSrc": "2987:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:37:6"
															},
															"nativeSrc": "2975:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2975:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2900:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2953:5:6",
														"nodeType": "YulTypedName",
														"src": "2953:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2960:3:6",
														"nodeType": "YulTypedName",
														"src": "2960:3:6",
														"type": ""
													}
												],
												"src": "2900:118:6"
											},
											{
												"body": {
													"nativeSrc": "3122:124:6",
													"nodeType": "YulBlock",
													"src": "3122:124:6",
													"statements": [
														{
															"nativeSrc": "3132:26:6",
															"nodeType": "YulAssignment",
															"src": "3132:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3144:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3144:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3155:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3140:3:6"
																},
																"nativeSrc": "3140:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3140:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3132:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3132:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3212:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3212:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3225:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3225:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3236:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3236:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:6"
																		},
																		"nativeSrc": "3221:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3168:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3168:43:6"
																},
																"nativeSrc": "3168:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3168:71:6"
															},
															"nativeSrc": "3168:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3168:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3024:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3094:9:6",
														"nodeType": "YulTypedName",
														"src": "3094:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3106:6:6",
														"nodeType": "YulTypedName",
														"src": "3106:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3117:4:6",
														"nodeType": "YulTypedName",
														"src": "3117:4:6",
														"type": ""
													}
												],
												"src": "3024:222:6"
											},
											{
												"body": {
													"nativeSrc": "3297:81:6",
													"nodeType": "YulBlock",
													"src": "3297:81:6",
													"statements": [
														{
															"nativeSrc": "3307:65:6",
															"nodeType": "YulAssignment",
															"src": "3307:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3322:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3329:42:6",
																		"nodeType": "YulLiteral",
																		"src": "3329:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3318:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:6"
																},
																"nativeSrc": "3318:54:6",
																"nodeType": "YulFunctionCall",
																"src": "3318:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3307:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3307:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3252:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3279:5:6",
														"nodeType": "YulTypedName",
														"src": "3279:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3289:7:6",
														"nodeType": "YulTypedName",
														"src": "3289:7:6",
														"type": ""
													}
												],
												"src": "3252:126:6"
											},
											{
												"body": {
													"nativeSrc": "3429:51:6",
													"nodeType": "YulBlock",
													"src": "3429:51:6",
													"statements": [
														{
															"nativeSrc": "3439:35:6",
															"nodeType": "YulAssignment",
															"src": "3439:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3450:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3450:17:6"
																},
																"nativeSrc": "3450:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3450:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3439:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3439:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3384:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3411:5:6",
														"nodeType": "YulTypedName",
														"src": "3411:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3421:7:6",
														"nodeType": "YulTypedName",
														"src": "3421:7:6",
														"type": ""
													}
												],
												"src": "3384:96:6"
											},
											{
												"body": {
													"nativeSrc": "3529:79:6",
													"nodeType": "YulBlock",
													"src": "3529:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3586:16:6",
																"nodeType": "YulBlock",
																"src": "3586:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3595:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3595:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3598:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3598:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3588:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:6"
																			},
																			"nativeSrc": "3588:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3588:12:6"
																		},
																		"nativeSrc": "3588:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3588:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3552:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3552:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3577:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3577:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3559:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3559:17:6"
																				},
																				"nativeSrc": "3559:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3559:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3549:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3549:2:6"
																		},
																		"nativeSrc": "3549:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3542:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:6"
																},
																"nativeSrc": "3542:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3542:43:6"
															},
															"nativeSrc": "3539:63:6",
															"nodeType": "YulIf",
															"src": "3539:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3486:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3522:5:6",
														"nodeType": "YulTypedName",
														"src": "3522:5:6",
														"type": ""
													}
												],
												"src": "3486:122:6"
											},
											{
												"body": {
													"nativeSrc": "3666:87:6",
													"nodeType": "YulBlock",
													"src": "3666:87:6",
													"statements": [
														{
															"nativeSrc": "3676:29:6",
															"nodeType": "YulAssignment",
															"src": "3676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3698:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:6"
																},
																"nativeSrc": "3685:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3676:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3741:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3741:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3714:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3714:26:6"
																},
																"nativeSrc": "3714:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3714:33:6"
															},
															"nativeSrc": "3714:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3714:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3614:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3644:6:6",
														"nodeType": "YulTypedName",
														"src": "3644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3652:3:6",
														"nodeType": "YulTypedName",
														"src": "3652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3660:5:6",
														"nodeType": "YulTypedName",
														"src": "3660:5:6",
														"type": ""
													}
												],
												"src": "3614:139:6"
											},
											{
												"body": {
													"nativeSrc": "3842:391:6",
													"nodeType": "YulBlock",
													"src": "3842:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3888:83:6",
																"nodeType": "YulBlock",
																"src": "3888:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3890:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3890:77:6"
																			},
																			"nativeSrc": "3890:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3890:79:6"
																		},
																		"nativeSrc": "3890:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3890:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3863:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3863:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3872:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3872:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3859:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:6"
																		},
																		"nativeSrc": "3859:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3855:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:6"
																},
																"nativeSrc": "3855:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3855:32:6"
															},
															"nativeSrc": "3852:119:6",
															"nodeType": "YulIf",
															"src": "3852:119:6"
														},
														{
															"nativeSrc": "3981:117:6",
															"nodeType": "YulBlock",
															"src": "3981:117:6",
															"statements": [
																{
																	"nativeSrc": "3996:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3996:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4010:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4010:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4000:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4000:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4025:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4025:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4060:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4060:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4071:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4071:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4056:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4056:3:6"
																				},
																				"nativeSrc": "4056:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4056:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4080:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4080:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4035:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4035:20:6"
																		},
																		"nativeSrc": "4035:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4035:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4025:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4025:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4108:118:6",
															"nodeType": "YulBlock",
															"src": "4108:118:6",
															"statements": [
																{
																	"nativeSrc": "4123:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4123:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4127:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4127:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:6"
																				},
																				"nativeSrc": "4184:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4163:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:6"
																		},
																		"nativeSrc": "4163:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4153:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3759:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:6",
														"nodeType": "YulTypedName",
														"src": "3804:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3815:7:6",
														"nodeType": "YulTypedName",
														"src": "3815:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3827:6:6",
														"nodeType": "YulTypedName",
														"src": "3827:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3835:6:6",
														"nodeType": "YulTypedName",
														"src": "3835:6:6",
														"type": ""
													}
												],
												"src": "3759:474:6"
											},
											{
												"body": {
													"nativeSrc": "4304:53:6",
													"nodeType": "YulBlock",
													"src": "4304:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4321:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4321:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4344:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4344:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4326:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4326:17:6"
																		},
																		"nativeSrc": "4326:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4314:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:6"
																},
																"nativeSrc": "4314:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4314:37:6"
															},
															"nativeSrc": "4314:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4314:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4239:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4292:5:6",
														"nodeType": "YulTypedName",
														"src": "4292:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4299:3:6",
														"nodeType": "YulTypedName",
														"src": "4299:3:6",
														"type": ""
													}
												],
												"src": "4239:118:6"
											},
											{
												"body": {
													"nativeSrc": "4461:124:6",
													"nodeType": "YulBlock",
													"src": "4461:124:6",
													"statements": [
														{
															"nativeSrc": "4471:26:6",
															"nodeType": "YulAssignment",
															"src": "4471:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4494:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4479:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:6"
																},
																"nativeSrc": "4479:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4471:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4471:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4551:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4575:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4560:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:6"
																		},
																		"nativeSrc": "4560:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4507:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4507:43:6"
																},
																"nativeSrc": "4507:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4507:71:6"
															},
															"nativeSrc": "4507:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4507:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4363:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4433:9:6",
														"nodeType": "YulTypedName",
														"src": "4433:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4445:6:6",
														"nodeType": "YulTypedName",
														"src": "4445:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4456:4:6",
														"nodeType": "YulTypedName",
														"src": "4456:4:6",
														"type": ""
													}
												],
												"src": "4363:222:6"
											},
											{
												"body": {
													"nativeSrc": "4687:73:6",
													"nodeType": "YulBlock",
													"src": "4687:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4704:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4704:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4709:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4709:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4697:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:6"
																},
																"nativeSrc": "4697:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4697:19:6"
															},
															"nativeSrc": "4697:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "4697:19:6"
														},
														{
															"nativeSrc": "4725:29:6",
															"nodeType": "YulAssignment",
															"src": "4725:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4744:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4744:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4749:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4749:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4740:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:6"
																},
																"nativeSrc": "4740:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4740:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4725:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "4725:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4591:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4659:3:6",
														"nodeType": "YulTypedName",
														"src": "4659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4664:6:6",
														"nodeType": "YulTypedName",
														"src": "4664:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4675:11:6",
														"nodeType": "YulTypedName",
														"src": "4675:11:6",
														"type": ""
													}
												],
												"src": "4591:169:6"
											},
											{
												"body": {
													"nativeSrc": "4872:64:6",
													"nodeType": "YulBlock",
													"src": "4872:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4894:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4894:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4902:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4902:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4890:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:6"
																		},
																		"nativeSrc": "4890:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:14:6"
																	},
																	{
																		"hexValue": "44617461206d757374206265203c203130303030",
																		"kind": "string",
																		"nativeSrc": "4906:22:6",
																		"nodeType": "YulLiteral",
																		"src": "4906:22:6",
																		"type": "",
																		"value": "Data must be < 10000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4883:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4883:6:6"
																},
																"nativeSrc": "4883:46:6",
																"nodeType": "YulFunctionCall",
																"src": "4883:46:6"
															},
															"nativeSrc": "4883:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "4883:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9",
												"nativeSrc": "4766:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4864:6:6",
														"nodeType": "YulTypedName",
														"src": "4864:6:6",
														"type": ""
													}
												],
												"src": "4766:170:6"
											},
											{
												"body": {
													"nativeSrc": "5088:220:6",
													"nodeType": "YulBlock",
													"src": "5088:220:6",
													"statements": [
														{
															"nativeSrc": "5098:74:6",
															"nodeType": "YulAssignment",
															"src": "5098:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5164:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5164:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5105:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5105:58:6"
																},
																"nativeSrc": "5105:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5105:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5098:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5098:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9",
																	"nativeSrc": "5181:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5181:88:6"
																},
																"nativeSrc": "5181:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5181:93:6"
															},
															"nativeSrc": "5181:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5181:93:6"
														},
														{
															"nativeSrc": "5283:19:6",
															"nodeType": "YulAssignment",
															"src": "5283:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5294:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5294:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5299:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5290:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:6"
																},
																"nativeSrc": "5290:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5290:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5283:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5283:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4942:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5076:3:6",
														"nodeType": "YulTypedName",
														"src": "5076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5084:3:6",
														"nodeType": "YulTypedName",
														"src": "5084:3:6",
														"type": ""
													}
												],
												"src": "4942:366:6"
											},
											{
												"body": {
													"nativeSrc": "5485:248:6",
													"nodeType": "YulBlock",
													"src": "5485:248:6",
													"statements": [
														{
															"nativeSrc": "5495:26:6",
															"nodeType": "YulAssignment",
															"src": "5495:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5507:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5507:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5518:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5518:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5503:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5503:3:6"
																},
																"nativeSrc": "5503:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5503:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5495:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5495:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5542:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5553:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5553:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5538:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:6"
																		},
																		"nativeSrc": "5538:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5538:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5561:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5567:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:6"
																		},
																		"nativeSrc": "5557:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5531:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:6"
																},
																"nativeSrc": "5531:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5531:47:6"
															},
															"nativeSrc": "5531:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5531:47:6"
														},
														{
															"nativeSrc": "5587:139:6",
															"nodeType": "YulAssignment",
															"src": "5587:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5721:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5721:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5595:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5595:124:6"
																},
																"nativeSrc": "5595:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5595:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5587:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5587:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5314:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:6",
														"nodeType": "YulTypedName",
														"src": "5465:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5480:4:6",
														"nodeType": "YulTypedName",
														"src": "5480:4:6",
														"type": ""
													}
												],
												"src": "5314:419:6"
											},
											{
												"body": {
													"nativeSrc": "5767:152:6",
													"nodeType": "YulBlock",
													"src": "5767:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5784:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5784:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5787:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5787:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:6"
																},
																"nativeSrc": "5777:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5777:88:6"
															},
															"nativeSrc": "5777:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5777:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5881:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5881:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5884:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5884:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5874:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:6"
																},
																"nativeSrc": "5874:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5874:15:6"
															},
															"nativeSrc": "5874:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5874:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5905:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5905:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5908:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5898:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:6"
																},
																"nativeSrc": "5898:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5898:15:6"
															},
															"nativeSrc": "5898:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5898:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5739:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5739:180:6"
											},
											{
												"body": {
													"nativeSrc": "5969:147:6",
													"nodeType": "YulBlock",
													"src": "5969:147:6",
													"statements": [
														{
															"nativeSrc": "5979:25:6",
															"nodeType": "YulAssignment",
															"src": "5979:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6002:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6002:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5984:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5984:17:6"
																},
																"nativeSrc": "5984:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5984:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5979:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "5979:1:6"
																}
															]
														},
														{
															"nativeSrc": "6013:25:6",
															"nodeType": "YulAssignment",
															"src": "6013:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6036:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6036:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6018:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6018:17:6"
																},
																"nativeSrc": "6018:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6018:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6013:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6013:1:6"
																}
															]
														},
														{
															"nativeSrc": "6047:16:6",
															"nodeType": "YulAssignment",
															"src": "6047:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6058:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6058:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6061:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6061:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6054:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6054:3:6"
																},
																"nativeSrc": "6054:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6054:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6047:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6047:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6087:22:6",
																"nodeType": "YulBlock",
																"src": "6087:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6089:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6089:16:6"
																			},
																			"nativeSrc": "6089:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6089:18:6"
																		},
																		"nativeSrc": "6089:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6089:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6079:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6079:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6082:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6082:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6076:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6076:2:6"
																},
																"nativeSrc": "6076:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6076:10:6"
															},
															"nativeSrc": "6073:36:6",
															"nodeType": "YulIf",
															"src": "6073:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5925:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5956:1:6",
														"nodeType": "YulTypedName",
														"src": "5956:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5959:1:6",
														"nodeType": "YulTypedName",
														"src": "5959:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5965:3:6",
														"nodeType": "YulTypedName",
														"src": "5965:3:6",
														"type": ""
													}
												],
												"src": "5925:191:6"
											},
											{
												"body": {
													"nativeSrc": "6228:71:6",
													"nodeType": "YulBlock",
													"src": "6228:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6250:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6250:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6258:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6258:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6246:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6246:3:6"
																		},
																		"nativeSrc": "6246:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6246:14:6"
																	},
																	{
																		"hexValue": "5761697420363073206265666f7265206e65787420757064617465",
																		"kind": "string",
																		"nativeSrc": "6262:29:6",
																		"nodeType": "YulLiteral",
																		"src": "6262:29:6",
																		"type": "",
																		"value": "Wait 60s before next update"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:6"
																},
																"nativeSrc": "6239:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6239:53:6"
															},
															"nativeSrc": "6239:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "6239:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1",
												"nativeSrc": "6122:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6220:6:6",
														"nodeType": "YulTypedName",
														"src": "6220:6:6",
														"type": ""
													}
												],
												"src": "6122:177:6"
											},
											{
												"body": {
													"nativeSrc": "6451:220:6",
													"nodeType": "YulBlock",
													"src": "6451:220:6",
													"statements": [
														{
															"nativeSrc": "6461:74:6",
															"nodeType": "YulAssignment",
															"src": "6461:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6527:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6527:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6532:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6532:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6468:58:6"
																},
																"nativeSrc": "6468:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6468:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6461:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6461:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6633:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6633:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1",
																	"nativeSrc": "6544:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6544:88:6"
																},
																"nativeSrc": "6544:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6544:93:6"
															},
															"nativeSrc": "6544:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6544:93:6"
														},
														{
															"nativeSrc": "6646:19:6",
															"nodeType": "YulAssignment",
															"src": "6646:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6657:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6657:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6662:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6662:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6653:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6653:3:6"
																},
																"nativeSrc": "6653:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6653:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6646:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6646:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6305:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6439:3:6",
														"nodeType": "YulTypedName",
														"src": "6439:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6447:3:6",
														"nodeType": "YulTypedName",
														"src": "6447:3:6",
														"type": ""
													}
												],
												"src": "6305:366:6"
											},
											{
												"body": {
													"nativeSrc": "6848:248:6",
													"nodeType": "YulBlock",
													"src": "6848:248:6",
													"statements": [
														{
															"nativeSrc": "6858:26:6",
															"nodeType": "YulAssignment",
															"src": "6858:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6870:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6870:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6881:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6881:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6866:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6866:3:6"
																},
																"nativeSrc": "6866:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6866:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6858:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6858:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6905:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6916:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6916:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6901:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:6"
																		},
																		"nativeSrc": "6901:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6901:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6924:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6924:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6930:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6930:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:6"
																		},
																		"nativeSrc": "6920:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6920:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6894:6:6"
																},
																"nativeSrc": "6894:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6894:47:6"
															},
															"nativeSrc": "6894:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6894:47:6"
														},
														{
															"nativeSrc": "6950:139:6",
															"nodeType": "YulAssignment",
															"src": "6950:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7084:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7084:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6958:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6958:124:6"
																},
																"nativeSrc": "6958:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6958:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6950:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6950:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6677:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6828:9:6",
														"nodeType": "YulTypedName",
														"src": "6828:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6843:4:6",
														"nodeType": "YulTypedName",
														"src": "6843:4:6",
														"type": ""
													}
												],
												"src": "6677:419:6"
											},
											{
												"body": {
													"nativeSrc": "7167:53:6",
													"nodeType": "YulBlock",
													"src": "7167:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7184:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7184:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7207:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7207:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7189:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "7189:17:6"
																		},
																		"nativeSrc": "7189:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7189:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7177:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7177:6:6"
																},
																"nativeSrc": "7177:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7177:37:6"
															},
															"nativeSrc": "7177:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7177:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7102:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7155:5:6",
														"nodeType": "YulTypedName",
														"src": "7155:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7162:3:6",
														"nodeType": "YulTypedName",
														"src": "7162:3:6",
														"type": ""
													}
												],
												"src": "7102:118:6"
											},
											{
												"body": {
													"nativeSrc": "7352:206:6",
													"nodeType": "YulBlock",
													"src": "7352:206:6",
													"statements": [
														{
															"nativeSrc": "7362:26:6",
															"nodeType": "YulAssignment",
															"src": "7362:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7374:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7374:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7385:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7385:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7370:3:6"
																},
																"nativeSrc": "7370:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7370:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7362:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7362:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7442:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7442:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7455:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7455:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7466:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7466:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7451:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:6"
																		},
																		"nativeSrc": "7451:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7398:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7398:43:6"
																},
																"nativeSrc": "7398:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7398:71:6"
															},
															"nativeSrc": "7398:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7398:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7523:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7523:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7536:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7536:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7547:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7547:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:6"
																		},
																		"nativeSrc": "7532:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7479:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7479:43:6"
																},
																"nativeSrc": "7479:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7479:72:6"
															},
															"nativeSrc": "7479:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7479:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "7226:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7316:9:6",
														"nodeType": "YulTypedName",
														"src": "7316:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7328:6:6",
														"nodeType": "YulTypedName",
														"src": "7328:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7336:6:6",
														"nodeType": "YulTypedName",
														"src": "7336:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7347:4:6",
														"nodeType": "YulTypedName",
														"src": "7347:4:6",
														"type": ""
													}
												],
												"src": "7226:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Data must be < 10000\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Wait 60s before next update\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806373d4a13a1161006f57806373d4a13a1461015f57806391d148541461017d578063a217fddf146101ad578063a853211a146101cb578063c0463711146101e9578063d547741f14610207576100a7565b806301ffc9a7146100ab57806309e96008146100db578063248a9ca3146100f75780632f2ff15d1461012757806336568abe14610143575b5f80fd5b6100c560048036038101906100c091906107e0565b610223565b6040516100d29190610825565b60405180910390f35b6100f560048036038101906100f09190610871565b61029c565b005b610111600480360381019061010c91906108cf565b61036c565b60405161011e9190610909565b60405180910390f35b610141600480360381019061013c919061097c565b610388565b005b61015d6004803603810190610158919061097c565b6103aa565b005b610167610425565b60405161017491906109c9565b60405180910390f35b6101976004803603810190610192919061097c565b61042b565b6040516101a49190610825565b60405180910390f35b6101b561048e565b6040516101c29190610909565b60405180910390f35b6101d3610494565b6040516101e09190610909565b60405180910390f35b6101f16104b8565b6040516101fe91906109c9565b60405180910390f35b610221600480360381019061021c919061097c565b6104be565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102955750610294826104e0565b5b9050919050565b7f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c6102c681610549565b612710821061030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030190610a3c565b60405180910390fd5b603c6002546103199190610a87565b421161035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610b04565b60405180910390fd5b81600181905550426002819055505050565b5f805f8381526020019081526020015f20600101549050919050565b6103918261036c565b61039a81610549565b6103a4838361055d565b50505050565b6103b2610646565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610416576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610420828261064d565b505050565b60015481565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b7f21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c81565b60025481565b6104c78261036c565b6104d081610549565b6104da838361064d565b50505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61055a81610555610646565b610736565b50565b5f610568838361042b565b61063c5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506105d9610646565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610640565b5f90505b92915050565b5f33905090565b5f610658838361042b565b1561072c575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506106c9610646565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610730565b5f90505b92915050565b610740828261042b565b6107835780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161077a929190610b31565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6107bf8161078b565b81146107c9575f80fd5b50565b5f813590506107da816107b6565b92915050565b5f602082840312156107f5576107f4610787565b5b5f610802848285016107cc565b91505092915050565b5f8115159050919050565b61081f8161080b565b82525050565b5f6020820190506108385f830184610816565b92915050565b5f819050919050565b6108508161083e565b811461085a575f80fd5b50565b5f8135905061086b81610847565b92915050565b5f6020828403121561088657610885610787565b5b5f6108938482850161085d565b91505092915050565b5f819050919050565b6108ae8161089c565b81146108b8575f80fd5b50565b5f813590506108c9816108a5565b92915050565b5f602082840312156108e4576108e3610787565b5b5f6108f1848285016108bb565b91505092915050565b6109038161089c565b82525050565b5f60208201905061091c5f8301846108fa565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61094b82610922565b9050919050565b61095b81610941565b8114610965575f80fd5b50565b5f8135905061097681610952565b92915050565b5f806040838503121561099257610991610787565b5b5f61099f858286016108bb565b92505060206109b085828601610968565b9150509250929050565b6109c38161083e565b82525050565b5f6020820190506109dc5f8301846109ba565b92915050565b5f82825260208201905092915050565b7f44617461206d757374206265203c2031303030300000000000000000000000005f82015250565b5f610a266014836109e2565b9150610a31826109f2565b602082019050919050565b5f6020820190508181035f830152610a5381610a1a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a918261083e565b9150610a9c8361083e565b9250828201905080821115610ab457610ab3610a5a565b5b92915050565b7f5761697420363073206265666f7265206e6578742075706461746500000000005f82015250565b5f610aee601b836109e2565b9150610af982610aba565b602082019050919050565b5f6020820190508181035f830152610b1b81610ae2565b9050919050565b610b2b81610941565b82525050565b5f604082019050610b445f830185610b22565b610b5160208301846108fa565b939250505056fea2646970667358221220d68c2aeb0d607e7bf3f7cee628e5df97fb3e1024f1975d4db7df3806f9f4900364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73D4A13A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xA853211A EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xC0463711 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x207 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x9E96008 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x143 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x295 JUMPI POP PUSH2 0x294 DUP3 PUSH2 0x4E0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C PUSH2 0x2C6 DUP2 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x2710 DUP3 LT PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x2 SLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391 DUP3 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x39A DUP2 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3A4 DUP4 DUP4 PUSH2 0x55D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x420 DUP3 DUP3 PUSH2 0x64D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C7 DUP3 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x4D0 DUP2 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x4DA DUP4 DUP4 PUSH2 0x64D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x555 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x568 DUP4 DUP4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x63C JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x5D9 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x640 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x658 DUP4 DUP4 PUSH2 0x42B JUMP JUMPDEST ISZERO PUSH2 0x72C JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x6C9 PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x730 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x740 DUP3 DUP3 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x783 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP3 SWAP2 SWAP1 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BF DUP2 PUSH2 0x78B JUMP JUMPDEST DUP2 EQ PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DA DUP2 PUSH2 0x7B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F5 JUMPI PUSH2 0x7F4 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x802 DUP5 DUP3 DUP6 ADD PUSH2 0x7CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81F DUP2 PUSH2 0x80B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x838 PUSH0 DUP4 ADD DUP5 PUSH2 0x816 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x850 DUP2 PUSH2 0x83E JUMP JUMPDEST DUP2 EQ PUSH2 0x85A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86B DUP2 PUSH2 0x847 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x886 JUMPI PUSH2 0x885 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x893 DUP5 DUP3 DUP6 ADD PUSH2 0x85D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x89C JUMP JUMPDEST DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F1 DUP5 DUP3 DUP6 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x89C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH0 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x94B DUP3 PUSH2 0x922 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95B DUP2 PUSH2 0x941 JUMP JUMPDEST DUP2 EQ PUSH2 0x965 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x976 DUP2 PUSH2 0x952 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x992 JUMPI PUSH2 0x991 PUSH2 0x787 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x99F DUP6 DUP3 DUP7 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9B0 DUP6 DUP3 DUP7 ADD PUSH2 0x968 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x83E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DC PUSH0 DUP4 ADD DUP5 PUSH2 0x9BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44617461206D757374206265203C203130303030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA26 PUSH1 0x14 DUP4 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA31 DUP3 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA53 DUP2 PUSH2 0xA1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA91 DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP2 POP PUSH2 0xA9C DUP4 PUSH2 0x83E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xAB3 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5761697420363073206265666F7265206E657874207570646174650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAEE PUSH1 0x1B DUP4 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF9 DUP3 PUSH2 0xABA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB1B DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0x941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB44 PUSH0 DUP4 ADD DUP6 PUSH2 0xB22 JUMP JUMPDEST PUSH2 0xB51 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 DUP13 0x2A 0xEB 0xD PUSH1 0x7E PUSH28 0xF3F7CEE628E5DF97FB3E1024F1975D4DB7DF3806F9F4900364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "297:797:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;772:320:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;417:19:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;349:62:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;772:320:5:-;387:24;2464:16:0;2475:4;2464:10;:16::i;:::-;868:5:5::1;858:7;:15;850:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;969:2;956:10;;:15;;;;:::i;:::-;938;:33;930:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1040:7;1033:4;:14;;;;1070:15;1057:10;:28;;;;772:320:::0;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;417:19:5:-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;349:62:5:-;387:24;349:62;:::o;442:25::-;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;763:146:3:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:77::-;2246:7;2275:5;2264:16;;2209:77;;;:::o;2292:122::-;2365:24;2383:5;2365:24;:::i;:::-;2358:5;2355:35;2345:63;;2404:1;2401;2394:12;2345:63;2292:122;:::o;2420:139::-;2466:5;2504:6;2491:20;2482:29;;2520:33;2547:5;2520:33;:::i;:::-;2420:139;;;;:::o;2565:329::-;2624:6;2673:2;2661:9;2652:7;2648:23;2644:32;2641:119;;;2679:79;;:::i;:::-;2641:119;2799:1;2824:53;2869:7;2860:6;2849:9;2845:22;2824:53;:::i;:::-;2814:63;;2770:117;2565:329;;;;:::o;2900:118::-;2987:24;3005:5;2987:24;:::i;:::-;2982:3;2975:37;2900:118;;:::o;3024:222::-;3117:4;3155:2;3144:9;3140:18;3132:26;;3168:71;3236:1;3225:9;3221:17;3212:6;3168:71;:::i;:::-;3024:222;;;;:::o;3252:126::-;3289:7;3329:42;3322:5;3318:54;3307:65;;3252:126;;;:::o;3384:96::-;3421:7;3450:24;3468:5;3450:24;:::i;:::-;3439:35;;3384:96;;;:::o;3486:122::-;3559:24;3577:5;3559:24;:::i;:::-;3552:5;3549:35;3539:63;;3598:1;3595;3588:12;3539:63;3486:122;:::o;3614:139::-;3660:5;3698:6;3685:20;3676:29;;3714:33;3741:5;3714:33;:::i;:::-;3614:139;;;;:::o;3759:474::-;3827:6;3835;3884:2;3872:9;3863:7;3859:23;3855:32;3852:119;;;3890:79;;:::i;:::-;3852:119;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3759:474;;;;;:::o;4239:118::-;4326:24;4344:5;4326:24;:::i;:::-;4321:3;4314:37;4239:118;;:::o;4363:222::-;4456:4;4494:2;4483:9;4479:18;4471:26;;4507:71;4575:1;4564:9;4560:17;4551:6;4507:71;:::i;:::-;4363:222;;;;:::o;4591:169::-;4675:11;4709:6;4704:3;4697:19;4749:4;4744:3;4740:14;4725:29;;4591:169;;;;:::o;4766:170::-;4906:22;4902:1;4894:6;4890:14;4883:46;4766:170;:::o;4942:366::-;5084:3;5105:67;5169:2;5164:3;5105:67;:::i;:::-;5098:74;;5181:93;5270:3;5181:93;:::i;:::-;5299:2;5294:3;5290:12;5283:19;;4942:366;;;:::o;5314:419::-;5480:4;5518:2;5507:9;5503:18;5495:26;;5567:9;5561:4;5557:20;5553:1;5542:9;5538:17;5531:47;5595:131;5721:4;5595:131;:::i;:::-;5587:139;;5314:419;;;:::o;5739:180::-;5787:77;5784:1;5777:88;5884:4;5881:1;5874:15;5908:4;5905:1;5898:15;5925:191;5965:3;5984:20;6002:1;5984:20;:::i;:::-;5979:25;;6018:20;6036:1;6018:20;:::i;:::-;6013:25;;6061:1;6058;6054:9;6047:16;;6082:3;6079:1;6076:10;6073:36;;;6089:18;;:::i;:::-;6073:36;5925:191;;;;:::o;6122:177::-;6262:29;6258:1;6250:6;6246:14;6239:53;6122:177;:::o;6305:366::-;6447:3;6468:67;6532:2;6527:3;6468:67;:::i;:::-;6461:74;;6544:93;6633:3;6544:93;:::i;:::-;6662:2;6657:3;6653:12;6646:19;;6305:366;;;:::o;6677:419::-;6843:4;6881:2;6870:9;6866:18;6858:26;;6930:9;6924:4;6920:20;6916:1;6905:9;6901:17;6894:47;6958:131;7084:4;6958:131;:::i;:::-;6950:139;;6677:419;;;:::o;7102:118::-;7189:24;7207:5;7189:24;:::i;:::-;7184:3;7177:37;7102:118;;:::o;7226:332::-;7347:4;7385:2;7374:9;7370:18;7362:26;;7398:71;7466:1;7455:9;7451:17;7442:6;7398:71;:::i;:::-;7479:72;7547:2;7536:9;7532:18;7523:6;7479:72;:::i;:::-;7226:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "591600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "374",
								"EDITOR_ROLE()": "391",
								"data()": "2425",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3144",
								"lastUpdate()": "2513",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "718",
								"updateData(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 474,
									"end": 612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 474,
									"end": 612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 527,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 538,
									"end": 556,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 538,
									"end": 556,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 527,
									"end": 537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 527,
									"end": 537,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 527,
									"end": 537,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 527,
									"end": 564,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 527,
									"end": 564,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 527,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 564,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 527,
									"end": 564,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 527,
									"end": 564,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 574,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 387,
									"end": 411,
									"name": "PUSH",
									"source": 5,
									"value": "21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C"
								},
								{
									"begin": 598,
									"end": 604,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 574,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 574,
									"end": 584,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 584,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 574,
									"end": 605,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 574,
									"end": 605,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 574,
									"end": 605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 574,
									"end": 605,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 574,
									"end": 605,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 574,
									"end": 605,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 474,
									"end": 612,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1094,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d68c2aeb0d607e7bf3f7cee628e5df97fb3e1024f1975d4db7df3806f9f4900364736f6c634300081a0033",
									".code": [
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "73D4A13A"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "73D4A13A"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "A853211A"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "C0463711"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "9E96008"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 297,
											"end": 1094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 772,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 772,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 417,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 349,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 349,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 349,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 442,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 442,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 858,
											"end": 865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 858,
											"end": 873,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 850,
											"end": 898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 850,
											"end": 898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 969,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3C"
										},
										{
											"begin": 956,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 956,
											"end": 966,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 956,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 956,
											"end": 971,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 956,
											"end": 971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 956,
											"end": 971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 956,
											"end": 971,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 956,
											"end": 971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 956,
											"end": 971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 938,
											"end": 953,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 938,
											"end": 971,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 930,
											"end": 1003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 930,
											"end": 1003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 1047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1047,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1085,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1085,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 1092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 436,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 417,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "21D1167972F621F75904FB065136BC8B53C7BA1C60CCD3A7758FBEE465851E9C"
										},
										{
											"begin": 349,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 349,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2365,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2365,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2491,
											"end": 2511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2520,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2520,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2676,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2679,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2679,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2641,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2869,
											"end": 2876,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2824,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2824,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2877,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2987,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 3018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 3018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3140,
											"end": 3158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3168,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3168,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3450,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3559,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3584,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3714,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3887,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3890,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4080,
											"end": 4087,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4035,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4344,
											"end": 4349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4326,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4507,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4760,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4591,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4753,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4725,
											"end": 4754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4760,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4936,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4766,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4928,
											"name": "PUSH",
											"source": 6,
											"value": "44617461206D757374206265203C203130303030000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5164,
											"end": 5167,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5105,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5181,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5480,
											"end": 5484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5520,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5595,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5726,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 5919,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5739,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5787,
											"end": 5864,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5784,
											"end": 5785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5865,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 5888,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5881,
											"end": 5882,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6116,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5925,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5984,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5984,
											"end": 6004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 6004,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5984,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 6004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6036,
											"end": 6037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6018,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6018,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6038,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6054,
											"end": 6063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6086,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6109,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6073,
											"end": 6109,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6089,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6109,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6073,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6116,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 6116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6299,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6122,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6291,
											"name": "PUSH",
											"source": 6,
											"value": "5761697420363073206265666F7265206E657874207570646174650000000000"
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6671,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6305,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6532,
											"end": 6534,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 6468,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6535,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6468,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6633,
											"end": 6636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6544,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6637,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6544,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6657,
											"end": 6660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6653,
											"end": 6665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6646,
											"end": 6665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6646,
											"end": 6665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 7096,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6677,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6920,
											"end": 6940,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 6917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 6918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7084,
											"end": 7088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6958,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 7089,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6958,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 7089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6950,
											"end": 7089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 7096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 7096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 7096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6677,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7220,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7102,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7189,
											"end": 7213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7189,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7177,
											"end": 7214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7362,
											"end": 7388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7362,
											"end": 7388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7464,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 7398,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7469,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7398,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7547,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7479,
											"end": 7551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7551,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7479,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"EDITOR_ROLE()": "a853211a",
							"data()": "73d4a13a",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lastUpdate()": "c0463711",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updateData(uint256)": "09e96008"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"editor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EDITOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newData\",\"type\":\"uint256\"}],\"name\":\"updateData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateData(uint256)\":{\"details\":\"Only addresses with EDITOR_ROLE can call,  plus we do an extra condition, e.g. only certain time range or param check.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":\"ExtendedACLContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol\":{\"keccak256\":\"0x9fb0196c18920ab473a83954ec20af004bd155a9fff422b3ac38495f385fd796\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32fb2b12866913a82a066943b25f429e49ec4eb68627e58d69f011137ceb420c\",\"dweb:/ipfs/QmXcj3ar76tF6dKX6Sc388Mk3sLRvbfCpmEppcwUCDwv6H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol:ExtendedACLContract",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 456,
								"contract": "E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol:ExtendedACLContract",
								"label": "data",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 458,
								"contract": "E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol:ExtendedACLContract",
								"label": "lastUpdate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol:ExtendedACLContract",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol:ExtendedACLContract",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 409,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 433,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								432,
								444,
								378,
								408
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 431,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 386,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 385,
												"id": 388,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 408,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 395,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 394,
												"id": 397,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 408,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 403,
												"id": 405,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 408,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 409,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							432
						],
						"IERC165": [
							444
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 445,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 444,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "IERC165",
										"nameLocations": [
											"688:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "688:7:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								444
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										443
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "845:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "862:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "882:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$444",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 429,
												"nodeType": "Return",
												"src": "855:47:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "790:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "839:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:3"
									},
									"scope": 432,
									"src": "763:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "660:251:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							444
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 444,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 445,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol": {
				"ast": {
					"absolutePath": "E/Extended ACLs (Cisco)/Extended Access Control with Multiple Conditions defense.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"ExtendedACLContract": [
							513
						],
						"IAccessControl": [
							378
						]
					},
					"id": 514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 514,
							"sourceUnit": 296,
							"src": "237:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 448,
										"name": "AccessControl",
										"nameLocations": [
											"329:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "329:13:5"
									},
									"id": 449,
									"nodeType": "InheritanceSpecifier",
									"src": "329:13:5"
								}
							],
							"canonicalName": "ExtendedACLContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 513,
							"linearizedBaseContracts": [
								513,
								295,
								432,
								444,
								378,
								408
							],
							"name": "ExtendedACLContract",
							"nameLocation": "306:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "a853211a",
									"id": 454,
									"mutability": "constant",
									"name": "EDITOR_ROLE",
									"nameLocation": "373:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "349:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 450,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "349:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454449544f525f524f4c45",
												"id": 452,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "397:13:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c",
													"typeString": "literal_string \"EDITOR_ROLE\""
												},
												"value": "EDITOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_21d1167972f621f75904fb065136bc8b53c7ba1c60ccd3a7758fbee465851e9c",
													"typeString": "literal_string \"EDITOR_ROLE\""
												}
											],
											"id": 451,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "387:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "387:24:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73d4a13a",
									"id": 456,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "432:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "417:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 455,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "417:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c0463711",
									"id": 458,
									"mutability": "mutable",
									"name": "lastUpdate",
									"nameLocation": "457:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "442:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "517:95:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "538:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 467,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "558:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 465,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "527:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "527:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "527:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "EDITOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "585:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 472,
															"name": "editor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "598:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 470,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "574:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "574:31:5"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "494:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "486:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "editor",
												"nameLocation": "509:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "501:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:31:5"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:5"
									},
									"scope": 513,
									"src": "474:138:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "840:252:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "newData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "858:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "868:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "858:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44617461206d757374206265203c203130303030",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "875:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9",
																"typeString": "literal_string \"Data must be < 10000\""
															},
															"value": "Data must be < 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1d1be5ca78828729fea5c6d66dc0661c1a1510584547fe8ef47cd992bfdbcd9",
																"typeString": "literal_string \"Data must be < 10000\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "850:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "850:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "850:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 493,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "938:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "944:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "938:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 495,
																	"name": "lastUpdate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "956:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "969:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "956:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "938:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5761697420363073206265666f7265206e65787420757064617465",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "973:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1",
																"typeString": "literal_string \"Wait 60s before next update\""
															},
															"value": "Wait 60s before next update"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd6fc4e08918240a9b96399abb55e0cf50a38ce8655668dcfc82cf644ec2f9e1",
																"typeString": "literal_string \"Wait 60s before next update\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "930:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "930:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "930:73:5"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "data",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "1033:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "newData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1040:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1033:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1033:14:5"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 506,
														"name": "lastUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "1057:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 507,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1076:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1070:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1057:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1057:28:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "618:149:5",
										"text": " @dev Only addresses with EDITOR_ROLE can call, \n plus we do an extra condition, e.g. only certain time range or param check."
									},
									"functionSelector": "09e96008",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 482,
													"name": "EDITOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "827:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 481,
												"name": "onlyRole",
												"nameLocations": [
													"818:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "818:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "818:21:5"
										}
									],
									"name": "updateData",
									"nameLocation": "781:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "newData",
												"nameLocation": "800:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "792:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:17:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:0:5"
									},
									"scope": 513,
									"src": "772:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 514,
							"src": "297:797:5",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "32:1063:5"
				},
				"id": 5
			}
		}
	}
}