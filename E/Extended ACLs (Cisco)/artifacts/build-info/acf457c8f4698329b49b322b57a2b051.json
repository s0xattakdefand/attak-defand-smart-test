{
	"id": "acf457c8f4698329b49b322b57a2b051",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract ComplexConditionACL is AccessControl {\n    bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\");\n    IERC20 public token;\n    uint256 public threshold;\n\n    constructor(address admin, address tokenAddress, uint256 balanceThreshold) {\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(CONTROLLER_ROLE, admin);\n        token = IERC20(tokenAddress);\n        threshold = balanceThreshold;\n    }\n\n    function sensitiveAction(uint256 param) external onlyRole(CONTROLLER_ROLE) {\n        // Additional condition: caller must hold >= threshold tokens\n        require(token.balanceOf(msg.sender) >= threshold, \"Not enough token balance\");\n        // Also param must be < 500\n        require(param < 500, \"Param too large\");\n\n        // do the action\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol": {
				"ComplexConditionACL": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balanceThreshold",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CONTROLLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "param",
									"type": "uint256"
								}
							],
							"name": "sensitiveAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "threshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":175:966  contract ComplexConditionACL is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":359:608  constructor(address admin, address tokenAddress, uint256 balanceThreshold) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":444:481  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":455:473  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":475:480  admin */\n  dup5\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":444:454  _grantRole */\n  shl(0x20, tag_7)\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":444:481  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":491:525  _grantRole(CONTROLLER_ROLE, admin) */\n  tag_8\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":269:297  keccak256(\"CONTROLLER_ROLE\") */\n  0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":519:524  admin */\n  dup5\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":491:501  _grantRole */\n  shl(0x20, tag_7)\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":491:525  _grantRole(CONTROLLER_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":550:562  tokenAddress */\n  dup2\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":535:540  token */\n  0x01\n  0x00\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":535:563  token = IERC20(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":585:601  balanceThreshold */\n  dup1\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":573:582  threshold */\n  0x02\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":573:601  threshold = balanceThreshold */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":359:608  constructor(address admin, address tokenAddress, uint256 balanceThreshold) {... */\n  pop\n  pop\n  pop\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":175:966  contract ComplexConditionACL is AccessControl {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_26:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_27:\n    /* \"#utility.yul\":1001:1025   */\n  tag_43\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_26\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_44:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_28:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_46\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_27\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_49\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1326:1445   */\ntag_48:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_50\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_25\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_51\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_52\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_28\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":175:966  contract ComplexConditionACL is AccessControl {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":175:966  contract ComplexConditionACL is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42cde4e8\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x42cde4e8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x867827b7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x092c5b3b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":227:297  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":328:352  uint256 public threshold */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":614:964  function sensitiveAction(uint256 param) external onlyRole(CONTROLLER_ROLE) {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":303:322  IERC20 public token */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_62\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":227:297  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n    tag_22:\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":269:297  keccak256(\"CONTROLLER_ROLE\") */\n      0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":227:297  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_70\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_69:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_75:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":328:352  uint256 public threshold */\n    tag_38:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":614:964  function sensitiveAction(uint256 param) external onlyRole(CONTROLLER_ROLE) {... */\n    tag_44:\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":269:297  keccak256(\"CONTROLLER_ROLE\") */\n      0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_78:\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":808:817  threshold */\n      sload(0x02)\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":777:782  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":777:792  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":793:803  msg.sender */\n      caller\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":777:804  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":777:817  token.balanceOf(msg.sender) >= threshold */\n      lt\n      iszero\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":769:846  require(token.balanceOf(msg.sender) >= threshold, \"Not enough token balance\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":908:911  500 */\n      0x01f4\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":900:905  param */\n      dup3\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":900:911  param < 500 */\n      lt\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":892:931  require(param < 500, \"Param too large\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":614:964  function sensitiveAction(uint256 param) external onlyRole(CONTROLLER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":303:322  IERC20 public token */\n    tag_56:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_47\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_103)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_103:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_47\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_73\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_109)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_109:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_47\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_120:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_122:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_123:\n        /* \"#utility.yul\":561:584   */\n      tag_157\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_122\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_158:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_124:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_160\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_123\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_17:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_163\n      tag_120\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":833:952   */\n    tag_162:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_164\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_124\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_125:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_126:\n        /* \"#utility.yul\":1268:1289   */\n      tag_167\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_125\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_20:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_169\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_126\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_127:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_128:\n        /* \"#utility.yul\":1688:1712   */\n      tag_172\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_127\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_24:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_174\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_128\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2075   */\n    tag_129:\n        /* \"#utility.yul\":2026:2050   */\n      tag_176\n        /* \"#utility.yul\":2044:2049   */\n      dup2\n        /* \"#utility.yul\":2026:2050   */\n      tag_127\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2019:2024   */\n      dup2\n        /* \"#utility.yul\":2016:2051   */\n      eq\n        /* \"#utility.yul\":2006:2069   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2006:2069   */\n    tag_177:\n        /* \"#utility.yul\":1953:2075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2220   */\n    tag_130:\n        /* \"#utility.yul\":2127:2132   */\n      0x00\n        /* \"#utility.yul\":2165:2171   */\n      dup2\n        /* \"#utility.yul\":2152:2172   */\n      calldataload\n        /* \"#utility.yul\":2143:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2181:2214   */\n      tag_179\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2181:2214   */\n      tag_129\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2081:2220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_27:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_182\n      tag_120\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2302:2421   */\n    tag_181:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_183\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_130\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_131:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_132:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_186\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_131\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_133:\n        /* \"#utility.yul\":2868:2892   */\n      tag_188\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_132\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_189:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_134:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_191\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_133\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_32:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_194\n      tag_120\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3161:3280   */\n    tag_193:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_195\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_130\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_196\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_134\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3625   */\n    tag_135:\n        /* \"#utility.yul\":3585:3592   */\n      0x00\n        /* \"#utility.yul\":3614:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3619   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3749   */\n    tag_136:\n        /* \"#utility.yul\":3718:3742   */\n      tag_199\n        /* \"#utility.yul\":3736:3741   */\n      dup2\n        /* \"#utility.yul\":3718:3742   */\n      tag_135\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3713:3716   */\n      dup3\n        /* \"#utility.yul\":3706:3743   */\n      mstore\n        /* \"#utility.yul\":3631:3749   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3755:3977   */\n    tag_40:\n        /* \"#utility.yul\":3848:3852   */\n      0x00\n        /* \"#utility.yul\":3886:3888   */\n      0x20\n        /* \"#utility.yul\":3875:3884   */\n      dup3\n        /* \"#utility.yul\":3871:3889   */\n      add\n        /* \"#utility.yul\":3863:3889   */\n      swap1\n      pop\n        /* \"#utility.yul\":3899:3970   */\n      tag_201\n        /* \"#utility.yul\":3967:3968   */\n      0x00\n        /* \"#utility.yul\":3956:3965   */\n      dup4\n        /* \"#utility.yul\":3952:3969   */\n      add\n        /* \"#utility.yul\":3943:3949   */\n      dup5\n        /* \"#utility.yul\":3899:3970   */\n      tag_136\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3755:3977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4105   */\n    tag_137:\n        /* \"#utility.yul\":4056:4080   */\n      tag_203\n        /* \"#utility.yul\":4074:4079   */\n      dup2\n        /* \"#utility.yul\":4056:4080   */\n      tag_135\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4049:4054   */\n      dup2\n        /* \"#utility.yul\":4046:4081   */\n      eq\n        /* \"#utility.yul\":4036:4099   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":4095:4096   */\n      0x00\n        /* \"#utility.yul\":4092:4093   */\n      dup1\n        /* \"#utility.yul\":4085:4097   */\n      revert\n        /* \"#utility.yul\":4036:4099   */\n    tag_204:\n        /* \"#utility.yul\":3983:4105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4111:4250   */\n    tag_138:\n        /* \"#utility.yul\":4157:4162   */\n      0x00\n        /* \"#utility.yul\":4195:4201   */\n      dup2\n        /* \"#utility.yul\":4182:4202   */\n      calldataload\n        /* \"#utility.yul\":4173:4202   */\n      swap1\n      pop\n        /* \"#utility.yul\":4211:4244   */\n      tag_206\n        /* \"#utility.yul\":4238:4243   */\n      dup2\n        /* \"#utility.yul\":4211:4244   */\n      tag_137\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4111:4250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4256:4585   */\n    tag_43:\n        /* \"#utility.yul\":4315:4321   */\n      0x00\n        /* \"#utility.yul\":4364:4366   */\n      0x20\n        /* \"#utility.yul\":4352:4361   */\n      dup3\n        /* \"#utility.yul\":4343:4350   */\n      dup5\n        /* \"#utility.yul\":4339:4362   */\n      sub\n        /* \"#utility.yul\":4335:4367   */\n      slt\n        /* \"#utility.yul\":4332:4451   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":4370:4449   */\n      tag_209\n      tag_120\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4332:4451   */\n    tag_208:\n        /* \"#utility.yul\":4490:4491   */\n      0x00\n        /* \"#utility.yul\":4515:4568   */\n      tag_210\n        /* \"#utility.yul\":4560:4567   */\n      dup5\n        /* \"#utility.yul\":4551:4557   */\n      dup3\n        /* \"#utility.yul\":4540:4549   */\n      dup6\n        /* \"#utility.yul\":4536:4558   */\n      add\n        /* \"#utility.yul\":4515:4568   */\n      tag_138\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4505:4568   */\n      swap2\n      pop\n        /* \"#utility.yul\":4461:4578   */\n      pop\n        /* \"#utility.yul\":4256:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4651   */\n    tag_139:\n        /* \"#utility.yul\":4619:4622   */\n      0x00\n        /* \"#utility.yul\":4640:4645   */\n      dup2\n        /* \"#utility.yul\":4633:4645   */\n      swap1\n      pop\n        /* \"#utility.yul\":4591:4651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4657:4799   */\n    tag_140:\n        /* \"#utility.yul\":4707:4716   */\n      0x00\n        /* \"#utility.yul\":4740:4793   */\n      tag_213\n        /* \"#utility.yul\":4758:4792   */\n      tag_214\n        /* \"#utility.yul\":4767:4791   */\n      tag_215\n        /* \"#utility.yul\":4785:4790   */\n      dup5\n        /* \"#utility.yul\":4767:4791   */\n      tag_131\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4758:4792   */\n      tag_139\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4740:4793   */\n      tag_131\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4727:4793   */\n      swap1\n      pop\n        /* \"#utility.yul\":4657:4799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4805:4931   */\n    tag_141:\n        /* \"#utility.yul\":4855:4864   */\n      0x00\n        /* \"#utility.yul\":4888:4925   */\n      tag_217\n        /* \"#utility.yul\":4919:4924   */\n      dup3\n        /* \"#utility.yul\":4888:4925   */\n      tag_140\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4875:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4805:4931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4937:5077   */\n    tag_142:\n        /* \"#utility.yul\":5001:5010   */\n      0x00\n        /* \"#utility.yul\":5034:5071   */\n      tag_219\n        /* \"#utility.yul\":5065:5070   */\n      dup3\n        /* \"#utility.yul\":5034:5071   */\n      tag_141\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5021:5071   */\n      swap1\n      pop\n        /* \"#utility.yul\":4937:5077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5083:5242   */\n    tag_143:\n        /* \"#utility.yul\":5184:5235   */\n      tag_221\n        /* \"#utility.yul\":5229:5234   */\n      dup2\n        /* \"#utility.yul\":5184:5235   */\n      tag_142\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5179:5182   */\n      dup3\n        /* \"#utility.yul\":5172:5236   */\n      mstore\n        /* \"#utility.yul\":5083:5242   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5248:5498   */\n    tag_58:\n        /* \"#utility.yul\":5355:5359   */\n      0x00\n        /* \"#utility.yul\":5393:5395   */\n      0x20\n        /* \"#utility.yul\":5382:5391   */\n      dup3\n        /* \"#utility.yul\":5378:5396   */\n      add\n        /* \"#utility.yul\":5370:5396   */\n      swap1\n      pop\n        /* \"#utility.yul\":5406:5491   */\n      tag_223\n        /* \"#utility.yul\":5488:5489   */\n      0x00\n        /* \"#utility.yul\":5477:5486   */\n      dup4\n        /* \"#utility.yul\":5473:5490   */\n      add\n        /* \"#utility.yul\":5464:5470   */\n      dup5\n        /* \"#utility.yul\":5406:5491   */\n      tag_143\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5248:5498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5504:5622   */\n    tag_144:\n        /* \"#utility.yul\":5591:5615   */\n      tag_225\n        /* \"#utility.yul\":5609:5614   */\n      dup2\n        /* \"#utility.yul\":5591:5615   */\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5586:5589   */\n      dup3\n        /* \"#utility.yul\":5579:5616   */\n      mstore\n        /* \"#utility.yul\":5504:5622   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5628:5850   */\n    tag_81:\n        /* \"#utility.yul\":5721:5725   */\n      0x00\n        /* \"#utility.yul\":5759:5761   */\n      0x20\n        /* \"#utility.yul\":5748:5757   */\n      dup3\n        /* \"#utility.yul\":5744:5762   */\n      add\n        /* \"#utility.yul\":5736:5762   */\n      swap1\n      pop\n        /* \"#utility.yul\":5772:5843   */\n      tag_227\n        /* \"#utility.yul\":5840:5841   */\n      0x00\n        /* \"#utility.yul\":5829:5838   */\n      dup4\n        /* \"#utility.yul\":5825:5842   */\n      add\n        /* \"#utility.yul\":5816:5822   */\n      dup5\n        /* \"#utility.yul\":5772:5843   */\n      tag_144\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5628:5850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5856:5999   */\n    tag_145:\n        /* \"#utility.yul\":5913:5918   */\n      0x00\n        /* \"#utility.yul\":5944:5950   */\n      dup2\n        /* \"#utility.yul\":5938:5951   */\n      mload\n        /* \"#utility.yul\":5929:5951   */\n      swap1\n      pop\n        /* \"#utility.yul\":5960:5993   */\n      tag_229\n        /* \"#utility.yul\":5987:5992   */\n      dup2\n        /* \"#utility.yul\":5960:5993   */\n      tag_137\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5856:5999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6005:6356   */\n    tag_85:\n        /* \"#utility.yul\":6075:6081   */\n      0x00\n        /* \"#utility.yul\":6124:6126   */\n      0x20\n        /* \"#utility.yul\":6112:6121   */\n      dup3\n        /* \"#utility.yul\":6103:6110   */\n      dup5\n        /* \"#utility.yul\":6099:6122   */\n      sub\n        /* \"#utility.yul\":6095:6127   */\n      slt\n        /* \"#utility.yul\":6092:6211   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":6130:6209   */\n      tag_232\n      tag_120\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6092:6211   */\n    tag_231:\n        /* \"#utility.yul\":6250:6251   */\n      0x00\n        /* \"#utility.yul\":6275:6339   */\n      tag_233\n        /* \"#utility.yul\":6331:6338   */\n      dup5\n        /* \"#utility.yul\":6322:6328   */\n      dup3\n        /* \"#utility.yul\":6311:6320   */\n      dup6\n        /* \"#utility.yul\":6307:6329   */\n      add\n        /* \"#utility.yul\":6275:6339   */\n      tag_145\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6265:6339   */\n      swap2\n      pop\n        /* \"#utility.yul\":6221:6349   */\n      pop\n        /* \"#utility.yul\":6005:6356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6362:6531   */\n    tag_146:\n        /* \"#utility.yul\":6446:6457   */\n      0x00\n        /* \"#utility.yul\":6480:6486   */\n      dup3\n        /* \"#utility.yul\":6475:6478   */\n      dup3\n        /* \"#utility.yul\":6468:6487   */\n      mstore\n        /* \"#utility.yul\":6520:6524   */\n      0x20\n        /* \"#utility.yul\":6515:6518   */\n      dup3\n        /* \"#utility.yul\":6511:6525   */\n      add\n        /* \"#utility.yul\":6496:6525   */\n      swap1\n      pop\n        /* \"#utility.yul\":6362:6531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6537:6711   */\n    tag_147:\n        /* \"#utility.yul\":6677:6703   */\n      0x4e6f7420656e6f75676820746f6b656e2062616c616e63650000000000000000\n        /* \"#utility.yul\":6673:6674   */\n      0x00\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6661:6675   */\n      add\n        /* \"#utility.yul\":6654:6704   */\n      mstore\n        /* \"#utility.yul\":6537:6711   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:7083   */\n    tag_148:\n        /* \"#utility.yul\":6859:6862   */\n      0x00\n        /* \"#utility.yul\":6880:6947   */\n      tag_237\n        /* \"#utility.yul\":6944:6946   */\n      0x18\n        /* \"#utility.yul\":6939:6942   */\n      dup4\n        /* \"#utility.yul\":6880:6947   */\n      tag_146\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6873:6947   */\n      swap2\n      pop\n        /* \"#utility.yul\":6956:7049   */\n      tag_238\n        /* \"#utility.yul\":7045:7048   */\n      dup3\n        /* \"#utility.yul\":6956:7049   */\n      tag_147\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7074:7076   */\n      0x20\n        /* \"#utility.yul\":7069:7072   */\n      dup3\n        /* \"#utility.yul\":7065:7077   */\n      add\n        /* \"#utility.yul\":7058:7077   */\n      swap1\n      pop\n        /* \"#utility.yul\":6717:7083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7508   */\n    tag_88:\n        /* \"#utility.yul\":7255:7259   */\n      0x00\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7282:7291   */\n      dup3\n        /* \"#utility.yul\":7278:7296   */\n      add\n        /* \"#utility.yul\":7270:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7351   */\n      dup2\n        /* \"#utility.yul\":7336:7340   */\n      dup2\n        /* \"#utility.yul\":7332:7352   */\n      sub\n        /* \"#utility.yul\":7328:7329   */\n      0x00\n        /* \"#utility.yul\":7317:7326   */\n      dup4\n        /* \"#utility.yul\":7313:7330   */\n      add\n        /* \"#utility.yul\":7306:7353   */\n      mstore\n        /* \"#utility.yul\":7370:7501   */\n      tag_240\n        /* \"#utility.yul\":7496:7500   */\n      dup2\n        /* \"#utility.yul\":7370:7501   */\n      tag_148\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7362:7501   */\n      swap1\n      pop\n        /* \"#utility.yul\":7089:7508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:7679   */\n    tag_149:\n        /* \"#utility.yul\":7654:7671   */\n      0x506172616d20746f6f206c617267650000000000000000000000000000000000\n        /* \"#utility.yul\":7650:7651   */\n      0x00\n        /* \"#utility.yul\":7642:7648   */\n      dup3\n        /* \"#utility.yul\":7638:7652   */\n      add\n        /* \"#utility.yul\":7631:7672   */\n      mstore\n        /* \"#utility.yul\":7514:7679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7685:8051   */\n    tag_150:\n        /* \"#utility.yul\":7827:7830   */\n      0x00\n        /* \"#utility.yul\":7848:7915   */\n      tag_243\n        /* \"#utility.yul\":7912:7914   */\n      0x0f\n        /* \"#utility.yul\":7907:7910   */\n      dup4\n        /* \"#utility.yul\":7848:7915   */\n      tag_146\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7841:7915   */\n      swap2\n      pop\n        /* \"#utility.yul\":7924:8017   */\n      tag_244\n        /* \"#utility.yul\":8013:8016   */\n      dup3\n        /* \"#utility.yul\":7924:8017   */\n      tag_149\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8042:8044   */\n      0x20\n        /* \"#utility.yul\":8037:8040   */\n      dup3\n        /* \"#utility.yul\":8033:8045   */\n      add\n        /* \"#utility.yul\":8026:8045   */\n      swap1\n      pop\n        /* \"#utility.yul\":7685:8051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8057:8476   */\n    tag_91:\n        /* \"#utility.yul\":8223:8227   */\n      0x00\n        /* \"#utility.yul\":8261:8263   */\n      0x20\n        /* \"#utility.yul\":8250:8259   */\n      dup3\n        /* \"#utility.yul\":8246:8264   */\n      add\n        /* \"#utility.yul\":8238:8264   */\n      swap1\n      pop\n        /* \"#utility.yul\":8310:8319   */\n      dup2\n        /* \"#utility.yul\":8304:8308   */\n      dup2\n        /* \"#utility.yul\":8300:8320   */\n      sub\n        /* \"#utility.yul\":8296:8297   */\n      0x00\n        /* \"#utility.yul\":8285:8294   */\n      dup4\n        /* \"#utility.yul\":8281:8298   */\n      add\n        /* \"#utility.yul\":8274:8321   */\n      mstore\n        /* \"#utility.yul\":8338:8469   */\n      tag_246\n        /* \"#utility.yul\":8464:8468   */\n      dup2\n        /* \"#utility.yul\":8338:8469   */\n      tag_150\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8330:8469   */\n      swap1\n      pop\n        /* \"#utility.yul\":8057:8476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8482:8814   */\n    tag_118:\n        /* \"#utility.yul\":8603:8607   */\n      0x00\n        /* \"#utility.yul\":8641:8643   */\n      0x40\n        /* \"#utility.yul\":8630:8639   */\n      dup3\n        /* \"#utility.yul\":8626:8644   */\n      add\n        /* \"#utility.yul\":8618:8644   */\n      swap1\n      pop\n        /* \"#utility.yul\":8654:8725   */\n      tag_248\n        /* \"#utility.yul\":8722:8723   */\n      0x00\n        /* \"#utility.yul\":8711:8720   */\n      dup4\n        /* \"#utility.yul\":8707:8724   */\n      add\n        /* \"#utility.yul\":8698:8704   */\n      dup6\n        /* \"#utility.yul\":8654:8725   */\n      tag_144\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8735:8807   */\n      tag_249\n        /* \"#utility.yul\":8803:8805   */\n      0x20\n        /* \"#utility.yul\":8792:8801   */\n      dup4\n        /* \"#utility.yul\":8788:8806   */\n      add\n        /* \"#utility.yul\":8779:8785   */\n      dup5\n        /* \"#utility.yul\":8735:8807   */\n      tag_128\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8482:8814   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207d5d1ec5b2659c7961eee7a47839209a4cdd6a111e2ca950d0f481829da75b4464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_568": {
									"entryPoint": null,
									"id": 568,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 196,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": 540,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 441,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1871:7",
										"nodeType": "YulBlock",
										"src": "0:1871:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "890:32:7",
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nativeSrc": "900:16:7",
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:7",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:7",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:7",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1316:552:7",
													"nodeType": "YulBlock",
													"src": "1316:552:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:7",
																"nodeType": "YulBlock",
																"src": "1362:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:7"
																			},
																			"nativeSrc": "1364:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:7"
																		},
																		"nativeSrc": "1364:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:7"
																		},
																		"nativeSrc": "1333:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:7"
																},
																"nativeSrc": "1329:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:7"
															},
															"nativeSrc": "1326:119:7",
															"nodeType": "YulIf",
															"src": "1326:119:7"
														},
														{
															"nativeSrc": "1455:128:7",
															"nodeType": "YulBlock",
															"src": "1455:128:7",
															"statements": [
																{
																	"nativeSrc": "1470:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:7"
																				},
																				"nativeSrc": "1541:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:7"
																		},
																		"nativeSrc": "1509:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:7",
															"nodeType": "YulBlock",
															"src": "1593:129:7",
															"statements": [
																{
																	"nativeSrc": "1608:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:7"
																				},
																				"nativeSrc": "1680:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:7"
																		},
																		"nativeSrc": "1648:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:7",
															"nodeType": "YulBlock",
															"src": "1732:129:7",
															"statements": [
																{
																	"nativeSrc": "1747:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:7"
																				},
																				"nativeSrc": "1819:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:7"
																		},
																		"nativeSrc": "1787:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:7",
														"nodeType": "YulTypedName",
														"src": "1270:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:7",
														"nodeType": "YulTypedName",
														"src": "1281:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:7",
														"nodeType": "YulTypedName",
														"src": "1293:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:7",
														"nodeType": "YulTypedName",
														"src": "1301:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:7",
														"nodeType": "YulTypedName",
														"src": "1309:6:7",
														"type": ""
													}
												],
												"src": "1205:663:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610fa9380380610fa9833981810160405281019061003191906102b4565b6100435f801b846100c460201b60201c565b506100747f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357846100c460201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550505050610304565b5f6100d583836101b960201b60201c565b6101af5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061014c61021c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101b3565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61025082610227565b9050919050565b61026081610246565b811461026a575f80fd5b50565b5f8151905061027b81610257565b92915050565b5f819050919050565b61029381610281565b811461029d575f80fd5b50565b5f815190506102ae8161028a565b92915050565b5f805f606084860312156102cb576102ca610223565b5b5f6102d88682870161026d565b93505060206102e98682870161026d565b92505060406102fa868287016102a0565b9150509250925092565b610c98806103115f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806342cde4e81161006f57806342cde4e814610161578063867827b71461017f57806391d148541461019b578063a217fddf146101cb578063d547741f146101e9578063fc0c546a14610205576100a7565b806301ffc9a7146100ab578063092c5b3b146100db578063248a9ca3146100f95780632f2ff15d1461012957806336568abe14610145575b5f80fd5b6100c560048036038101906100c0919061087e565b610223565b6040516100d291906108c3565b60405180910390f35b6100e361029c565b6040516100f091906108f4565b60405180910390f35b610113600480360381019061010e9190610937565b6102c0565b60405161012091906108f4565b60405180910390f35b610143600480360381019061013e91906109bc565b6102dc565b005b61015f600480360381019061015a91906109bc565b6102fe565b005b610169610379565b6040516101769190610a12565b60405180910390f35b61019960048036038101906101949190610a55565b61037f565b005b6101b560048036038101906101b091906109bc565b6104ce565b6040516101c291906108c3565b60405180910390f35b6101d3610531565b6040516101e091906108f4565b60405180910390f35b61020360048036038101906101fe91906109bc565b610537565b005b61020d610559565b60405161021a9190610adb565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061029557506102948261057e565b5b9050919050565b7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335781565b5f805f8381526020019081526020015f20600101549050919050565b6102e5826102c0565b6102ee816105e7565b6102f883836105fb565b50505050565b6103066106e4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461036a576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037482826106eb565b505050565b60025481565b7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c5702233576103a9816105e7565b60025460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104069190610b03565b602060405180830381865afa158015610421573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104459190610b30565b1015610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047d90610bb5565b60405180910390fd5b6101f482106104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190610c1d565b60405180910390fd5b5050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610540826102c0565b610549816105e7565b61055383836106eb565b50505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6105f8816105f36106e4565b6107d4565b50565b5f61060683836104ce565b6106da5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506106776106e4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506106de565b5f90505b92915050565b5f33905090565b5f6106f683836104ce565b156107ca575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506107676106e4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506107ce565b5f90505b92915050565b6107de82826104ce565b6108215780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610818929190610c3b565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61085d81610829565b8114610867575f80fd5b50565b5f8135905061087881610854565b92915050565b5f6020828403121561089357610892610825565b5b5f6108a08482850161086a565b91505092915050565b5f8115159050919050565b6108bd816108a9565b82525050565b5f6020820190506108d65f8301846108b4565b92915050565b5f819050919050565b6108ee816108dc565b82525050565b5f6020820190506109075f8301846108e5565b92915050565b610916816108dc565b8114610920575f80fd5b50565b5f813590506109318161090d565b92915050565b5f6020828403121561094c5761094b610825565b5b5f61095984828501610923565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61098b82610962565b9050919050565b61099b81610981565b81146109a5575f80fd5b50565b5f813590506109b681610992565b92915050565b5f80604083850312156109d2576109d1610825565b5b5f6109df85828601610923565b92505060206109f0858286016109a8565b9150509250929050565b5f819050919050565b610a0c816109fa565b82525050565b5f602082019050610a255f830184610a03565b92915050565b610a34816109fa565b8114610a3e575f80fd5b50565b5f81359050610a4f81610a2b565b92915050565b5f60208284031215610a6a57610a69610825565b5b5f610a7784828501610a41565b91505092915050565b5f819050919050565b5f610aa3610a9e610a9984610962565b610a80565b610962565b9050919050565b5f610ab482610a89565b9050919050565b5f610ac582610aaa565b9050919050565b610ad581610abb565b82525050565b5f602082019050610aee5f830184610acc565b92915050565b610afd81610981565b82525050565b5f602082019050610b165f830184610af4565b92915050565b5f81519050610b2a81610a2b565b92915050565b5f60208284031215610b4557610b44610825565b5b5f610b5284828501610b1c565b91505092915050565b5f82825260208201905092915050565b7f4e6f7420656e6f75676820746f6b656e2062616c616e636500000000000000005f82015250565b5f610b9f601883610b5b565b9150610baa82610b6b565b602082019050919050565b5f6020820190508181035f830152610bcc81610b93565b9050919050565b7f506172616d20746f6f206c6172676500000000000000000000000000000000005f82015250565b5f610c07600f83610b5b565b9150610c1282610bd3565b602082019050919050565b5f6020820190508181035f830152610c3481610bfb565b9050919050565b5f604082019050610c4e5f830185610af4565b610c5b60208301846108e5565b939250505056fea26469706673582212207d5d1ec5b2659c7961eee7a47839209a4cdd6a111e2ca950d0f481829da75b4464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFA9 CODESIZE SUB DUP1 PUSH2 0xFA9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x43 PUSH0 DUP1 SHL DUP5 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x74 PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 DUP5 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x304 JUMP JUMPDEST PUSH0 PUSH2 0xD5 DUP4 DUP4 PUSH2 0x1B9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1AF JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14C PUSH2 0x21C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1B3 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x250 DUP3 PUSH2 0x227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260 DUP2 PUSH2 0x246 JUMP JUMPDEST DUP2 EQ PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27B DUP2 PUSH2 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x293 DUP2 PUSH2 0x281 JUMP JUMPDEST DUP2 EQ PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AE DUP2 PUSH2 0x28A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CB JUMPI PUSH2 0x2CA PUSH2 0x223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D8 DUP7 DUP3 DUP8 ADD PUSH2 0x26D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2E9 DUP7 DUP3 DUP8 ADD PUSH2 0x26D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FA DUP7 DUP3 DUP8 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xC98 DUP1 PUSH2 0x311 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42CDE4E8 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x867827B7 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x205 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x92C5B3B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x295 JUMPI POP PUSH2 0x294 DUP3 PUSH2 0x57E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E5 DUP3 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x2F8 DUP4 DUP4 PUSH2 0x5FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x306 PUSH2 0x6E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x374 DUP3 DUP3 PUSH2 0x6EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 PUSH2 0x3A9 DUP2 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0xB30 JUMP JUMPDEST LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 DUP3 LT PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x540 DUP3 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x549 DUP2 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x553 DUP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F8 DUP2 PUSH2 0x5F3 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x606 DUP4 DUP4 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x677 PUSH2 0x6E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x6DE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6F6 DUP4 DUP4 PUSH2 0x4CE JUMP JUMPDEST ISZERO PUSH2 0x7CA JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x767 PUSH2 0x6E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x7CE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DE DUP3 DUP3 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x821 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP3 SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0x829 JUMP JUMPDEST DUP2 EQ PUSH2 0x867 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x878 DUP2 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8A0 DUP5 DUP3 DUP6 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EE DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x907 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP2 EQ PUSH2 0x920 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x931 DUP2 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94C JUMPI PUSH2 0x94B PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x959 DUP5 DUP3 DUP6 ADD PUSH2 0x923 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98B DUP3 PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x981 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B6 DUP2 PUSH2 0x992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D1 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9DF DUP6 DUP3 DUP7 ADD PUSH2 0x923 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9F0 DUP6 DUP3 DUP7 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0C DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA25 PUSH0 DUP4 ADD DUP5 PUSH2 0xA03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA34 DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP2 EQ PUSH2 0xA3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4F DUP2 PUSH2 0xA2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA77 DUP5 DUP3 DUP6 ADD PUSH2 0xA41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 PUSH2 0xA9E PUSH2 0xA99 DUP5 PUSH2 0x962 JUMP JUMPDEST PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB4 DUP3 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAC5 DUP3 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD5 DUP2 PUSH2 0xABB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAEE PUSH0 DUP4 ADD DUP5 PUSH2 0xACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFD DUP2 PUSH2 0x981 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB16 PUSH0 DUP4 ADD DUP5 PUSH2 0xAF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB2A DUP2 PUSH2 0xA2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB52 DUP5 DUP3 DUP6 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E2062616C616E63650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB9F PUSH1 0x18 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xBAA DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBCC DUP2 PUSH2 0xB93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506172616D20746F6F206C617267650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC07 PUSH1 0xF DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xC12 DUP3 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC34 DUP2 PUSH2 0xBFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4E PUSH0 DUP4 ADD DUP6 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x5D1EC5B2659C7961EEE7A47839209A4CDD6A111E2CA950D0F481829DA75B PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "175:791:6:-:0;;;359:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;444:37;2232:4:0;455:18:6;;475:5;444:10;;;:37;;:::i;:::-;;491:34;269:28;519:5;491:10;;;:34;;:::i;:::-;;550:12;535:5;;:28;;;;;;;;;;;;;;;;;;585:16;573:9;:28;;;;359:249;;;175:791;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;175:791:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CONTROLLER_ROLE_533": {
									"entryPoint": 668,
									"id": 533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1329,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2004,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 1511,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 1531,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": 1764,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 1771,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 704,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 732,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1230,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 766,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1335,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sensitiveAction_595": {
									"entryPoint": 895,
									"id": 595,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_509": {
									"entryPoint": 1406,
									"id": 509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 547,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@threshold_538": {
									"entryPoint": 889,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_536": {
									"entryPoint": 1369,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack": {
									"entryPoint": 2764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$456__to_t_address__fromStack_reversed": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$456_to_t_address": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc": {
									"entryPoint": 3027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8817:7",
										"nodeType": "YulBlock",
										"src": "0:8817:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "378:105:7",
													"nodeType": "YulBlock",
													"src": "378:105:7",
													"statements": [
														{
															"nativeSrc": "388:89:7",
															"nodeType": "YulAssignment",
															"src": "388:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:7",
																		"nodeType": "YulLiteral",
																		"src": "410:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nativeSrc": "399:78:7",
																"nodeType": "YulFunctionCall",
																"src": "399:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:7",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:7",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:149:7"
											},
											{
												"body": {
													"nativeSrc": "531:78:7",
													"nodeType": "YulBlock",
													"src": "531:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:7",
																"nodeType": "YulBlock",
																"src": "587:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "596:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "599:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:7"
																			},
																			"nativeSrc": "589:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:7"
																		},
																		"nativeSrc": "589:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:7"
																				},
																				"nativeSrc": "561:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:7"
																		},
																		"nativeSrc": "551:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:7"
																},
																"nativeSrc": "544:42:7",
																"nodeType": "YulFunctionCall",
																"src": "544:42:7"
															},
															"nativeSrc": "541:62:7",
															"nodeType": "YulIf",
															"src": "541:62:7"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:7",
														"nodeType": "YulTypedName",
														"src": "524:5:7",
														"type": ""
													}
												],
												"src": "489:120:7"
											},
											{
												"body": {
													"nativeSrc": "666:86:7",
													"nodeType": "YulBlock",
													"src": "666:86:7",
													"statements": [
														{
															"nativeSrc": "676:29:7",
															"nodeType": "YulAssignment",
															"src": "676:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:7"
																},
																"nativeSrc": "685:20:7",
																"nodeType": "YulFunctionCall",
																"src": "685:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:7"
																},
																"nativeSrc": "714:32:7",
																"nodeType": "YulFunctionCall",
																"src": "714:32:7"
															},
															"nativeSrc": "714:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:7",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:7",
														"nodeType": "YulTypedName",
														"src": "652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:7",
														"nodeType": "YulTypedName",
														"src": "660:5:7",
														"type": ""
													}
												],
												"src": "615:137:7"
											},
											{
												"body": {
													"nativeSrc": "823:262:7",
													"nodeType": "YulBlock",
													"src": "823:262:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:7",
																"nodeType": "YulBlock",
																"src": "869:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:7"
																			},
																			"nativeSrc": "871:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:7"
																		},
																		"nativeSrc": "871:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:7"
																		},
																		"nativeSrc": "840:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:7",
																		"nodeType": "YulLiteral",
																		"src": "865:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:7"
																},
																"nativeSrc": "836:32:7",
																"nodeType": "YulFunctionCall",
																"src": "836:32:7"
															},
															"nativeSrc": "833:119:7",
															"nodeType": "YulIf",
															"src": "833:119:7"
														},
														{
															"nativeSrc": "962:116:7",
															"nodeType": "YulBlock",
															"src": "962:116:7",
															"statements": [
																{
																	"nativeSrc": "977:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:7",
																		"nodeType": "YulLiteral",
																		"src": "991:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:7",
																			"nodeType": "YulTypedName",
																			"src": "981:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:7",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:7"
																				},
																				"nativeSrc": "1036:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:7"
																		},
																		"nativeSrc": "1016:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:7",
														"nodeType": "YulTypedName",
														"src": "793:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:7",
														"nodeType": "YulTypedName",
														"src": "804:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:7",
														"nodeType": "YulTypedName",
														"src": "816:6:7",
														"type": ""
													}
												],
												"src": "758:327:7"
											},
											{
												"body": {
													"nativeSrc": "1133:48:7",
													"nodeType": "YulBlock",
													"src": "1133:48:7",
													"statements": [
														{
															"nativeSrc": "1143:32:7",
															"nodeType": "YulAssignment",
															"src": "1143:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:7"
																		},
																		"nativeSrc": "1161:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:7"
																},
																"nativeSrc": "1154:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:7",
														"nodeType": "YulTypedName",
														"src": "1115:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:7",
														"nodeType": "YulTypedName",
														"src": "1125:7:7",
														"type": ""
													}
												],
												"src": "1091:90:7"
											},
											{
												"body": {
													"nativeSrc": "1246:50:7",
													"nodeType": "YulBlock",
													"src": "1246:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:7"
																		},
																		"nativeSrc": "1268:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:7"
																},
																"nativeSrc": "1256:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:7"
															},
															"nativeSrc": "1256:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:7",
														"nodeType": "YulTypedName",
														"src": "1234:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:7",
														"nodeType": "YulTypedName",
														"src": "1241:3:7",
														"type": ""
													}
												],
												"src": "1187:109:7"
											},
											{
												"body": {
													"nativeSrc": "1394:118:7",
													"nodeType": "YulBlock",
													"src": "1394:118:7",
													"statements": [
														{
															"nativeSrc": "1404:26:7",
															"nodeType": "YulAssignment",
															"src": "1404:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:7"
																},
																"nativeSrc": "1412:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:7"
																		},
																		"nativeSrc": "1487:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:7"
																},
																"nativeSrc": "1440:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:7"
															},
															"nativeSrc": "1440:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:7",
														"nodeType": "YulTypedName",
														"src": "1366:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:7",
														"nodeType": "YulTypedName",
														"src": "1378:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:7",
														"nodeType": "YulTypedName",
														"src": "1389:4:7",
														"type": ""
													}
												],
												"src": "1302:210:7"
											},
											{
												"body": {
													"nativeSrc": "1563:32:7",
													"nodeType": "YulBlock",
													"src": "1563:32:7",
													"statements": [
														{
															"nativeSrc": "1573:16:7",
															"nodeType": "YulAssignment",
															"src": "1573:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:7",
																"nodeType": "YulIdentifier",
																"src": "1584:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:7",
														"nodeType": "YulTypedName",
														"src": "1545:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:7",
														"nodeType": "YulTypedName",
														"src": "1555:7:7",
														"type": ""
													}
												],
												"src": "1518:77:7"
											},
											{
												"body": {
													"nativeSrc": "1666:53:7",
													"nodeType": "YulBlock",
													"src": "1666:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1688:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:7"
																		},
																		"nativeSrc": "1688:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:7"
																},
																"nativeSrc": "1676:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:7"
															},
															"nativeSrc": "1676:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1601:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:7",
														"nodeType": "YulTypedName",
														"src": "1654:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:7",
														"nodeType": "YulTypedName",
														"src": "1661:3:7",
														"type": ""
													}
												],
												"src": "1601:118:7"
											},
											{
												"body": {
													"nativeSrc": "1823:124:7",
													"nodeType": "YulBlock",
													"src": "1823:124:7",
													"statements": [
														{
															"nativeSrc": "1833:26:7",
															"nodeType": "YulAssignment",
															"src": "1833:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:7"
																},
																"nativeSrc": "1841:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:7"
																		},
																		"nativeSrc": "1922:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "1869:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:7"
																},
																"nativeSrc": "1869:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:7"
															},
															"nativeSrc": "1869:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1725:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:7",
														"nodeType": "YulTypedName",
														"src": "1795:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:7",
														"nodeType": "YulTypedName",
														"src": "1807:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:7",
														"nodeType": "YulTypedName",
														"src": "1818:4:7",
														"type": ""
													}
												],
												"src": "1725:222:7"
											},
											{
												"body": {
													"nativeSrc": "1996:79:7",
													"nodeType": "YulBlock",
													"src": "1996:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2053:16:7",
																"nodeType": "YulBlock",
																"src": "2053:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2055:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:7"
																			},
																			"nativeSrc": "2055:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:7"
																		},
																		"nativeSrc": "2055:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2044:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2044:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2026:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2026:17:7"
																				},
																				"nativeSrc": "2026:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2026:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2016:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2016:2:7"
																		},
																		"nativeSrc": "2016:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2009:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:7"
																},
																"nativeSrc": "2009:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2009:43:7"
															},
															"nativeSrc": "2006:63:7",
															"nodeType": "YulIf",
															"src": "2006:63:7"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1953:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1989:5:7",
														"nodeType": "YulTypedName",
														"src": "1989:5:7",
														"type": ""
													}
												],
												"src": "1953:122:7"
											},
											{
												"body": {
													"nativeSrc": "2133:87:7",
													"nodeType": "YulBlock",
													"src": "2133:87:7",
													"statements": [
														{
															"nativeSrc": "2143:29:7",
															"nodeType": "YulAssignment",
															"src": "2143:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2165:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2165:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2152:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2152:12:7"
																},
																"nativeSrc": "2152:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2152:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2143:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2208:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2208:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2181:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2181:26:7"
																},
																"nativeSrc": "2181:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2181:33:7"
															},
															"nativeSrc": "2181:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2181:33:7"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2081:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2111:6:7",
														"nodeType": "YulTypedName",
														"src": "2111:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2119:3:7",
														"nodeType": "YulTypedName",
														"src": "2119:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2127:5:7",
														"nodeType": "YulTypedName",
														"src": "2127:5:7",
														"type": ""
													}
												],
												"src": "2081:139:7"
											},
											{
												"body": {
													"nativeSrc": "2292:263:7",
													"nodeType": "YulBlock",
													"src": "2292:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:83:7",
																"nodeType": "YulBlock",
																"src": "2338:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2340:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:7"
																			},
																			"nativeSrc": "2340:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:7"
																		},
																		"nativeSrc": "2340:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2313:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2322:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2309:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:7"
																		},
																		"nativeSrc": "2309:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2305:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:7"
																},
																"nativeSrc": "2305:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2305:32:7"
															},
															"nativeSrc": "2302:119:7",
															"nodeType": "YulIf",
															"src": "2302:119:7"
														},
														{
															"nativeSrc": "2431:117:7",
															"nodeType": "YulBlock",
															"src": "2431:117:7",
															"statements": [
																{
																	"nativeSrc": "2446:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2460:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2450:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2475:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2475:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:7"
																				},
																				"nativeSrc": "2506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2530:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2485:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:7"
																		},
																		"nativeSrc": "2485:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2475:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2226:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2262:9:7",
														"nodeType": "YulTypedName",
														"src": "2262:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2273:7:7",
														"nodeType": "YulTypedName",
														"src": "2273:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2285:6:7",
														"nodeType": "YulTypedName",
														"src": "2285:6:7",
														"type": ""
													}
												],
												"src": "2226:329:7"
											},
											{
												"body": {
													"nativeSrc": "2606:81:7",
													"nodeType": "YulBlock",
													"src": "2606:81:7",
													"statements": [
														{
															"nativeSrc": "2616:65:7",
															"nodeType": "YulAssignment",
															"src": "2616:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:7"
																},
																"nativeSrc": "2627:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:7",
														"nodeType": "YulTypedName",
														"src": "2588:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:7",
														"nodeType": "YulTypedName",
														"src": "2598:7:7",
														"type": ""
													}
												],
												"src": "2561:126:7"
											},
											{
												"body": {
													"nativeSrc": "2738:51:7",
													"nodeType": "YulBlock",
													"src": "2738:51:7",
													"statements": [
														{
															"nativeSrc": "2748:35:7",
															"nodeType": "YulAssignment",
															"src": "2748:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:7"
																},
																"nativeSrc": "2759:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:7",
														"nodeType": "YulTypedName",
														"src": "2720:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:7",
														"nodeType": "YulTypedName",
														"src": "2730:7:7",
														"type": ""
													}
												],
												"src": "2693:96:7"
											},
											{
												"body": {
													"nativeSrc": "2838:79:7",
													"nodeType": "YulBlock",
													"src": "2838:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:7",
																"nodeType": "YulBlock",
																"src": "2895:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:7"
																			},
																			"nativeSrc": "2897:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:7"
																		},
																		"nativeSrc": "2897:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:7"
																				},
																				"nativeSrc": "2868:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:7"
																		},
																		"nativeSrc": "2858:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:7"
																},
																"nativeSrc": "2851:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:7"
															},
															"nativeSrc": "2848:63:7",
															"nodeType": "YulIf",
															"src": "2848:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:7",
														"nodeType": "YulTypedName",
														"src": "2831:5:7",
														"type": ""
													}
												],
												"src": "2795:122:7"
											},
											{
												"body": {
													"nativeSrc": "2975:87:7",
													"nodeType": "YulBlock",
													"src": "2975:87:7",
													"statements": [
														{
															"nativeSrc": "2985:29:7",
															"nodeType": "YulAssignment",
															"src": "2985:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:7"
																},
																"nativeSrc": "2994:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:7"
																},
																"nativeSrc": "3023:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:7"
															},
															"nativeSrc": "3023:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:7",
														"nodeType": "YulTypedName",
														"src": "2953:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:7",
														"nodeType": "YulTypedName",
														"src": "2961:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:7",
														"nodeType": "YulTypedName",
														"src": "2969:5:7",
														"type": ""
													}
												],
												"src": "2923:139:7"
											},
											{
												"body": {
													"nativeSrc": "3151:391:7",
													"nodeType": "YulBlock",
													"src": "3151:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:7",
																"nodeType": "YulBlock",
																"src": "3197:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:7"
																			},
																			"nativeSrc": "3199:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:7"
																		},
																		"nativeSrc": "3199:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:7"
																		},
																		"nativeSrc": "3168:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:7"
																},
																"nativeSrc": "3164:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:7"
															},
															"nativeSrc": "3161:119:7",
															"nodeType": "YulIf",
															"src": "3161:119:7"
														},
														{
															"nativeSrc": "3290:117:7",
															"nodeType": "YulBlock",
															"src": "3290:117:7",
															"statements": [
																{
																	"nativeSrc": "3305:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:7"
																				},
																				"nativeSrc": "3365:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:7"
																		},
																		"nativeSrc": "3344:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:7",
															"nodeType": "YulBlock",
															"src": "3417:118:7",
															"statements": [
																{
																	"nativeSrc": "3432:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:7"
																				},
																				"nativeSrc": "3493:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:7"
																		},
																		"nativeSrc": "3472:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:7",
														"nodeType": "YulTypedName",
														"src": "3113:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:7",
														"nodeType": "YulTypedName",
														"src": "3124:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:7",
														"nodeType": "YulTypedName",
														"src": "3136:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:7",
														"nodeType": "YulTypedName",
														"src": "3144:6:7",
														"type": ""
													}
												],
												"src": "3068:474:7"
											},
											{
												"body": {
													"nativeSrc": "3593:32:7",
													"nodeType": "YulBlock",
													"src": "3593:32:7",
													"statements": [
														{
															"nativeSrc": "3603:16:7",
															"nodeType": "YulAssignment",
															"src": "3603:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3614:5:7",
																"nodeType": "YulIdentifier",
																"src": "3614:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3548:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:7",
														"nodeType": "YulTypedName",
														"src": "3575:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:7",
														"nodeType": "YulTypedName",
														"src": "3585:7:7",
														"type": ""
													}
												],
												"src": "3548:77:7"
											},
											{
												"body": {
													"nativeSrc": "3696:53:7",
													"nodeType": "YulBlock",
													"src": "3696:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3713:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3713:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3736:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3736:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3718:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3718:17:7"
																		},
																		"nativeSrc": "3718:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3718:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3706:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:7"
																},
																"nativeSrc": "3706:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3706:37:7"
															},
															"nativeSrc": "3706:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3706:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3631:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3684:5:7",
														"nodeType": "YulTypedName",
														"src": "3684:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3691:3:7",
														"nodeType": "YulTypedName",
														"src": "3691:3:7",
														"type": ""
													}
												],
												"src": "3631:118:7"
											},
											{
												"body": {
													"nativeSrc": "3853:124:7",
													"nodeType": "YulBlock",
													"src": "3853:124:7",
													"statements": [
														{
															"nativeSrc": "3863:26:7",
															"nodeType": "YulAssignment",
															"src": "3863:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3875:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3886:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3886:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3871:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:7"
																},
																"nativeSrc": "3871:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3871:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3863:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3863:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3943:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3943:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3956:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3967:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3967:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3952:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:7"
																		},
																		"nativeSrc": "3952:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3952:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3899:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3899:43:7"
																},
																"nativeSrc": "3899:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3899:71:7"
															},
															"nativeSrc": "3899:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3899:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3755:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3825:9:7",
														"nodeType": "YulTypedName",
														"src": "3825:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3837:6:7",
														"nodeType": "YulTypedName",
														"src": "3837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3848:4:7",
														"nodeType": "YulTypedName",
														"src": "3848:4:7",
														"type": ""
													}
												],
												"src": "3755:222:7"
											},
											{
												"body": {
													"nativeSrc": "4026:79:7",
													"nodeType": "YulBlock",
													"src": "4026:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4083:16:7",
																"nodeType": "YulBlock",
																"src": "4083:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4092:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4095:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4095:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4085:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4085:6:7"
																			},
																			"nativeSrc": "4085:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4085:12:7"
																		},
																		"nativeSrc": "4085:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4085:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4049:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4049:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4074:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4074:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4056:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4056:17:7"
																				},
																				"nativeSrc": "4056:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4056:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4046:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4046:2:7"
																		},
																		"nativeSrc": "4046:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4046:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4039:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:7"
																},
																"nativeSrc": "4039:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4039:43:7"
															},
															"nativeSrc": "4036:63:7",
															"nodeType": "YulIf",
															"src": "4036:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3983:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4019:5:7",
														"nodeType": "YulTypedName",
														"src": "4019:5:7",
														"type": ""
													}
												],
												"src": "3983:122:7"
											},
											{
												"body": {
													"nativeSrc": "4163:87:7",
													"nodeType": "YulBlock",
													"src": "4163:87:7",
													"statements": [
														{
															"nativeSrc": "4173:29:7",
															"nodeType": "YulAssignment",
															"src": "4173:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4195:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4182:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4182:12:7"
																},
																"nativeSrc": "4182:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4182:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4173:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4173:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4238:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4238:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4211:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4211:26:7"
																},
																"nativeSrc": "4211:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4211:33:7"
															},
															"nativeSrc": "4211:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4211:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4111:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4141:6:7",
														"nodeType": "YulTypedName",
														"src": "4141:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4149:3:7",
														"nodeType": "YulTypedName",
														"src": "4149:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4157:5:7",
														"nodeType": "YulTypedName",
														"src": "4157:5:7",
														"type": ""
													}
												],
												"src": "4111:139:7"
											},
											{
												"body": {
													"nativeSrc": "4322:263:7",
													"nodeType": "YulBlock",
													"src": "4322:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4368:83:7",
																"nodeType": "YulBlock",
																"src": "4368:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4370:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4370:77:7"
																			},
																			"nativeSrc": "4370:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4370:79:7"
																		},
																		"nativeSrc": "4370:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4370:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4343:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4343:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4352:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4352:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4339:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:3:7"
																		},
																		"nativeSrc": "4339:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4339:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4364:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4335:3:7"
																},
																"nativeSrc": "4335:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4335:32:7"
															},
															"nativeSrc": "4332:119:7",
															"nodeType": "YulIf",
															"src": "4332:119:7"
														},
														{
															"nativeSrc": "4461:117:7",
															"nodeType": "YulBlock",
															"src": "4461:117:7",
															"statements": [
																{
																	"nativeSrc": "4476:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4476:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4490:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4490:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4480:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4480:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4505:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4505:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4540:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4540:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4551:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4551:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4536:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4536:3:7"
																				},
																				"nativeSrc": "4536:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4536:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4560:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4560:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4515:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4515:20:7"
																		},
																		"nativeSrc": "4515:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4515:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4505:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4505:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4256:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4292:9:7",
														"nodeType": "YulTypedName",
														"src": "4292:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4303:7:7",
														"nodeType": "YulTypedName",
														"src": "4303:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4315:6:7",
														"nodeType": "YulTypedName",
														"src": "4315:6:7",
														"type": ""
													}
												],
												"src": "4256:329:7"
											},
											{
												"body": {
													"nativeSrc": "4623:28:7",
													"nodeType": "YulBlock",
													"src": "4623:28:7",
													"statements": [
														{
															"nativeSrc": "4633:12:7",
															"nodeType": "YulAssignment",
															"src": "4633:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4640:5:7",
																"nodeType": "YulIdentifier",
																"src": "4640:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4633:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4633:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4591:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4609:5:7",
														"nodeType": "YulTypedName",
														"src": "4609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4619:3:7",
														"nodeType": "YulTypedName",
														"src": "4619:3:7",
														"type": ""
													}
												],
												"src": "4591:60:7"
											},
											{
												"body": {
													"nativeSrc": "4717:82:7",
													"nodeType": "YulBlock",
													"src": "4717:82:7",
													"statements": [
														{
															"nativeSrc": "4727:66:7",
															"nodeType": "YulAssignment",
															"src": "4727:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4785:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4785:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4767:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4767:17:7"
																				},
																				"nativeSrc": "4767:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4767:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4758:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "4758:8:7"
																		},
																		"nativeSrc": "4758:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4758:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4740:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4740:17:7"
																},
																"nativeSrc": "4740:53:7",
																"nodeType": "YulFunctionCall",
																"src": "4740:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4727:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4727:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4657:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4697:5:7",
														"nodeType": "YulTypedName",
														"src": "4697:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4707:9:7",
														"nodeType": "YulTypedName",
														"src": "4707:9:7",
														"type": ""
													}
												],
												"src": "4657:142:7"
											},
											{
												"body": {
													"nativeSrc": "4865:66:7",
													"nodeType": "YulBlock",
													"src": "4865:66:7",
													"statements": [
														{
															"nativeSrc": "4875:50:7",
															"nodeType": "YulAssignment",
															"src": "4875:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4919:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4919:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4888:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4888:30:7"
																},
																"nativeSrc": "4888:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4888:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4875:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4875:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4805:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4845:5:7",
														"nodeType": "YulTypedName",
														"src": "4845:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4855:9:7",
														"nodeType": "YulTypedName",
														"src": "4855:9:7",
														"type": ""
													}
												],
												"src": "4805:126:7"
											},
											{
												"body": {
													"nativeSrc": "5011:66:7",
													"nodeType": "YulBlock",
													"src": "5011:66:7",
													"statements": [
														{
															"nativeSrc": "5021:50:7",
															"nodeType": "YulAssignment",
															"src": "5021:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5065:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5065:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5034:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5034:30:7"
																},
																"nativeSrc": "5034:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5034:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5021:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5021:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$456_to_t_address",
												"nativeSrc": "4937:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4991:5:7",
														"nodeType": "YulTypedName",
														"src": "4991:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5001:9:7",
														"nodeType": "YulTypedName",
														"src": "5001:9:7",
														"type": ""
													}
												],
												"src": "4937:140:7"
											},
											{
												"body": {
													"nativeSrc": "5162:80:7",
													"nodeType": "YulBlock",
													"src": "5162:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5179:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5179:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5229:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5229:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$456_to_t_address",
																			"nativeSrc": "5184:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "5184:44:7"
																		},
																		"nativeSrc": "5184:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5172:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:7"
																},
																"nativeSrc": "5172:64:7",
																"nodeType": "YulFunctionCall",
																"src": "5172:64:7"
															},
															"nativeSrc": "5172:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "5172:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack",
												"nativeSrc": "5083:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5150:5:7",
														"nodeType": "YulTypedName",
														"src": "5150:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5157:3:7",
														"nodeType": "YulTypedName",
														"src": "5157:3:7",
														"type": ""
													}
												],
												"src": "5083:159:7"
											},
											{
												"body": {
													"nativeSrc": "5360:138:7",
													"nodeType": "YulBlock",
													"src": "5360:138:7",
													"statements": [
														{
															"nativeSrc": "5370:26:7",
															"nodeType": "YulAssignment",
															"src": "5370:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5382:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5382:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5393:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5393:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5378:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5378:3:7"
																},
																"nativeSrc": "5378:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5378:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5370:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5370:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5464:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5464:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5477:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5477:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5488:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5488:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:7"
																		},
																		"nativeSrc": "5473:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack",
																	"nativeSrc": "5406:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "5406:57:7"
																},
																"nativeSrc": "5406:85:7",
																"nodeType": "YulFunctionCall",
																"src": "5406:85:7"
															},
															"nativeSrc": "5406:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "5406:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$456__to_t_address__fromStack_reversed",
												"nativeSrc": "5248:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5332:9:7",
														"nodeType": "YulTypedName",
														"src": "5332:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5344:6:7",
														"nodeType": "YulTypedName",
														"src": "5344:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5355:4:7",
														"nodeType": "YulTypedName",
														"src": "5355:4:7",
														"type": ""
													}
												],
												"src": "5248:250:7"
											},
											{
												"body": {
													"nativeSrc": "5569:53:7",
													"nodeType": "YulBlock",
													"src": "5569:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5586:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5609:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5609:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5591:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5591:17:7"
																		},
																		"nativeSrc": "5591:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5591:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5579:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:7"
																},
																"nativeSrc": "5579:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5579:37:7"
															},
															"nativeSrc": "5579:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5579:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5504:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5557:5:7",
														"nodeType": "YulTypedName",
														"src": "5557:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5564:3:7",
														"nodeType": "YulTypedName",
														"src": "5564:3:7",
														"type": ""
													}
												],
												"src": "5504:118:7"
											},
											{
												"body": {
													"nativeSrc": "5726:124:7",
													"nodeType": "YulBlock",
													"src": "5726:124:7",
													"statements": [
														{
															"nativeSrc": "5736:26:7",
															"nodeType": "YulAssignment",
															"src": "5736:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5748:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5748:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5759:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:7"
																},
																"nativeSrc": "5744:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5744:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5736:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5816:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5816:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5829:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5829:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5840:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5840:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5825:3:7"
																		},
																		"nativeSrc": "5825:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5825:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5772:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5772:43:7"
																},
																"nativeSrc": "5772:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5772:71:7"
															},
															"nativeSrc": "5772:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5772:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5628:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5698:9:7",
														"nodeType": "YulTypedName",
														"src": "5698:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5710:6:7",
														"nodeType": "YulTypedName",
														"src": "5710:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5721:4:7",
														"nodeType": "YulTypedName",
														"src": "5721:4:7",
														"type": ""
													}
												],
												"src": "5628:222:7"
											},
											{
												"body": {
													"nativeSrc": "5919:80:7",
													"nodeType": "YulBlock",
													"src": "5919:80:7",
													"statements": [
														{
															"nativeSrc": "5929:22:7",
															"nodeType": "YulAssignment",
															"src": "5929:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5944:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5944:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5938:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5938:5:7"
																},
																"nativeSrc": "5938:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5938:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5929:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5929:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5987:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5987:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5960:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "5960:26:7"
																},
																"nativeSrc": "5960:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5960:33:7"
															},
															"nativeSrc": "5960:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5960:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5856:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5897:6:7",
														"nodeType": "YulTypedName",
														"src": "5897:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5905:3:7",
														"nodeType": "YulTypedName",
														"src": "5905:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5913:5:7",
														"nodeType": "YulTypedName",
														"src": "5913:5:7",
														"type": ""
													}
												],
												"src": "5856:143:7"
											},
											{
												"body": {
													"nativeSrc": "6082:274:7",
													"nodeType": "YulBlock",
													"src": "6082:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6128:83:7",
																"nodeType": "YulBlock",
																"src": "6128:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6130:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:77:7"
																			},
																			"nativeSrc": "6130:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:79:7"
																		},
																		"nativeSrc": "6130:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6103:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6103:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6112:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6112:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6099:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6099:3:7"
																		},
																		"nativeSrc": "6099:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6099:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6124:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6124:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6095:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6095:3:7"
																},
																"nativeSrc": "6095:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6095:32:7"
															},
															"nativeSrc": "6092:119:7",
															"nodeType": "YulIf",
															"src": "6092:119:7"
														},
														{
															"nativeSrc": "6221:128:7",
															"nodeType": "YulBlock",
															"src": "6221:128:7",
															"statements": [
																{
																	"nativeSrc": "6236:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6236:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6250:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6250:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6240:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6240:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6265:74:7",
																	"nodeType": "YulAssignment",
																	"src": "6265:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6311:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6311:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6322:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6322:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6307:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6307:3:7"
																				},
																				"nativeSrc": "6307:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6307:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6331:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6331:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6275:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "6275:31:7"
																		},
																		"nativeSrc": "6275:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6275:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6265:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6265:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6005:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6052:9:7",
														"nodeType": "YulTypedName",
														"src": "6052:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6063:7:7",
														"nodeType": "YulTypedName",
														"src": "6063:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6075:6:7",
														"nodeType": "YulTypedName",
														"src": "6075:6:7",
														"type": ""
													}
												],
												"src": "6005:351:7"
											},
											{
												"body": {
													"nativeSrc": "6458:73:7",
													"nodeType": "YulBlock",
													"src": "6458:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6475:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6480:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6480:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6468:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6468:6:7"
																},
																"nativeSrc": "6468:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6468:19:7"
															},
															"nativeSrc": "6468:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6468:19:7"
														},
														{
															"nativeSrc": "6496:29:7",
															"nodeType": "YulAssignment",
															"src": "6496:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6515:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6515:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6520:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6520:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6511:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:7"
																},
																"nativeSrc": "6511:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6511:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6496:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6496:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6362:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6430:3:7",
														"nodeType": "YulTypedName",
														"src": "6430:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6435:6:7",
														"nodeType": "YulTypedName",
														"src": "6435:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6446:11:7",
														"nodeType": "YulTypedName",
														"src": "6446:11:7",
														"type": ""
													}
												],
												"src": "6362:169:7"
											},
											{
												"body": {
													"nativeSrc": "6643:68:7",
													"nodeType": "YulBlock",
													"src": "6643:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6665:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6665:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6673:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6673:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:7"
																		},
																		"nativeSrc": "6661:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "6677:26:7",
																		"nodeType": "YulLiteral",
																		"src": "6677:26:7",
																		"type": "",
																		"value": "Not enough token balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:7"
																},
																"nativeSrc": "6654:50:7",
																"nodeType": "YulFunctionCall",
																"src": "6654:50:7"
															},
															"nativeSrc": "6654:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "6654:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b",
												"nativeSrc": "6537:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6635:6:7",
														"nodeType": "YulTypedName",
														"src": "6635:6:7",
														"type": ""
													}
												],
												"src": "6537:174:7"
											},
											{
												"body": {
													"nativeSrc": "6863:220:7",
													"nodeType": "YulBlock",
													"src": "6863:220:7",
													"statements": [
														{
															"nativeSrc": "6873:74:7",
															"nodeType": "YulAssignment",
															"src": "6873:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6939:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6939:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6944:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6944:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6880:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6880:58:7"
																},
																"nativeSrc": "6880:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6880:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6873:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7045:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b",
																	"nativeSrc": "6956:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6956:88:7"
																},
																"nativeSrc": "6956:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6956:93:7"
															},
															"nativeSrc": "6956:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6956:93:7"
														},
														{
															"nativeSrc": "7058:19:7",
															"nodeType": "YulAssignment",
															"src": "7058:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7069:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7069:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7065:3:7"
																},
																"nativeSrc": "7065:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7065:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7058:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7058:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6717:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6851:3:7",
														"nodeType": "YulTypedName",
														"src": "6851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6859:3:7",
														"nodeType": "YulTypedName",
														"src": "6859:3:7",
														"type": ""
													}
												],
												"src": "6717:366:7"
											},
											{
												"body": {
													"nativeSrc": "7260:248:7",
													"nodeType": "YulBlock",
													"src": "7260:248:7",
													"statements": [
														{
															"nativeSrc": "7270:26:7",
															"nodeType": "YulAssignment",
															"src": "7270:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7282:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7282:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7293:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7278:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7278:3:7"
																},
																"nativeSrc": "7278:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7278:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7270:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7270:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7317:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7328:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7328:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7313:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:7"
																		},
																		"nativeSrc": "7313:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7313:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7336:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7336:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7342:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7342:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7332:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:7"
																		},
																		"nativeSrc": "7332:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7332:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7306:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:7"
																},
																"nativeSrc": "7306:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7306:47:7"
															},
															"nativeSrc": "7306:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7306:47:7"
														},
														{
															"nativeSrc": "7362:139:7",
															"nodeType": "YulAssignment",
															"src": "7362:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7496:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7496:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7370:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7370:124:7"
																},
																"nativeSrc": "7370:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7370:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7362:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7362:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7089:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7240:9:7",
														"nodeType": "YulTypedName",
														"src": "7240:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7255:4:7",
														"nodeType": "YulTypedName",
														"src": "7255:4:7",
														"type": ""
													}
												],
												"src": "7089:419:7"
											},
											{
												"body": {
													"nativeSrc": "7620:59:7",
													"nodeType": "YulBlock",
													"src": "7620:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7642:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7642:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7650:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7650:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7638:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7638:3:7"
																		},
																		"nativeSrc": "7638:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7638:14:7"
																	},
																	{
																		"hexValue": "506172616d20746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "7654:17:7",
																		"nodeType": "YulLiteral",
																		"src": "7654:17:7",
																		"type": "",
																		"value": "Param too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7631:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7631:6:7"
																},
																"nativeSrc": "7631:41:7",
																"nodeType": "YulFunctionCall",
																"src": "7631:41:7"
															},
															"nativeSrc": "7631:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "7631:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc",
												"nativeSrc": "7514:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7612:6:7",
														"nodeType": "YulTypedName",
														"src": "7612:6:7",
														"type": ""
													}
												],
												"src": "7514:165:7"
											},
											{
												"body": {
													"nativeSrc": "7831:220:7",
													"nodeType": "YulBlock",
													"src": "7831:220:7",
													"statements": [
														{
															"nativeSrc": "7841:74:7",
															"nodeType": "YulAssignment",
															"src": "7841:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7907:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7907:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7912:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7848:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7848:58:7"
																},
																"nativeSrc": "7848:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7848:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8013:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8013:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc",
																	"nativeSrc": "7924:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7924:88:7"
																},
																"nativeSrc": "7924:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7924:93:7"
															},
															"nativeSrc": "7924:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7924:93:7"
														},
														{
															"nativeSrc": "8026:19:7",
															"nodeType": "YulAssignment",
															"src": "8026:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8037:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8037:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8042:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8033:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8033:3:7"
																},
																"nativeSrc": "8033:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8033:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8026:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8026:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7685:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7819:3:7",
														"nodeType": "YulTypedName",
														"src": "7819:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7827:3:7",
														"nodeType": "YulTypedName",
														"src": "7827:3:7",
														"type": ""
													}
												],
												"src": "7685:366:7"
											},
											{
												"body": {
													"nativeSrc": "8228:248:7",
													"nodeType": "YulBlock",
													"src": "8228:248:7",
													"statements": [
														{
															"nativeSrc": "8238:26:7",
															"nodeType": "YulAssignment",
															"src": "8238:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8250:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8250:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8261:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8246:3:7"
																},
																"nativeSrc": "8246:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8246:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8238:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8238:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8285:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8285:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8296:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8296:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8281:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:7"
																		},
																		"nativeSrc": "8281:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8281:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8304:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8304:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8310:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8310:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:7"
																		},
																		"nativeSrc": "8300:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8300:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8274:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8274:6:7"
																},
																"nativeSrc": "8274:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8274:47:7"
															},
															"nativeSrc": "8274:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8274:47:7"
														},
														{
															"nativeSrc": "8330:139:7",
															"nodeType": "YulAssignment",
															"src": "8330:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8464:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8464:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8338:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8338:124:7"
																},
																"nativeSrc": "8338:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8338:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8330:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8330:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8057:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8208:9:7",
														"nodeType": "YulTypedName",
														"src": "8208:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8223:4:7",
														"nodeType": "YulTypedName",
														"src": "8223:4:7",
														"type": ""
													}
												],
												"src": "8057:419:7"
											},
											{
												"body": {
													"nativeSrc": "8608:206:7",
													"nodeType": "YulBlock",
													"src": "8608:206:7",
													"statements": [
														{
															"nativeSrc": "8618:26:7",
															"nodeType": "YulAssignment",
															"src": "8618:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8630:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8630:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8641:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8641:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8626:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8626:3:7"
																},
																"nativeSrc": "8626:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8626:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8618:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8618:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8698:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8698:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8711:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8722:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8722:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8707:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8707:3:7"
																		},
																		"nativeSrc": "8707:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8707:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8654:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8654:43:7"
																},
																"nativeSrc": "8654:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8654:71:7"
															},
															"nativeSrc": "8654:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8654:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8779:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8779:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8792:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8792:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8803:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8803:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8788:3:7"
																		},
																		"nativeSrc": "8788:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8788:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8735:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8735:43:7"
																},
																"nativeSrc": "8735:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8735:72:7"
															},
															"nativeSrc": "8735:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8735:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "8482:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8572:9:7",
														"nodeType": "YulTypedName",
														"src": "8572:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8584:6:7",
														"nodeType": "YulTypedName",
														"src": "8584:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8592:6:7",
														"nodeType": "YulTypedName",
														"src": "8592:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8603:4:7",
														"nodeType": "YulTypedName",
														"src": "8603:4:7",
														"type": ""
													}
												],
												"src": "8482:332:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$456_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$456_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$456__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$456_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough token balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Param too large\")\n\n    }\n\n    function abi_encode_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806342cde4e81161006f57806342cde4e814610161578063867827b71461017f57806391d148541461019b578063a217fddf146101cb578063d547741f146101e9578063fc0c546a14610205576100a7565b806301ffc9a7146100ab578063092c5b3b146100db578063248a9ca3146100f95780632f2ff15d1461012957806336568abe14610145575b5f80fd5b6100c560048036038101906100c0919061087e565b610223565b6040516100d291906108c3565b60405180910390f35b6100e361029c565b6040516100f091906108f4565b60405180910390f35b610113600480360381019061010e9190610937565b6102c0565b60405161012091906108f4565b60405180910390f35b610143600480360381019061013e91906109bc565b6102dc565b005b61015f600480360381019061015a91906109bc565b6102fe565b005b610169610379565b6040516101769190610a12565b60405180910390f35b61019960048036038101906101949190610a55565b61037f565b005b6101b560048036038101906101b091906109bc565b6104ce565b6040516101c291906108c3565b60405180910390f35b6101d3610531565b6040516101e091906108f4565b60405180910390f35b61020360048036038101906101fe91906109bc565b610537565b005b61020d610559565b60405161021a9190610adb565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061029557506102948261057e565b5b9050919050565b7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335781565b5f805f8381526020019081526020015f20600101549050919050565b6102e5826102c0565b6102ee816105e7565b6102f883836105fb565b50505050565b6103066106e4565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461036a576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61037482826106eb565b505050565b60025481565b7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c5702233576103a9816105e7565b60025460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104069190610b03565b602060405180830381865afa158015610421573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104459190610b30565b1015610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047d90610bb5565b60405180910390fd5b6101f482106104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c190610c1d565b60405180910390fd5b5050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b610540826102c0565b610549816105e7565b61055383836106eb565b50505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6105f8816105f36106e4565b6107d4565b50565b5f61060683836104ce565b6106da5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506106776106e4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506106de565b5f90505b92915050565b5f33905090565b5f6106f683836104ce565b156107ca575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506107676106e4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506107ce565b5f90505b92915050565b6107de82826104ce565b6108215780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610818929190610c3b565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61085d81610829565b8114610867575f80fd5b50565b5f8135905061087881610854565b92915050565b5f6020828403121561089357610892610825565b5b5f6108a08482850161086a565b91505092915050565b5f8115159050919050565b6108bd816108a9565b82525050565b5f6020820190506108d65f8301846108b4565b92915050565b5f819050919050565b6108ee816108dc565b82525050565b5f6020820190506109075f8301846108e5565b92915050565b610916816108dc565b8114610920575f80fd5b50565b5f813590506109318161090d565b92915050565b5f6020828403121561094c5761094b610825565b5b5f61095984828501610923565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61098b82610962565b9050919050565b61099b81610981565b81146109a5575f80fd5b50565b5f813590506109b681610992565b92915050565b5f80604083850312156109d2576109d1610825565b5b5f6109df85828601610923565b92505060206109f0858286016109a8565b9150509250929050565b5f819050919050565b610a0c816109fa565b82525050565b5f602082019050610a255f830184610a03565b92915050565b610a34816109fa565b8114610a3e575f80fd5b50565b5f81359050610a4f81610a2b565b92915050565b5f60208284031215610a6a57610a69610825565b5b5f610a7784828501610a41565b91505092915050565b5f819050919050565b5f610aa3610a9e610a9984610962565b610a80565b610962565b9050919050565b5f610ab482610a89565b9050919050565b5f610ac582610aaa565b9050919050565b610ad581610abb565b82525050565b5f602082019050610aee5f830184610acc565b92915050565b610afd81610981565b82525050565b5f602082019050610b165f830184610af4565b92915050565b5f81519050610b2a81610a2b565b92915050565b5f60208284031215610b4557610b44610825565b5b5f610b5284828501610b1c565b91505092915050565b5f82825260208201905092915050565b7f4e6f7420656e6f75676820746f6b656e2062616c616e636500000000000000005f82015250565b5f610b9f601883610b5b565b9150610baa82610b6b565b602082019050919050565b5f6020820190508181035f830152610bcc81610b93565b9050919050565b7f506172616d20746f6f206c6172676500000000000000000000000000000000005f82015250565b5f610c07600f83610b5b565b9150610c1282610bd3565b602082019050919050565b5f6020820190508181035f830152610c3481610bfb565b9050919050565b5f604082019050610c4e5f830185610af4565b610c5b60208301846108e5565b939250505056fea26469706673582212207d5d1ec5b2659c7961eee7a47839209a4cdd6a111e2ca950d0f481829da75b4464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42CDE4E8 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x42CDE4E8 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x867827B7 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x205 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x92C5B3B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x2FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x295 JUMPI POP PUSH2 0x294 DUP3 PUSH2 0x57E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E5 DUP3 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x2F8 DUP4 DUP4 PUSH2 0x5FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x306 PUSH2 0x6E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x374 DUP3 DUP3 PUSH2 0x6EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 PUSH2 0x3A9 DUP2 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0xB30 JUMP JUMPDEST LT ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47D SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 DUP3 LT PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C1 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x540 DUP3 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x549 DUP2 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x553 DUP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F8 DUP2 PUSH2 0x5F3 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x606 DUP4 DUP4 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x677 PUSH2 0x6E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x6DE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6F6 DUP4 DUP4 PUSH2 0x4CE JUMP JUMPDEST ISZERO PUSH2 0x7CA JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x767 PUSH2 0x6E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x7CE JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7DE DUP3 DUP3 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x821 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x818 SWAP3 SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85D DUP2 PUSH2 0x829 JUMP JUMPDEST DUP2 EQ PUSH2 0x867 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x878 DUP2 PUSH2 0x854 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x893 JUMPI PUSH2 0x892 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8A0 DUP5 DUP3 DUP6 ADD PUSH2 0x86A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EE DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x907 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x916 DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP2 EQ PUSH2 0x920 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x931 DUP2 PUSH2 0x90D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94C JUMPI PUSH2 0x94B PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x959 DUP5 DUP3 DUP6 ADD PUSH2 0x923 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98B DUP3 PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99B DUP2 PUSH2 0x981 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B6 DUP2 PUSH2 0x992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9D1 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9DF DUP6 DUP3 DUP7 ADD PUSH2 0x923 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9F0 DUP6 DUP3 DUP7 ADD PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0C DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA25 PUSH0 DUP4 ADD DUP5 PUSH2 0xA03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA34 DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP2 EQ PUSH2 0xA3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA4F DUP2 PUSH2 0xA2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA69 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA77 DUP5 DUP3 DUP6 ADD PUSH2 0xA41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 PUSH2 0xA9E PUSH2 0xA99 DUP5 PUSH2 0x962 JUMP JUMPDEST PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB4 DUP3 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAC5 DUP3 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD5 DUP2 PUSH2 0xABB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAEE PUSH0 DUP4 ADD DUP5 PUSH2 0xACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFD DUP2 PUSH2 0x981 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB16 PUSH0 DUP4 ADD DUP5 PUSH2 0xAF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB2A DUP2 PUSH2 0xA2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x825 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB52 DUP5 DUP3 DUP6 ADD PUSH2 0xB1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E2062616C616E63650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB9F PUSH1 0x18 DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xBAA DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBCC DUP2 PUSH2 0xB93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506172616D20746F6F206C617267650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC07 PUSH1 0xF DUP4 PUSH2 0xB5B JUMP JUMPDEST SWAP2 POP PUSH2 0xC12 DUP3 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC34 DUP2 PUSH2 0xBFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4E PUSH0 DUP4 ADD DUP6 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0xC5B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x5D1EC5B2659C7961EEE7A47839209A4CDD6A111E2CA950D0F481829DA75B PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "175:791:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;227:70:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;328:24:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;303:19:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;227:70:6:-;269:28;227:70;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;328:24:6:-;;;;:::o;614:350::-;269:28;2464:16:0;2475:4;2464:10;:16::i;:::-;808:9:6::1;;777:5;;;;;;;;;;;:15;;;793:10;777:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;769:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;908:3;900:5;:11;892:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;614:350:::0;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;4642:138::-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;303:19:6:-;;;;;;;;;;;;;:::o;763:146:4:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:7:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:118::-;3718:24;3736:5;3718:24;:::i;:::-;3713:3;3706:37;3631:118;;:::o;3755:222::-;3848:4;3886:2;3875:9;3871:18;3863:26;;3899:71;3967:1;3956:9;3952:17;3943:6;3899:71;:::i;:::-;3755:222;;;;:::o;3983:122::-;4056:24;4074:5;4056:24;:::i;:::-;4049:5;4046:35;4036:63;;4095:1;4092;4085:12;4036:63;3983:122;:::o;4111:139::-;4157:5;4195:6;4182:20;4173:29;;4211:33;4238:5;4211:33;:::i;:::-;4111:139;;;;:::o;4256:329::-;4315:6;4364:2;4352:9;4343:7;4339:23;4335:32;4332:119;;;4370:79;;:::i;:::-;4332:119;4490:1;4515:53;4560:7;4551:6;4540:9;4536:22;4515:53;:::i;:::-;4505:63;;4461:117;4256:329;;;;:::o;4591:60::-;4619:3;4640:5;4633:12;;4591:60;;;:::o;4657:142::-;4707:9;4740:53;4758:34;4767:24;4785:5;4767:24;:::i;:::-;4758:34;:::i;:::-;4740:53;:::i;:::-;4727:66;;4657:142;;;:::o;4805:126::-;4855:9;4888:37;4919:5;4888:37;:::i;:::-;4875:50;;4805:126;;;:::o;4937:140::-;5001:9;5034:37;5065:5;5034:37;:::i;:::-;5021:50;;4937:140;;;:::o;5083:159::-;5184:51;5229:5;5184:51;:::i;:::-;5179:3;5172:64;5083:159;;:::o;5248:250::-;5355:4;5393:2;5382:9;5378:18;5370:26;;5406:85;5488:1;5477:9;5473:17;5464:6;5406:85;:::i;:::-;5248:250;;;;:::o;5504:118::-;5591:24;5609:5;5591:24;:::i;:::-;5586:3;5579:37;5504:118;;:::o;5628:222::-;5721:4;5759:2;5748:9;5744:18;5736:26;;5772:71;5840:1;5829:9;5825:17;5816:6;5772:71;:::i;:::-;5628:222;;;;:::o;5856:143::-;5913:5;5944:6;5938:13;5929:22;;5960:33;5987:5;5960:33;:::i;:::-;5856:143;;;;:::o;6005:351::-;6075:6;6124:2;6112:9;6103:7;6099:23;6095:32;6092:119;;;6130:79;;:::i;:::-;6092:119;6250:1;6275:64;6331:7;6322:6;6311:9;6307:22;6275:64;:::i;:::-;6265:74;;6221:128;6005:351;;;;:::o;6362:169::-;6446:11;6480:6;6475:3;6468:19;6520:4;6515:3;6511:14;6496:29;;6362:169;;;;:::o;6537:174::-;6677:26;6673:1;6665:6;6661:14;6654:50;6537:174;:::o;6717:366::-;6859:3;6880:67;6944:2;6939:3;6880:67;:::i;:::-;6873:74;;6956:93;7045:3;6956:93;:::i;:::-;7074:2;7069:3;7065:12;7058:19;;6717:366;;;:::o;7089:419::-;7255:4;7293:2;7282:9;7278:18;7270:26;;7342:9;7336:4;7332:20;7328:1;7317:9;7313:17;7306:47;7370:131;7496:4;7370:131;:::i;:::-;7362:139;;7089:419;;;:::o;7514:165::-;7654:17;7650:1;7642:6;7638:14;7631:41;7514:165;:::o;7685:366::-;7827:3;7848:67;7912:2;7907:3;7848:67;:::i;:::-;7841:74;;7924:93;8013:3;7924:93;:::i;:::-;8042:2;8037:3;8033:12;8026:19;;7685:366;;;:::o;8057:419::-;8223:4;8261:2;8250:9;8246:18;8238:26;;8310:9;8304:4;8300:20;8296:1;8285:9;8281:17;8274:47;8338:131;8464:4;8338:131;:::i;:::-;8330:139;;8057:419;;;:::o;8482:332::-;8603:4;8641:2;8630:9;8626:18;8618:26;;8654:71;8722:1;8711:9;8707:17;8698:6;8654:71;:::i;:::-;8735:72;8803:2;8792:9;8788:18;8779:6;8735:72;:::i;:::-;8482:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "644800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CONTROLLER_ROLE()": "348",
								"DEFAULT_ADMIN_ROLE()": "396",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3166",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"sensitiveAction(uint256)": "infinite",
								"supportsInterface(bytes4)": "718",
								"threshold()": "2425",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 359,
									"end": 608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 359,
									"end": 608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 455,
									"end": 473,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 455,
									"end": 473,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 475,
									"end": 480,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 444,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 444,
									"end": 454,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 444,
									"end": 454,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 444,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 444,
									"end": 481,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 444,
									"end": 481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 444,
									"end": 481,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 444,
									"end": 481,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 481,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 269,
									"end": 297,
									"name": "PUSH",
									"source": 6,
									"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
								},
								{
									"begin": 519,
									"end": 524,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 491,
									"end": 501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 491,
									"end": 501,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 491,
									"end": 501,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 491,
									"end": 525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 491,
									"end": 525,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 550,
									"end": 562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 535,
									"end": 540,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 535,
									"end": 540,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 535,
									"end": 563,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 535,
									"end": 563,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 535,
									"end": 563,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 535,
									"end": 563,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 535,
									"end": 563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 585,
									"end": 601,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 573,
									"end": 582,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 573,
									"end": 601,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 573,
									"end": 601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 573,
									"end": 601,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 573,
									"end": 601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 359,
									"end": 608,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 175,
									"end": 966,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 175,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 966,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d5d1ec5b2659c7961eee7a47839209a4cdd6a111e2ca950d0f481829da75b4464736f6c634300081a0033",
									".code": [
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "42CDE4E8"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "42CDE4E8"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "867827B7"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "91D14854"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "A217FDDF"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "D547741F"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "92C5B3B"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "248A9CA3"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "2F2FF15D"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "36568ABE"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 175,
											"end": 966,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 227,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 614,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 614,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 303,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 303,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 269,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
										},
										{
											"begin": 227,
											"end": 297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 227,
											"end": 297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 614,
											"end": 964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 269,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 817,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 777,
											"end": 792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 777,
											"end": 792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 793,
											"end": 803,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 777,
											"end": 804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 777,
											"end": 804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 777,
											"end": 804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 777,
											"end": 817,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 777,
											"end": 817,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 769,
											"end": 846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 769,
											"end": 846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 908,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F4"
										},
										{
											"begin": 900,
											"end": 905,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 900,
											"end": 911,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 892,
											"end": 931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 892,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 614,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2026,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 2075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2181,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2485,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3736,
											"end": 3741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 3718,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3716,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3967,
											"end": 3968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3952,
											"end": 3969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 3899,
											"end": 3970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3899,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3755,
											"end": 3977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4105,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3983,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4056,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4080,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4056,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4081,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4036,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4036,
											"end": 4099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4085,
											"end": 4097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4036,
											"end": 4099,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4036,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4250,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4111,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4238,
											"end": 4243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 4211,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4244,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4211,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4585,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4256,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4350,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4362,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4335,
											"end": 4367,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4451,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4332,
											"end": 4451,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4370,
											"end": 4449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4451,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4332,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4560,
											"end": 4567,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4540,
											"end": 4549,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4536,
											"end": 4558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4515,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4515,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4568,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4461,
											"end": 4578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4651,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4591,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4619,
											"end": 4622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4651,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4799,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4657,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4758,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4767,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4785,
											"end": 4790,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4767,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4767,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4758,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4792,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4758,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4740,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4740,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4740,
											"end": 4793,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4740,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4931,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4805,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4888,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 4925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4875,
											"end": 4925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4931,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5077,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4937,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5065,
											"end": 5070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 5034,
											"end": 5071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5071,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5034,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5242,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5083,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5229,
											"end": 5234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 5184,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5235,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5184,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5236,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5498,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5248,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 5490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 5406,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5491,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5406,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 5591,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5586,
											"end": 5589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5616,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5748,
											"end": 5757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5822,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5772,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5999,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 5856,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5951,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5929,
											"end": 5951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5929,
											"end": 5951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5960,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5993,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5960,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5999,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6356,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 6005,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6126,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6121,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6122,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6127,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6211,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6092,
											"end": 6211,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6130,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 6130,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6209,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6130,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6211,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6092,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6331,
											"end": 6338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6275,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6339,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6275,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6356,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6531,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6362,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6446,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6524,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6515,
											"end": 6518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6511,
											"end": 6525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6531,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6711,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6537,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F6B656E2062616C616E63650000000000000000"
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6859,
											"end": 6862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6944,
											"end": 6946,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6939,
											"end": 6942,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6880,
											"end": 6947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 6880,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 6947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 6947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6956,
											"end": 7049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 6956,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7074,
											"end": 7076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 7083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7496,
											"end": 7500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7370,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7679,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7514,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7671,
											"name": "PUSH",
											"source": 7,
											"value": "506172616D20746F6F206C617267650000000000000000000000000000000000"
										},
										{
											"begin": 7650,
											"end": 7651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7631,
											"end": 7672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 8051,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7685,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7827,
											"end": 7830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7907,
											"end": 7910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7848,
											"end": 7915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7848,
											"end": 7915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 7915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 7915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8013,
											"end": 8016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 7924,
											"end": 8017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 8017,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7924,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8037,
											"end": 8040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8026,
											"end": 8045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8026,
											"end": 8045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 8051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 8051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 8051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 8051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8250,
											"end": 8259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8304,
											"end": 8308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8300,
											"end": 8320,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8274,
											"end": 8321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8338,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8057,
											"end": 8476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8630,
											"end": 8639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 8644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 8644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 8644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8720,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 8654,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8654,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8803,
											"end": 8805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8792,
											"end": 8801,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 8785,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 8735,
											"end": 8807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8807,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8735,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CONTROLLER_ROLE()": "092c5b3b",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"sensitiveAction(uint256)": "867827b7",
							"supportsInterface(bytes4)": "01ffc9a7",
							"threshold()": "42cde4e8",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balanceThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONTROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"param\",\"type\":\"uint256\"}],\"name\":\"sensitiveAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":\"ComplexConditionACL\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol\":{\"keccak256\":\"0x9521b493e148379675ed9d26bd8a562bbf5a1f172cd9149643db76e1b487a362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151a8c194138a59be25e536a6f386c8c2f09b926233246b5e1196346c445ccc2\",\"dweb:/ipfs/QmZ5EA8vzH2bukNwztbCywdAKK18m9R31UYFr4aLATUUsE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol:ComplexConditionACL",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 536,
								"contract": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol:ComplexConditionACL",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)456"
							},
							{
								"astId": 538,
								"contract": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol:ComplexConditionACL",
								"label": "threshold",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)456": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol:ComplexConditionACL",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol:ComplexConditionACL",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol:19:5:\n   |\n19 |     function sensitiveAction(uint256 param) external onlyRole(CONTROLLER_ROLE) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 964,
					"file": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol",
					"start": 614
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 511,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								510,
								522,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 456,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 456,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 456,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 456,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 456,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 456,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							510
						],
						"IERC165": [
							522
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 523,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 522,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165",
										"nameLocations": [
											"688:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "688:7:4"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								522
							],
							"name": "ERC165",
							"nameLocation": "678:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "845:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "862:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "882:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "855:47:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "790:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "839:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:4"
									},
									"scope": 510,
									"src": "763:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 511,
							"src": "660:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 522,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol": {
				"ast": {
					"absolutePath": "E/Extended ACLs (Cisco)/Complex Condition ACL (Balance + Role + Param Check).sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"ComplexConditionACL": [
							596
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						]
					},
					"id": 597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 597,
							"sourceUnit": 296,
							"src": "58:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 597,
							"sourceUnit": 457,
							"src": "117:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "AccessControl",
										"nameLocations": [
											"207:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "207:13:6"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "207:13:6"
								}
							],
							"canonicalName": "ComplexConditionACL",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 596,
							"linearizedBaseContracts": [
								596,
								295,
								510,
								522,
								378,
								486
							],
							"name": "ComplexConditionACL",
							"nameLocation": "184:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "092c5b3b",
									"id": 533,
									"mutability": "constant",
									"name": "CONTROLLER_ROLE",
									"nameLocation": "251:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "227:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 529,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "227:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "434f4e54524f4c4c45525f524f4c45",
												"id": 531,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "279:17:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
													"typeString": "literal_string \"CONTROLLER_ROLE\""
												},
												"value": "CONTROLLER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
													"typeString": "literal_string \"CONTROLLER_ROLE\""
												}
											],
											"id": 530,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "269:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "269:28:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 536,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "317:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "303:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$456",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 535,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 534,
											"name": "IERC20",
											"nameLocations": [
												"303:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 456,
											"src": "303:6:6"
										},
										"referencedDeclaration": 456,
										"src": "303:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$456",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42cde4e8",
									"id": 538,
									"mutability": "mutable",
									"name": "threshold",
									"nameLocation": "343:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "328:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 537,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "434:174:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "455:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 549,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "475:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 547,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "444:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "444:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "444:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "CONTROLLER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "502:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 554,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "519:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 552,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "491:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "491:34:6"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 557,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "535:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$456",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 559,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "550:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 558,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "543:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "543:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$456",
															"typeString": "contract IERC20"
														}
													},
													"src": "535:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "535:28:6"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "573:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "balanceThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "585:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "573:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "573:28:6"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "379:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "371:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "394:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "386:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "balanceThreshold",
												"nameLocation": "416:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "408:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:63:6"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:0:6"
									},
									"scope": 596,
									"src": "359:249:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "689:275:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 579,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "793:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "797:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "793:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "777:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "783:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "777:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "777:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 582,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "808:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "777:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e2062616c616e6365",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "819:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b",
																"typeString": "literal_string \"Not enough token balance\""
															},
															"value": "Not enough token balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e53a28c5a8d5e086510ec5cead3f37131b05ac0658898de6e08ba19b403f4e7b",
																"typeString": "literal_string \"Not enough token balance\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "769:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "769:77:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 588,
																"name": "param",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "353030",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "908:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															"src": "900:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506172616d20746f6f206c61726765",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "913:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc",
																"typeString": "literal_string \"Param too large\""
															},
															"value": "Param too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_687037c5d87f063301acea5dd7e80512bd99cd211eb60296500196f5bbb4ebdc",
																"typeString": "literal_string \"Param too large\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "892:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "892:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "892:39:6"
											}
										]
									},
									"functionSelector": "867827b7",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 573,
													"name": "CONTROLLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 533,
													"src": "672:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 572,
												"name": "onlyRole",
												"nameLocations": [
													"663:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "663:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "663:25:6"
										}
									],
									"name": "sensitiveAction",
									"nameLocation": "623:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "param",
												"nameLocation": "647:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "639:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:15:6"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:6"
									},
									"scope": 596,
									"src": "614:350:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 597,
							"src": "175:791:6",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "32:935:6"
				},
				"id": 6
			}
		}
	}
}