{
	"id": "5e64adfcc8d26552d22b890334a15208",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract TimeBasedEphemeral {\n    using Counters for Counters.Counter;\n    Counters.Counter private _idCounter;\n\n    struct EphemeralData {\n        address owner;\n        uint256 expireAt;\n    }\n\n    mapping(uint256 => EphemeralData) public ephemeralSlots;\n\n    function createEphemeral(uint256 ttlSeconds) external {\n        _idCounter.increment();\n        uint256 newID = _idCounter.current();\n        ephemeralSlots[newID] = EphemeralData({\n            owner: msg.sender,\n            expireAt: block.timestamp + ttlSeconds\n        });\n    }\n\n    function isActive(uint256 ephemeralID) public view returns (bool) {\n        return block.timestamp <= ephemeralSlots[ephemeralID].expireAt;\n    }\n\n    // attacker can't forcibly reuse ID if it hasn't expired\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Counters.sol",
								"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol": {
				"TimeBasedEphemeral": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ttlSeconds",
									"type": "uint256"
								}
							],
							"name": "createEphemeral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ephemeralSlots",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expireAt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ephemeralID",
									"type": "uint256"
								}
							],
							"name": "isActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":112:870  contract TimeBasedEphemeral {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":112:870  contract TimeBasedEphemeral {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x46ea6872\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x82afd23b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xcb4a620b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":374:655  function createEphemeral(uint256 ttlSeconds) external {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":661:806  function isActive(uint256 ephemeralID) public view returns (bool) {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      tag_12\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":312:367  mapping(uint256 => EphemeralData) public ephemeralSlots */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":374:655  function createEphemeral(uint256 ttlSeconds) external {... */\n    tag_9:\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":438:460  _idCounter.increment() */\n      tag_21\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":438:448  _idCounter */\n      0x00\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":438:458  _idCounter.increment */\n      tag_22\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":438:460  _idCounter.increment() */\n      jump\t// in\n    tag_21:\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":470:483  uint256 newID */\n      0x00\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":486:506  _idCounter.current() */\n      tag_23\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":486:496  _idCounter */\n      0x00\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":486:504  _idCounter.current */\n      tag_24\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":486:506  _idCounter.current() */\n      jump\t// in\n    tag_23:\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":470:506  uint256 newID = _idCounter.current() */\n      swap1\n      pop\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":540:648  EphemeralData({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":575:585  msg.sender */\n      caller\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":540:648  EphemeralData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":627:637  ttlSeconds */\n      dup4\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":609:624  block.timestamp */\n      timestamp\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":609:637  block.timestamp + ttlSeconds */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":540:648  EphemeralData({... */\n      dup2\n      mstore\n      pop\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":516:530  ephemeralSlots */\n      0x01\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":516:537  ephemeralSlots[newID] */\n      0x00\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":531:536  newID */\n      dup4\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":516:537  ephemeralSlots[newID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":516:648  ephemeralSlots[newID] = EphemeralData({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":428:655  {... */\n      pop\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":374:655  function createEphemeral(uint256 ttlSeconds) external {... */\n      pop\n      jump\t// out\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":661:806  function isActive(uint256 ephemeralID) public view returns (bool) {... */\n    tag_12:\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":721:725  bool */\n      0x00\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":763:777  ephemeralSlots */\n      0x01\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":763:790  ephemeralSlots[ephemeralID] */\n      0x00\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":778:789  ephemeralID */\n      dup4\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":763:790  ephemeralSlots[ephemeralID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":763:799  ephemeralSlots[ephemeralID].expireAt */\n      0x01\n      add\n      sload\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":744:759  block.timestamp */\n      timestamp\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":744:799  block.timestamp <= ephemeralSlots[ephemeralID].expireAt */\n      gt\n      iszero\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":737:799  return block.timestamp <= ephemeralSlots[ephemeralID].expireAt */\n      swap1\n      pop\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":661:806  function isActive(uint256 ephemeralID) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":312:367  mapping(uint256 => EphemeralData) public ephemeralSlots */\n    tag_17:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_33:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_34:\n        /* \"#utility.yul\":490:514   */\n      tag_49\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_33\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_50:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_35:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_52\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_34\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_55\n      tag_31\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":766:885   */\n    tag_54:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_56\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_35\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_36:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_37:\n        /* \"#utility.yul\":1202:1223   */\n      tag_59\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_14:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_61\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_37\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1578   */\n    tag_38:\n        /* \"#utility.yul\":1489:1496   */\n      0x00\n        /* \"#utility.yul\":1529:1571   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1522:1527   */\n      dup3\n        /* \"#utility.yul\":1518:1572   */\n      and\n        /* \"#utility.yul\":1507:1572   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1584:1680   */\n    tag_39:\n        /* \"#utility.yul\":1621:1628   */\n      0x00\n        /* \"#utility.yul\":1650:1674   */\n      tag_64\n        /* \"#utility.yul\":1668:1673   */\n      dup3\n        /* \"#utility.yul\":1650:1674   */\n      tag_38\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1639:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1584:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1804   */\n    tag_40:\n        /* \"#utility.yul\":1773:1797   */\n      tag_66\n        /* \"#utility.yul\":1791:1796   */\n      dup2\n        /* \"#utility.yul\":1773:1797   */\n      tag_39\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1768:1771   */\n      dup3\n        /* \"#utility.yul\":1761:1798   */\n      mstore\n        /* \"#utility.yul\":1686:1804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1928   */\n    tag_41:\n        /* \"#utility.yul\":1897:1921   */\n      tag_68\n        /* \"#utility.yul\":1915:1920   */\n      dup2\n        /* \"#utility.yul\":1897:1921   */\n      tag_33\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1892:1895   */\n      dup3\n        /* \"#utility.yul\":1885:1922   */\n      mstore\n        /* \"#utility.yul\":1810:1928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1934:2266   */\n    tag_19:\n        /* \"#utility.yul\":2055:2059   */\n      0x00\n        /* \"#utility.yul\":2093:2095   */\n      0x40\n        /* \"#utility.yul\":2082:2091   */\n      dup3\n        /* \"#utility.yul\":2078:2096   */\n      add\n        /* \"#utility.yul\":2070:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2106:2177   */\n      tag_70\n        /* \"#utility.yul\":2174:2175   */\n      0x00\n        /* \"#utility.yul\":2163:2172   */\n      dup4\n        /* \"#utility.yul\":2159:2176   */\n      add\n        /* \"#utility.yul\":2150:2156   */\n      dup6\n        /* \"#utility.yul\":2106:2177   */\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2187:2259   */\n      tag_71\n        /* \"#utility.yul\":2255:2257   */\n      0x20\n        /* \"#utility.yul\":2244:2253   */\n      dup4\n        /* \"#utility.yul\":2240:2258   */\n      add\n        /* \"#utility.yul\":2231:2237   */\n      dup5\n        /* \"#utility.yul\":2187:2259   */\n      tag_41\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1934:2266   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2452   */\n    tag_42:\n        /* \"#utility.yul\":2320:2397   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2317:2318   */\n      0x00\n        /* \"#utility.yul\":2310:2398   */\n      mstore\n        /* \"#utility.yul\":2417:2421   */\n      0x11\n        /* \"#utility.yul\":2414:2415   */\n      0x04\n        /* \"#utility.yul\":2407:2422   */\n      mstore\n        /* \"#utility.yul\":2441:2445   */\n      0x24\n        /* \"#utility.yul\":2438:2439   */\n      0x00\n        /* \"#utility.yul\":2431:2446   */\n      revert\n        /* \"#utility.yul\":2458:2649   */\n    tag_26:\n        /* \"#utility.yul\":2498:2501   */\n      0x00\n        /* \"#utility.yul\":2517:2537   */\n      tag_74\n        /* \"#utility.yul\":2535:2536   */\n      dup3\n        /* \"#utility.yul\":2517:2537   */\n      tag_33\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2512:2537   */\n      swap2\n      pop\n        /* \"#utility.yul\":2551:2571   */\n      tag_75\n        /* \"#utility.yul\":2569:2570   */\n      dup4\n        /* \"#utility.yul\":2551:2571   */\n      tag_33\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2546:2571   */\n      swap3\n      pop\n        /* \"#utility.yul\":2594:2595   */\n      dup3\n        /* \"#utility.yul\":2591:2592   */\n      dup3\n        /* \"#utility.yul\":2587:2596   */\n      add\n        /* \"#utility.yul\":2580:2596   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:2618   */\n      dup1\n        /* \"#utility.yul\":2612:2613   */\n      dup3\n        /* \"#utility.yul\":2609:2619   */\n      gt\n        /* \"#utility.yul\":2606:2642   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2622:2640   */\n      tag_77\n      tag_42\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2606:2642   */\n    tag_76:\n        /* \"#utility.yul\":2458:2649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c014d234de73b01932bc795673404edb60744992a4682675932e4cacaaf3e7db64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506103908061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806346ea68721461004357806382afd23b1461005f578063cb4a620b1461008f575b5f80fd5b61005d60048036038101906100589190610227565b6100c0565b005b61007960048036038101906100749190610227565b610171565b604051610086919061026c565b60405180910390f35b6100a960048036038101906100a49190610227565b610191565b6040516100b79291906102d3565b60405180910390f35b6100c95f6101d0565b5f6100d35f6101e4565b905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183426101089190610327565b81525060015f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b5f60015f8381526020019081526020015f20600101544211159050919050565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f80fd5b5f819050919050565b610206816101f4565b8114610210575f80fd5b50565b5f81359050610221816101fd565b92915050565b5f6020828403121561023c5761023b6101f0565b5b5f61024984828501610213565b91505092915050565b5f8115159050919050565b61026681610252565b82525050565b5f60208201905061027f5f83018461025d565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102ae82610285565b9050919050565b6102be816102a4565b82525050565b6102cd816101f4565b82525050565b5f6040820190506102e65f8301856102b5565b6102f360208301846102c4565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610331826101f4565b915061033c836101f4565b9250828201905080821115610354576103536102fa565b5b9291505056fea2646970667358221220c014d234de73b01932bc795673404edb60744992a4682675932e4cacaaf3e7db64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x390 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46EA6872 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xCB4A620B EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH0 PUSH2 0x1D0 JUMP JUMPDEST PUSH0 PUSH2 0xD3 PUSH0 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x206 DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23B PUSH2 0x1F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249 DUP5 DUP3 DUP6 ADD PUSH2 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x266 DUP2 PUSH2 0x252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F PUSH0 DUP4 ADD DUP5 PUSH2 0x25D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE DUP3 PUSH2 0x285 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE DUP2 PUSH2 0x2A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CD DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x2F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x331 DUP3 PUSH2 0x1F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP4 PUSH2 0x1F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0x2FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 EQ 0xD2 CALLVALUE 0xDE PUSH20 0xB01932BC795673404EDB60744992A4682675932E 0x4C 0xAC 0xAA RETURN 0xE7 0xDB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "112:758:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createEphemeral_123": {
									"entryPoint": 192,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_17": {
									"entryPoint": 484,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ephemeralSlots_93": {
									"entryPoint": 401,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increment_31": {
									"entryPoint": 464,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isActive_139": {
									"entryPoint": 369,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2652:2",
										"nodeType": "YulBlock",
										"src": "0:2652:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:32:2",
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nativeSrc": "389:16:2",
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:2",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nativeSrc": "460:79:2",
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:2",
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:2",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:2",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nativeSrc": "519:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nativeSrc": "519:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nativeSrc": "490:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nativeSrc": "480:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nativeSrc": "473:43:2",
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nativeSrc": "470:63:2",
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:2",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nativeSrc": "597:87:2",
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nativeSrc": "607:29:2",
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nativeSrc": "616:20:2",
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nativeSrc": "645:33:2",
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nativeSrc": "645:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:2",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:2",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:2",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nativeSrc": "756:263:2",
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:2",
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nativeSrc": "804:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nativeSrc": "804:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nativeSrc": "773:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:2",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nativeSrc": "769:32:2",
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nativeSrc": "766:119:2",
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nativeSrc": "895:117:2",
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nativeSrc": "910:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:2",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:2",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:2",
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nativeSrc": "970:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nativeSrc": "949:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:2",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:2",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:2",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nativeSrc": "1067:48:2",
													"nodeType": "YulBlock",
													"src": "1067:48:2",
													"statements": [
														{
															"nativeSrc": "1077:32:2",
															"nodeType": "YulAssignment",
															"src": "1077:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:2"
																		},
																		"nativeSrc": "1095:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:2"
																},
																"nativeSrc": "1088:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:2",
														"nodeType": "YulTypedName",
														"src": "1049:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:2",
														"nodeType": "YulTypedName",
														"src": "1059:7:2",
														"type": ""
													}
												],
												"src": "1025:90:2"
											},
											{
												"body": {
													"nativeSrc": "1180:50:2",
													"nodeType": "YulBlock",
													"src": "1180:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:2"
																		},
																		"nativeSrc": "1202:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:2"
																},
																"nativeSrc": "1190:34:2",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:2"
															},
															"nativeSrc": "1190:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:2",
														"nodeType": "YulTypedName",
														"src": "1168:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:2",
														"nodeType": "YulTypedName",
														"src": "1175:3:2",
														"type": ""
													}
												],
												"src": "1121:109:2"
											},
											{
												"body": {
													"nativeSrc": "1328:118:2",
													"nodeType": "YulBlock",
													"src": "1328:118:2",
													"statements": [
														{
															"nativeSrc": "1338:26:2",
															"nodeType": "YulAssignment",
															"src": "1338:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:2"
																},
																"nativeSrc": "1346:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:2"
																		},
																		"nativeSrc": "1421:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:2"
																},
																"nativeSrc": "1374:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:2"
															},
															"nativeSrc": "1374:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:2",
														"nodeType": "YulTypedName",
														"src": "1300:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:2",
														"nodeType": "YulTypedName",
														"src": "1312:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:2",
														"nodeType": "YulTypedName",
														"src": "1323:4:2",
														"type": ""
													}
												],
												"src": "1236:210:2"
											},
											{
												"body": {
													"nativeSrc": "1497:81:2",
													"nodeType": "YulBlock",
													"src": "1497:81:2",
													"statements": [
														{
															"nativeSrc": "1507:65:2",
															"nodeType": "YulAssignment",
															"src": "1507:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1522:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1522:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1529:42:2",
																		"nodeType": "YulLiteral",
																		"src": "1529:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1518:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:2"
																},
																"nativeSrc": "1518:54:2",
																"nodeType": "YulFunctionCall",
																"src": "1518:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1507:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1507:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1452:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1479:5:2",
														"nodeType": "YulTypedName",
														"src": "1479:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1489:7:2",
														"nodeType": "YulTypedName",
														"src": "1489:7:2",
														"type": ""
													}
												],
												"src": "1452:126:2"
											},
											{
												"body": {
													"nativeSrc": "1629:51:2",
													"nodeType": "YulBlock",
													"src": "1629:51:2",
													"statements": [
														{
															"nativeSrc": "1639:35:2",
															"nodeType": "YulAssignment",
															"src": "1639:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1668:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1668:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1650:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1650:17:2"
																},
																"nativeSrc": "1650:24:2",
																"nodeType": "YulFunctionCall",
																"src": "1650:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1639:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1639:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1584:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1611:5:2",
														"nodeType": "YulTypedName",
														"src": "1611:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1621:7:2",
														"nodeType": "YulTypedName",
														"src": "1621:7:2",
														"type": ""
													}
												],
												"src": "1584:96:2"
											},
											{
												"body": {
													"nativeSrc": "1751:53:2",
													"nodeType": "YulBlock",
													"src": "1751:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1791:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1791:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1773:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1773:17:2"
																		},
																		"nativeSrc": "1773:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1773:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1761:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:2"
																},
																"nativeSrc": "1761:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1761:37:2"
															},
															"nativeSrc": "1761:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1761:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1686:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:2",
														"nodeType": "YulTypedName",
														"src": "1739:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1746:3:2",
														"nodeType": "YulTypedName",
														"src": "1746:3:2",
														"type": ""
													}
												],
												"src": "1686:118:2"
											},
											{
												"body": {
													"nativeSrc": "1875:53:2",
													"nodeType": "YulBlock",
													"src": "1875:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1892:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1892:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1915:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1915:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1897:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1897:17:2"
																		},
																		"nativeSrc": "1897:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1897:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1885:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:2"
																},
																"nativeSrc": "1885:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1885:37:2"
															},
															"nativeSrc": "1885:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1885:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1810:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1863:5:2",
														"nodeType": "YulTypedName",
														"src": "1863:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1870:3:2",
														"nodeType": "YulTypedName",
														"src": "1870:3:2",
														"type": ""
													}
												],
												"src": "1810:118:2"
											},
											{
												"body": {
													"nativeSrc": "2060:206:2",
													"nodeType": "YulBlock",
													"src": "2060:206:2",
													"statements": [
														{
															"nativeSrc": "2070:26:2",
															"nodeType": "YulAssignment",
															"src": "2070:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2082:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2082:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2093:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2093:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2078:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2078:3:2"
																},
																"nativeSrc": "2078:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2078:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2070:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2070:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2150:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2150:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2163:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2174:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2174:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2159:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:2"
																		},
																		"nativeSrc": "2159:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2159:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2106:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2106:43:2"
																},
																"nativeSrc": "2106:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2106:71:2"
															},
															"nativeSrc": "2106:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2106:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2231:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2231:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2244:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2244:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2255:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2255:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2240:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2240:3:2"
																		},
																		"nativeSrc": "2240:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2240:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2187:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2187:43:2"
																},
																"nativeSrc": "2187:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2187:72:2"
															},
															"nativeSrc": "2187:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2187:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1934:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2024:9:2",
														"nodeType": "YulTypedName",
														"src": "2024:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2036:6:2",
														"nodeType": "YulTypedName",
														"src": "2036:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2044:6:2",
														"nodeType": "YulTypedName",
														"src": "2044:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2055:4:2",
														"nodeType": "YulTypedName",
														"src": "2055:4:2",
														"type": ""
													}
												],
												"src": "1934:332:2"
											},
											{
												"body": {
													"nativeSrc": "2300:152:2",
													"nodeType": "YulBlock",
													"src": "2300:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2320:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2320:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:2"
																},
																"nativeSrc": "2310:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2310:88:2"
															},
															"nativeSrc": "2310:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2310:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2414:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2414:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2417:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2417:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2407:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2407:6:2"
																},
																"nativeSrc": "2407:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2407:15:2"
															},
															"nativeSrc": "2407:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2407:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2438:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2438:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2441:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2441:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2431:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:2"
																},
																"nativeSrc": "2431:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2431:15:2"
															},
															"nativeSrc": "2431:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2431:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2272:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2272:180:2"
											},
											{
												"body": {
													"nativeSrc": "2502:147:2",
													"nodeType": "YulBlock",
													"src": "2502:147:2",
													"statements": [
														{
															"nativeSrc": "2512:25:2",
															"nodeType": "YulAssignment",
															"src": "2512:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2535:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2535:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2517:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2517:17:2"
																},
																"nativeSrc": "2517:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2517:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2512:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2512:1:2"
																}
															]
														},
														{
															"nativeSrc": "2546:25:2",
															"nodeType": "YulAssignment",
															"src": "2546:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2569:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2569:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2551:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2551:17:2"
																},
																"nativeSrc": "2551:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2551:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2546:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2546:1:2"
																}
															]
														},
														{
															"nativeSrc": "2580:16:2",
															"nodeType": "YulAssignment",
															"src": "2580:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2591:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2591:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2594:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2594:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2587:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:2"
																},
																"nativeSrc": "2587:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2587:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2580:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2580:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2620:22:2",
																"nodeType": "YulBlock",
																"src": "2620:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2622:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2622:16:2"
																			},
																			"nativeSrc": "2622:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2622:18:2"
																		},
																		"nativeSrc": "2622:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2622:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2612:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2612:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2615:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2615:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2609:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2609:2:2"
																},
																"nativeSrc": "2609:10:2",
																"nodeType": "YulFunctionCall",
																"src": "2609:10:2"
															},
															"nativeSrc": "2606:36:2",
															"nodeType": "YulIf",
															"src": "2606:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2458:191:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2489:1:2",
														"nodeType": "YulTypedName",
														"src": "2489:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2492:1:2",
														"nodeType": "YulTypedName",
														"src": "2492:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2498:3:2",
														"nodeType": "YulTypedName",
														"src": "2498:3:2",
														"type": ""
													}
												],
												"src": "2458:191:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806346ea68721461004357806382afd23b1461005f578063cb4a620b1461008f575b5f80fd5b61005d60048036038101906100589190610227565b6100c0565b005b61007960048036038101906100749190610227565b610171565b604051610086919061026c565b60405180910390f35b6100a960048036038101906100a49190610227565b610191565b6040516100b79291906102d3565b60405180910390f35b6100c95f6101d0565b5f6100d35f6101e4565b905060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183426101089190610327565b81525060015f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b5f60015f8381526020019081526020015f20600101544211159050919050565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f80fd5b5f819050919050565b610206816101f4565b8114610210575f80fd5b50565b5f81359050610221816101fd565b92915050565b5f6020828403121561023c5761023b6101f0565b5b5f61024984828501610213565b91505092915050565b5f8115159050919050565b61026681610252565b82525050565b5f60208201905061027f5f83018461025d565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102ae82610285565b9050919050565b6102be816102a4565b82525050565b6102cd816101f4565b82525050565b5f6040820190506102e65f8301856102b5565b6102f360208301846102c4565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610331826101f4565b915061033c836101f4565b9250828201905080821115610354576103536102fa565b5b9291505056fea2646970667358221220c014d234de73b01932bc795673404edb60744992a4682675932e4cacaaf3e7db64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46EA6872 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0xCB4A620B EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH0 PUSH2 0x1D0 JUMP JUMPDEST PUSH0 PUSH2 0xD3 PUSH0 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x206 DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C JUMPI PUSH2 0x23B PUSH2 0x1F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249 DUP5 DUP3 DUP6 ADD PUSH2 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x266 DUP2 PUSH2 0x252 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F PUSH0 DUP4 ADD DUP5 PUSH2 0x25D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE DUP3 PUSH2 0x285 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE DUP2 PUSH2 0x2A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CD DUP2 PUSH2 0x1F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E6 PUSH0 DUP4 ADD DUP6 PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x2F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x331 DUP3 PUSH2 0x1F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C DUP4 PUSH2 0x1F4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0x2FA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 EQ 0xD2 CALLVALUE 0xDE PUSH20 0xB01932BC795673404EDB60744992A4682675932E 0x4C 0xAC 0xAA RETURN 0xE7 0xDB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "112:758:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;661:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;374:281;438:22;:10;:20;:22::i;:::-;470:13;486:20;:10;:18;:20::i;:::-;470:36;;540:108;;;;;;;;575:10;540:108;;;;;;627:10;609:15;:28;;;;:::i;:::-;540:108;;;516:14;:21;531:5;516:21;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:227;374:281;:::o;661:145::-;721:4;763:14;:27;778:11;763:27;;;;;;;;;;;:36;;;744:15;:55;;737:62;;661:145;;;:::o;312:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;945:123:0:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:126::-;1489:7;1529:42;1522:5;1518:54;1507:65;;1452:126;;;:::o;1584:96::-;1621:7;1650:24;1668:5;1650:24;:::i;:::-;1639:35;;1584:96;;;:::o;1686:118::-;1773:24;1791:5;1773:24;:::i;:::-;1768:3;1761:37;1686:118;;:::o;1810:::-;1897:24;1915:5;1897:24;:::i;:::-;1892:3;1885:37;1810:118;;:::o;1934:332::-;2055:4;2093:2;2082:9;2078:18;2070:26;;2106:71;2174:1;2163:9;2159:17;2150:6;2106:71;:::i;:::-;2187:72;2255:2;2244:9;2240:18;2231:6;2187:72;:::i;:::-;1934:332;;;;;:::o;2272:180::-;2320:77;2317:1;2310:88;2417:4;2414:1;2407:15;2441:4;2438:1;2431:15;2458:191;2498:3;2517:20;2535:1;2517:20;:::i;:::-;2512:25;;2551:20;2569:1;2551:20;:::i;:::-;2546:25;;2594:1;2591;2587:9;2580:16;;2615:3;2612:1;2609:10;2606:36;;;2622:18;;:::i;:::-;2606:36;2458:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "182400",
								"executionCost": "224",
								"totalCost": "182624"
							},
							"external": {
								"createEphemeral(uint256)": "infinite",
								"ephemeralSlots(uint256)": "infinite",
								"isActive(uint256)": "2789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 112,
									"end": 870,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 112,
									"end": 870,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c014d234de73b01932bc795673404edb60744992a4682675932e4cacaaf3e7db64736f6c634300081a0033",
									".code": [
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "46EA6872"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "82AFD23B"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "CB4A620B"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 112,
											"end": 870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 374,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 661,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 661,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 661,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 312,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 312,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 312,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 374,
											"end": 655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 438,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 438,
											"end": 460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 438,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 438,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 470,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 486,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 486,
											"end": 506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 486,
											"end": 506,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 486,
											"end": 506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 470,
											"end": 506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 470,
											"end": 506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 575,
											"end": 585,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 540,
											"end": 648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 609,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 609,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 540,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 428,
											"end": 655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 661,
											"end": 806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 789,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 763,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 763,
											"end": 790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 763,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 790,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 763,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 763,
											"end": 799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 744,
											"end": 759,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 744,
											"end": 799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 744,
											"end": 799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 737,
											"end": 799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 661,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 312,
											"end": 367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 312,
											"end": 367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1650,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1650,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1773,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1773,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1928,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1810,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1915,
											"end": 1920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1897,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1897,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1922,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2177,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2106,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2255,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2237,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2272,
											"end": 2452,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2272,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2421,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2438,
											"end": 2439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2649,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2458,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2517,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2517,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2551,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2571,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2580,
											"end": 2596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2622,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2622,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2649,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Counters.sol",
								"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createEphemeral(uint256)": "46ea6872",
							"ephemeralSlots(uint256)": "cb4a620b",
							"isActive(uint256)": "82afd23b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ttlSeconds\",\"type\":\"uint256\"}],\"name\":\"createEphemeral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ephemeralSlots\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expireAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ephemeralID\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":\"TimeBasedEphemeral\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol\":{\"keccak256\":\"0x76e51f64c271e4761c3164308a2a0156c6d505471defe5dda35a6a1ec6217ba3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bddc8ca23f02f564a4d8e71fd64571d2044b9a14ff739e84074cf24b0e71932f\",\"dweb:/ipfs/QmPDq9KZpcktXZAWEJvLtZVXcJ9eS8hm4TXjzFButnUvJb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol:TimeBasedEphemeral",
								"label": "_idCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Counter)5_storage"
							},
							{
								"astId": 93,
								"contract": "E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol:TimeBasedEphemeral",
								"label": "ephemeralSlots",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(EphemeralData)88_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(EphemeralData)88_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct TimeBasedEphemeral.EphemeralData)",
								"numberOfBytes": "32",
								"value": "t_struct(EphemeralData)88_storage"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol:TimeBasedEphemeral",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(EphemeralData)88_storage": {
								"encoding": "inplace",
								"label": "struct TimeBasedEphemeral.EphemeralData",
								"members": [
									{
										"astId": 85,
										"contract": "E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol:TimeBasedEphemeral",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 87,
										"contract": "E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol:TimeBasedEphemeral",
										"label": "expireAt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "432:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "786:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "447:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "901:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "918:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "911:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "844:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"844:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "844:7:0"
													},
													"referencedDeclaration": 5,
													"src": "844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:0"
									},
									"scope": 73,
									"src": "827:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "998:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1032:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1032:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "964:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"964:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "964:7:0"
													},
													"referencedDeclaration": 5,
													"src": "964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:0"
									},
									"scope": 73,
									"src": "945:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1127:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1137:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1153:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1185:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1260:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1260:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1277:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1093:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nameLocations": [
															"1093:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1093:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:0"
									},
									"scope": 73,
									"src": "1074:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1358:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:0",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1368:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1324:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nameLocations": [
															"1324:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1324:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:0"
									},
									"scope": 73,
									"src": "1309:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 74,
							"src": "424:971:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:0"
				},
				"id": 0
			},
			"E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol": {
				"ast": {
					"absolutePath": "E/Ephemeral Port/Time-Based Expiry for Ephemeral ID.sol",
					"exportedSymbols": {
						"Counters": [
							73
						],
						"TimeBasedEphemeral": [
							140
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 75,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 76,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 74,
							"src": "58:52:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TimeBasedEphemeral",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "TimeBasedEphemeral",
							"nameLocation": "121:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 80,
									"libraryName": {
										"id": 77,
										"name": "Counters",
										"nameLocations": [
											"152:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "152:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "146:36:1",
									"typeName": {
										"id": 79,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 78,
											"name": "Counters.Counter",
											"nameLocations": [
												"165:8:1",
												"174:7:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "165:16:1"
										},
										"referencedDeclaration": 5,
										"src": "165:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "_idCounter",
									"nameLocation": "212:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "187:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "Counters.Counter",
											"nameLocations": [
												"187:8:1",
												"196:7:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "187:16:1"
										},
										"referencedDeclaration": 5,
										"src": "187:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "TimeBasedEphemeral.EphemeralData",
									"id": 88,
									"members": [
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "268:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "260:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 84,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "260:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "expireAt",
											"nameLocation": "291:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 88,
											"src": "283:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 86,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EphemeralData",
									"nameLocation": "236:13:1",
									"nodeType": "StructDefinition",
									"scope": 140,
									"src": "229:77:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb4a620b",
									"id": 93,
									"mutability": "mutable",
									"name": "ephemeralSlots",
									"nameLocation": "353:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "312:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EphemeralData_$88_storage_$",
										"typeString": "mapping(uint256 => struct TimeBasedEphemeral.EphemeralData)"
									},
									"typeName": {
										"id": 92,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 89,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "312:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EphemeralData_$88_storage_$",
											"typeString": "mapping(uint256 => struct TimeBasedEphemeral.EphemeralData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 91,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 90,
												"name": "EphemeralData",
												"nameLocations": [
													"331:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "331:13:1"
											},
											"referencedDeclaration": 88,
											"src": "331:13:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EphemeralData_$88_storage_ptr",
												"typeString": "struct TimeBasedEphemeral.EphemeralData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "428:227:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 98,
															"name": "_idCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "438:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "449:9:1",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "438:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "438:22:1"
											},
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "newID",
														"nameLocation": "478:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "470:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "470:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 105,
															"name": "_idCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "486:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "497:7:1",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "486:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "470:36:1"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 109,
															"name": "ephemeralSlots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "516:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EphemeralData_$88_storage_$",
																"typeString": "mapping(uint256 => struct TimeBasedEphemeral.EphemeralData storage ref)"
															}
														},
														"id": 111,
														"indexExpression": {
															"id": 110,
															"name": "newID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "531:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "516:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EphemeralData_$88_storage",
															"typeString": "struct TimeBasedEphemeral.EphemeralData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 113,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "575:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "579:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "575:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 115,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "609:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "615:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "609:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 117,
																	"name": "ttlSeconds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "627:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "609:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 112,
															"name": "EphemeralData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "540:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_EphemeralData_$88_storage_ptr_$",
																"typeString": "type(struct TimeBasedEphemeral.EphemeralData storage pointer)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"568:5:1",
															"599:8:1"
														],
														"names": [
															"owner",
															"expireAt"
														],
														"nodeType": "FunctionCall",
														"src": "540:108:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EphemeralData_$88_memory_ptr",
															"typeString": "struct TimeBasedEphemeral.EphemeralData memory"
														}
													},
													"src": "516:132:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EphemeralData_$88_storage",
														"typeString": "struct TimeBasedEphemeral.EphemeralData storage ref"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "516:132:1"
											}
										]
									},
									"functionSelector": "46ea6872",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createEphemeral",
									"nameLocation": "383:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "ttlSeconds",
												"nameLocation": "407:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "399:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:20:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:0:1"
									},
									"scope": 140,
									"src": "374:281:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "727:79:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 130,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "744:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "750:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "744:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 132,
																"name": "ephemeralSlots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "763:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EphemeralData_$88_storage_$",
																	"typeString": "mapping(uint256 => struct TimeBasedEphemeral.EphemeralData storage ref)"
																}
															},
															"id": 134,
															"indexExpression": {
																"id": 133,
																"name": "ephemeralID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "778:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "763:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EphemeralData_$88_storage",
																"typeString": "struct TimeBasedEphemeral.EphemeralData storage ref"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "791:8:1",
														"memberName": "expireAt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "763:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "744:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 129,
												"id": 137,
												"nodeType": "Return",
												"src": "737:62:1"
											}
										]
									},
									"functionSelector": "82afd23b",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isActive",
									"nameLocation": "670:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "ephemeralID",
												"nameLocation": "687:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "679:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:21:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "721:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:6:1"
									},
									"scope": 140,
									"src": "661:145:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 141,
							"src": "112:758:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:839:1"
				},
				"id": 1
			}
		}
	}
}