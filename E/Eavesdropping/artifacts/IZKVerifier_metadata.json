{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "verifyProof",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Other approach: A stub showing how a ZK-based approach might let you do an action  (like deposit) without revealing the actual data in the mempool.  Typically used in L2 or special bridging solutions.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/Eavesdropping/ZKMempoolObfuscation.sol": "IZKVerifier"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"E/Eavesdropping/ZKMempoolObfuscation.sol": {
			"keccak256": "0x467367c57763130d5ed74e17a9ff3aa8c8f5949f06b505fd7a93af71ec539ca6",
			"license": "MIT",
			"urls": [
				"bzz-raw://7bcd1cf2fed95ba3df874251d6eb3ebbace5110c2cc0290e849fef50f1a035d7",
				"dweb:/ipfs/QmaK1oe7cW8E2bf3EwURympbaDcaJafcf2nQwFvQgXu3eW"
			]
		}
	},
	"version": 1
}