{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "proof",
						"type": "bytes"
					}
				],
				"name": "verifyProof",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Another approach: Move the sensitive logic off-chain in an encrypted context  or a ZK proof, so on-chain code does minimal, uniform steps => no side channel.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"E/Emanations Analysis/EncryptedComputationStub.sol": "EncryptedComputationStub"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"E/Emanations Analysis/EncryptedComputationStub.sol": {
			"keccak256": "0x53cb171a964f9682bd5c9405d75121a6bdba09f2f30aae8af66d90e3ce18bbc1",
			"license": "MIT",
			"urls": [
				"bzz-raw://0f73ec8d97a9eeece9ef8864731c6279562c9d05c99f290b5920a8925a1bd4d7",
				"dweb:/ipfs/QmaG4Mo5ucYvVTecWZAkAEXCzhM2zpbEsxxqWbeeYAGxad"
			]
		}
	},
	"version": 1
}