{
	"id": "08286d710f1b4e45f77a4cd8e48bfe4b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol": {
				"content": "pragma solidity ^0.8.21;\n\ncontract GasExhaustionAttack {\n    function interruptExecution(address victim) external {\n        for (uint256 i = 0; i < type(uint256).max; i++) {\n            (bool success,) = victim.call{gas: gasleft()}(\"\");\n            if (!success) break;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol": {
				"GasExhaustionAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "victim",
									"type": "address"
								}
							],
							"name": "interruptExecution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":26:287  contract GasExhaustionAttack {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":26:287  contract GasExhaustionAttack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c1b0581\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":61:285  function interruptExecution(address victim) external {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":129:138  uint256 i */\n      0x00\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":124:279  for (uint256 i = 0; i < type(uint256).max; i++) {... */\n    tag_9:\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":148:165  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":144:145  i */\n      dup2\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":144:165  i < type(uint256).max */\n      lt\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":124:279  for (uint256 i = 0; i < type(uint256).max; i++) {... */\n      iszero\n      tag_10\n      jumpi\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":187:199  bool success */\n      0x00\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":204:210  victim */\n      dup3\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":204:215  victim.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":221:230  gasleft() */\n      gas\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":204:235  victim.call{gas: gasleft()}(\"\") */\n      mload(0x40)\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup8\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_16\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_15)\n    tag_16:\n      0x60\n      swap2\n      pop\n    tag_15:\n      pop\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":186:235  (bool success,) = victim.call{gas: gasleft()}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":254:261  success */\n      dup1\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":249:268  if (!success) break */\n      tag_17\n      jumpi\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":263:268  break */\n      pop\n      jump(tag_10)\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":249:268  if (!success) break */\n    tag_17:\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":172:279  {... */\n      pop\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":167:170  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":124:279  for (uint256 i = 0; i < type(uint256).max; i++) {... */\n      jump(tag_9)\n    tag_10:\n      pop\n        /* \"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":61:285  function interruptExecution(address victim) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_19:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_21:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_22:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_34\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_21\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_23:\n        /* \"#utility.yul\":641:665   */\n      tag_36\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_37:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_24:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_39\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_23\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_6:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_42\n      tag_19\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":917:1036   */\n    tag_41:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_43\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_24\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1323   */\n    tag_25:\n        /* \"#utility.yul\":1277:1288   */\n      0x00\n        /* \"#utility.yul\":1314:1317   */\n      dup2\n        /* \"#utility.yul\":1299:1317   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1329:1443   */\n    tag_26:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1847   */\n    tag_27:\n        /* \"#utility.yul\":1608:1611   */\n      0x00\n        /* \"#utility.yul\":1629:1712   */\n      tag_47\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1705:1708   */\n      dup4\n        /* \"#utility.yul\":1629:1712   */\n      tag_25\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1622:1712   */\n      swap2\n      pop\n        /* \"#utility.yul\":1721:1814   */\n      tag_48\n        /* \"#utility.yul\":1810:1813   */\n      dup3\n        /* \"#utility.yul\":1721:1814   */\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1834:1837   */\n      dup3\n        /* \"#utility.yul\":1830:1841   */\n      add\n        /* \"#utility.yul\":1823:1841   */\n      swap1\n      pop\n        /* \"#utility.yul\":1449:1847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1853:2232   */\n    tag_13:\n        /* \"#utility.yul\":2037:2040   */\n      0x00\n        /* \"#utility.yul\":2059:2206   */\n      tag_50\n        /* \"#utility.yul\":2202:2205   */\n      dup3\n        /* \"#utility.yul\":2059:2206   */\n      tag_27\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2052:2206   */\n      swap2\n      pop\n        /* \"#utility.yul\":2223:2226   */\n      dup2\n        /* \"#utility.yul\":2216:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":1853:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122052b85ee7ddf72aba48ef0290871b23eee9666df79ce90458fdc49576fa2dda7c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101f88061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80636c1b05811461002d575b5f80fd5b61004760048036038101906100429190610156565b610049565b005b5f5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156100f4575f8273ffffffffffffffffffffffffffffffffffffffff165a604051610098906101ae565b5f604051808303815f8787f1925050503d805f81146100d2576040519150601f19603f3d011682016040523d82523d5f602084013e6100d7565b606091505b50509050806100e657506100f4565b50808060010191505061004b565b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610125826100fc565b9050919050565b6101358161011b565b811461013f575f80fd5b50565b5f813590506101508161012c565b92915050565b5f6020828403121561016b5761016a6100f8565b5b5f61017884828501610142565b91505092915050565b5f81905092915050565b50565b5f6101995f83610181565b91506101a48261018b565b5f82019050919050565b5f6101b88261018e565b915081905091905056fea264697066735822122052b85ee7ddf72aba48ef0290871b23eee9666df79ce90458fdc49576fa2dda7c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C1B0581 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x156 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF4 JUMPI PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS PUSH1 0x40 MLOAD PUSH2 0x98 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE6 JUMPI POP PUSH2 0xF4 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125 DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150 DUP2 PUSH2 0x12C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B JUMPI PUSH2 0x16A PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x199 PUSH0 DUP4 PUSH2 0x181 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4 DUP3 PUSH2 0x18B JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xB8 MCOPY 0xE7 0xDD 0xF7 0x2A 0xBA BASEFEE 0xEF MUL SWAP1 DUP8 SHL 0x23 0xEE 0xE9 PUSH7 0x6DF79CE90458FD 0xC4 SWAP6 PUSH23 0xFA2DDA7C64736F6C634300081A00330000000000000000 ",
							"sourceMap": "26:261:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@interruptExecution_37": {
									"entryPoint": 73,
									"id": 37,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2235:1",
										"nodeType": "YulBlock",
										"src": "0:2235:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1289:34:1",
													"nodeType": "YulBlock",
													"src": "1289:34:1",
													"statements": [
														{
															"nativeSrc": "1299:18:1",
															"nodeType": "YulAssignment",
															"src": "1299:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1314:3:1",
																"nodeType": "YulIdentifier",
																"src": "1314:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1299:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1299:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1176:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1261:3:1",
														"nodeType": "YulTypedName",
														"src": "1261:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1266:6:1",
														"nodeType": "YulTypedName",
														"src": "1266:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1277:11:1",
														"nodeType": "YulTypedName",
														"src": "1277:11:1",
														"type": ""
													}
												],
												"src": "1176:147:1"
											},
											{
												"body": {
													"nativeSrc": "1435:8:1",
													"nodeType": "YulBlock",
													"src": "1435:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "1329:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1427:6:1",
														"nodeType": "YulTypedName",
														"src": "1427:6:1",
														"type": ""
													}
												],
												"src": "1329:114:1"
											},
											{
												"body": {
													"nativeSrc": "1612:235:1",
													"nodeType": "YulBlock",
													"src": "1612:235:1",
													"statements": [
														{
															"nativeSrc": "1622:90:1",
															"nodeType": "YulAssignment",
															"src": "1622:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1705:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1705:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1710:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1629:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "1629:75:1"
																},
																"nativeSrc": "1629:83:1",
																"nodeType": "YulFunctionCall",
																"src": "1629:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1622:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1810:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1810:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "1721:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1721:88:1"
																},
																"nativeSrc": "1721:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1721:93:1"
															},
															"nativeSrc": "1721:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1721:93:1"
														},
														{
															"nativeSrc": "1823:18:1",
															"nodeType": "YulAssignment",
															"src": "1823:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1834:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1834:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1839:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1839:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1830:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:1"
																},
																"nativeSrc": "1830:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1830:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1823:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1449:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1600:3:1",
														"nodeType": "YulTypedName",
														"src": "1600:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1608:3:1",
														"nodeType": "YulTypedName",
														"src": "1608:3:1",
														"type": ""
													}
												],
												"src": "1449:398:1"
											},
											{
												"body": {
													"nativeSrc": "2041:191:1",
													"nodeType": "YulBlock",
													"src": "2041:191:1",
													"statements": [
														{
															"nativeSrc": "2052:154:1",
															"nodeType": "YulAssignment",
															"src": "2052:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2202:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2059:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "2059:141:1"
																},
																"nativeSrc": "2059:147:1",
																"nodeType": "YulFunctionCall",
																"src": "2059:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2052:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2052:3:1"
																}
															]
														},
														{
															"nativeSrc": "2216:10:1",
															"nodeType": "YulAssignment",
															"src": "2216:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "2223:3:1",
																"nodeType": "YulIdentifier",
																"src": "2223:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1853:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2028:3:1",
														"nodeType": "YulTypedName",
														"src": "2028:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2037:3:1",
														"nodeType": "YulTypedName",
														"src": "2037:3:1",
														"type": ""
													}
												],
												"src": "1853:379:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c80636c1b05811461002d575b5f80fd5b61004760048036038101906100429190610156565b610049565b005b5f5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156100f4575f8273ffffffffffffffffffffffffffffffffffffffff165a604051610098906101ae565b5f604051808303815f8787f1925050503d805f81146100d2576040519150601f19603f3d011682016040523d82523d5f602084013e6100d7565b606091505b50509050806100e657506100f4565b50808060010191505061004b565b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610125826100fc565b9050919050565b6101358161011b565b811461013f575f80fd5b50565b5f813590506101508161012c565b92915050565b5f6020828403121561016b5761016a6100f8565b5b5f61017884828501610142565b91505092915050565b5f81905092915050565b50565b5f6101995f83610181565b91506101a48261018b565b5f82019050919050565b5f6101b88261018e565b915081905091905056fea264697066735822122052b85ee7ddf72aba48ef0290871b23eee9666df79ce90458fdc49576fa2dda7c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C1B0581 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x156 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF4 JUMPI PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GAS PUSH1 0x40 MLOAD PUSH2 0x98 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE6 JUMPI POP PUSH2 0xF4 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x125 DUP3 PUSH2 0xFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150 DUP2 PUSH2 0x12C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B JUMPI PUSH2 0x16A PUSH2 0xF8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x199 PUSH0 DUP4 PUSH2 0x181 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4 DUP3 PUSH2 0x18B JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8 DUP3 PUSH2 0x18E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xB8 MCOPY 0xE7 0xDD 0xF7 0x2A 0xBA BASEFEE 0xEF MUL SWAP1 DUP8 SHL 0x23 0xEE 0xE9 PUSH7 0x6DF79CE90458FD 0xC4 SWAP6 PUSH23 0xFA2DDA7C64736F6C634300081A00330000000000000000 ",
							"sourceMap": "26:261:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;129:9;124:155;148:17;144:1;:21;124:155;;;187:12;204:6;:11;;221:9;204:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:49;;;254:7;249:19;;263:5;;;249:19;172:107;167:3;;;;;;;124:155;;;;61:224;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:147::-;1277:11;1314:3;1299:18;;1176:147;;;;:::o;1329:114::-;;:::o;1449:398::-;1608:3;1629:83;1710:1;1705:3;1629:83;:::i;:::-;1622:90;;1721:93;1810:3;1721:93;:::i;:::-;1839:1;1834:3;1830:11;1823:18;;1449:398;;;:::o;1853:379::-;2037:3;2059:147;2202:3;2059:147;:::i;:::-;2052:154;;2223:3;2216:10;;1853:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "100800",
								"executionCost": "145",
								"totalCost": "100945"
							},
							"external": {
								"interruptExecution(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 287,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052b85ee7ddf72aba48ef0290871b23eee9666df79ce90458fdc49576fa2dda7c64736f6c634300081a0033",
									".code": [
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "6C1B0581"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 144,
											"end": 145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 144,
											"end": 165,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 124,
											"end": 279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 124,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 204,
											"end": 215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 204,
											"end": 215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 221,
											"end": 230,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 204,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 204,
											"end": 235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 204,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 254,
											"end": 261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 249,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 263,
											"end": 268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 268,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 249,
											"end": 268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 172,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 279,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1323,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1176,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1443,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1329,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1449,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1708,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1629,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1712,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1629,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1810,
											"end": 1813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1721,
											"end": 1814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1721,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1853,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2202,
											"end": 2205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2059,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2059,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"interruptExecution(address)": "6c1b0581"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"victim\",\"type\":\"address\"}],\"name\":\"interruptExecution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":\"GasExhaustionAttack\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\":{\"keccak256\":\"0xb46d697305d99caa048840e6dacc145c4ad462dbd7174950eed0b98c8b44e5e4\",\"urls\":[\"bzz-raw://44d957209e8407732602d9659243d1a76a042122740cd71c16095ac8c1950e3f\",\"dweb:/ipfs/QmeYpxYbguGhk1XRkWw62kMR4yku9EtPPYaGihNzEfK3xH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol": {
				"ast": {
					"absolutePath": "I/Interrupt/Dynamic & Optimized Solidity Example (Attack Scenario).sol",
					"exportedSymbols": {
						"GasExhaustionAttack": [
							38
						]
					},
					"id": 39,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GasExhaustionAttack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "GasExhaustionAttack",
							"nameLocation": "35:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "114:171:0",
										"statements": [
											{
												"body": {
													"id": 34,
													"nodeType": "Block",
													"src": "172:107:0",
													"statements": [
														{
															"assignments": [
																21,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 21,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "192:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 34,
																	"src": "187:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 20,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "187:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 29,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "232:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"id": 22,
																			"name": "victim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "204:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "211:4:0",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "204:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"gas"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 24,
																				"name": "gasleft",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967289,
																				"src": "221:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 25,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "221:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "204:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "204:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "186:49:0"
														},
														{
															"condition": {
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "253:8:0",
																"subExpression": {
																	"id": 30,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "254:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 33,
															"nodeType": "IfStatement",
															"src": "249:19:0",
															"trueBody": {
																"id": 32,
																"nodeType": "Break",
																"src": "263:5:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "144:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 13,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "153:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 12,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "153:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 11,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "148:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "148:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "162:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "148:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "144:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"initializationExpression": {
													"assignments": [
														7
													],
													"declarations": [
														{
															"constant": false,
															"id": 7,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "137:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 35,
															"src": "129:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 6,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "129:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 9,
													"initialValue": {
														"hexValue": "30",
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "141:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "129:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "167:3:0",
														"subExpression": {
															"id": 17,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 19,
													"nodeType": "ExpressionStatement",
													"src": "167:3:0"
												},
												"nodeType": "ForStatement",
												"src": "124:155:0"
											}
										]
									},
									"functionSelector": "6c1b0581",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "interruptExecution",
									"nameLocation": "70:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "victim",
												"nameLocation": "97:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "89:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "89:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "88:16:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:0:0"
									},
									"scope": 38,
									"src": "61:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 39,
							"src": "26:261:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:288:0"
				},
				"id": 0
			}
		}
	}
}