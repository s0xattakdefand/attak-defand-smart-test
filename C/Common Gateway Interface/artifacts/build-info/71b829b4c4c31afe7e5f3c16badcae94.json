{
	"id": "71b829b4c4c31afe7e5f3c16badcae94",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * A safer gateway:\n * - validates input length\n * - optional role-based or signature-based checks\n * - sanitized storage or limited calls\n */\ncontract SecureGateway is Ownable {\n    event GatewayProcess(address indexed caller, string request, string response);\n\n    uint256 public maxLength = 100; // limit input size\n\n    constructor(address initialOwner) Ownable(initialOwner) {\n        // Optionally set a custom length or other initialization\n    }\n\n    function setMaxLength(uint256 len) external onlyOwner {\n        maxLength = len;\n    }\n\n    function gatewayProcess(string calldata input) external returns (string memory) {\n        require(bytes(input).length <= maxLength, \"Input too large\");\n        // minimal transform\n        string memory output = string(abi.encodePacked(\"Processed: \", input));\n\n        // Log it\n        emit GatewayProcess(msg.sender, input, output);\n\n        return output;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol": {
				"SecureGateway": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "request",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "response",
									"type": "string"
								}
							],
							"name": "GatewayProcess",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "input",
									"type": "string"
								}
							],
							"name": "gatewayProcess",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								}
							],
							"name": "setMaxLength",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":259:1033  contract SecureGateway is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":410:413  100 */\n  0x64\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":383:413  uint256 public maxLength = 100 */\n  0x01\n  sstore\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":440:569  constructor(address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":482:494  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":440:569  constructor(address initialOwner) Ownable(initialOwner) {... */\n  pop\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":259:1033  contract SecureGateway is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":259:1033  contract SecureGateway is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":259:1033  contract SecureGateway is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f493a87\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd06a89a4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdc2f7867\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":667:1031  function gatewayProcess(string calldata input) external returns (string memory) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":383:413  uint256 public maxLength = 100 */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":575:661  function setMaxLength(uint256 len) external onlyOwner {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":667:1031  function gatewayProcess(string calldata input) external returns (string memory) {... */\n    tag_12:\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":732:745  string memory */\n      0x60\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":788:797  maxLength */\n      sload(0x01)\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":771:776  input */\n      dup4\n      dup4\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":765:784  bytes(input).length */\n      swap1\n      pop\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":765:797  bytes(input).length <= maxLength */\n      gt\n      iszero\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":757:817  require(bytes(input).length <= maxLength, \"Input too large\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":856:876  string memory output */\n      0x00\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":918:923  input */\n      dup4\n      dup4\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":886:924  abi.encodePacked(\"Processed: \", input) */\n      add(0x20, mload(0x40))\n      tag_37\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":856:925  string memory output = string(abi.encodePacked(\"Processed: \", input)) */\n      swap1\n      pop\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":974:984  msg.sender */\n      caller\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":959:1000  GatewayProcess(msg.sender, input, output) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc436644274e16b096d0d0df2fbda7162116c56a836b64d4f2a9d52fb86d77426\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":986:991  input */\n      dup6\n      dup6\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":993:999  output */\n      dup5\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":959:1000  GatewayProcess(msg.sender, input, output) */\n      mload(0x40)\n      tag_39\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":1018:1024  output */\n      dup1\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":1011:1024  return output */\n      swap2\n      pop\n      pop\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":667:1031  function gatewayProcess(string calldata input) external returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":383:413  uint256 public maxLength = 100 */\n    tag_22:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":575:661  function setMaxLength(uint256 len) external onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_49:\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":651:654  len */\n      dup1\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":639:648  maxLength */\n      0x01\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":639:654  maxLength = len */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/Common Gateway Interface/Secured \\xe2\\x80\\x9cCGI-like\\xe2\\x80\\x9d On-Chain Gateway defense.sol\":575:661  function setMaxLength(uint256 len) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_61\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_67:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_68:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_69:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_70:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_71:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":717:1270   */\n    tag_72:\n        /* \"#utility.yul\":775:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      dup1\n        /* \"#utility.yul\":835:838   */\n      dup4\n        /* \"#utility.yul\":828:832   */\n      0x1f\n        /* \"#utility.yul\":820:826   */\n      dup5\n        /* \"#utility.yul\":816:833   */\n      add\n        /* \"#utility.yul\":812:839   */\n      slt\n        /* \"#utility.yul\":802:924   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":843:922   */\n      tag_104\n      tag_69\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":802:924   */\n    tag_103:\n        /* \"#utility.yul\":956:962   */\n      dup3\n        /* \"#utility.yul\":943:963   */\n      calldataload\n        /* \"#utility.yul\":933:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":978:984   */\n      dup2\n        /* \"#utility.yul\":975:1005   */\n      gt\n        /* \"#utility.yul\":972:1089   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1008:1087   */\n      tag_106\n      tag_70\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":972:1089   */\n    tag_105:\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup4\n        /* \"#utility.yul\":1110:1127   */\n      add\n        /* \"#utility.yul\":1098:1127   */\n      swap2\n      pop\n        /* \"#utility.yul\":1176:1179   */\n      dup4\n        /* \"#utility.yul\":1168:1172   */\n      0x01\n        /* \"#utility.yul\":1160:1166   */\n      dup3\n        /* \"#utility.yul\":1156:1173   */\n      mul\n        /* \"#utility.yul\":1146:1154   */\n      dup4\n        /* \"#utility.yul\":1142:1174   */\n      add\n        /* \"#utility.yul\":1139:1180   */\n      gt\n        /* \"#utility.yul\":1136:1264   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":1183:1262   */\n      tag_108\n      tag_71\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1136:1264   */\n    tag_107:\n        /* \"#utility.yul\":717:1270   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1805   */\n    tag_11:\n        /* \"#utility.yul\":1347:1353   */\n      0x00\n        /* \"#utility.yul\":1355:1361   */\n      dup1\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1392:1401   */\n      dup4\n        /* \"#utility.yul\":1383:1390   */\n      dup6\n        /* \"#utility.yul\":1379:1402   */\n      sub\n        /* \"#utility.yul\":1375:1407   */\n      slt\n        /* \"#utility.yul\":1372:1491   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1410:1489   */\n      tag_111\n      tag_67\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1372:1491   */\n    tag_110:\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1547:1556   */\n      dup4\n        /* \"#utility.yul\":1543:1560   */\n      add\n        /* \"#utility.yul\":1530:1561   */\n      calldataload\n        /* \"#utility.yul\":1588:1606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1580:1586   */\n      dup2\n        /* \"#utility.yul\":1577:1607   */\n      gt\n        /* \"#utility.yul\":1574:1691   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":1610:1689   */\n      tag_113\n      tag_68\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1574:1691   */\n    tag_112:\n        /* \"#utility.yul\":1723:1788   */\n      tag_114\n        /* \"#utility.yul\":1780:1787   */\n      dup6\n        /* \"#utility.yul\":1771:1777   */\n      dup3\n        /* \"#utility.yul\":1760:1769   */\n      dup7\n        /* \"#utility.yul\":1756:1778   */\n      add\n        /* \"#utility.yul\":1723:1788   */\n      tag_72\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1705:1788   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1501:1798   */\n      pop\n        /* \"#utility.yul\":1276:1805   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:1910   */\n    tag_73:\n        /* \"#utility.yul\":1863:1869   */\n      0x00\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1891:1903   */\n      mload\n        /* \"#utility.yul\":1881:1903   */\n      swap1\n      pop\n        /* \"#utility.yul\":1811:1910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1916:2085   */\n    tag_74:\n        /* \"#utility.yul\":2000:2011   */\n      0x00\n        /* \"#utility.yul\":2034:2040   */\n      dup3\n        /* \"#utility.yul\":2029:2032   */\n      dup3\n        /* \"#utility.yul\":2022:2041   */\n      mstore\n        /* \"#utility.yul\":2074:2078   */\n      0x20\n        /* \"#utility.yul\":2069:2072   */\n      dup3\n        /* \"#utility.yul\":2065:2079   */\n      add\n        /* \"#utility.yul\":2050:2079   */\n      swap1\n      pop\n        /* \"#utility.yul\":1916:2085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_75:\n        /* \"#utility.yul\":2180:2186   */\n      dup3\n        /* \"#utility.yul\":2175:2178   */\n      dup2\n        /* \"#utility.yul\":2170:2173   */\n      dup4\n        /* \"#utility.yul\":2164:2187   */\n      mcopy\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2212:2218   */\n      dup4\n        /* \"#utility.yul\":2207:2210   */\n      dup4\n        /* \"#utility.yul\":2203:2219   */\n      add\n        /* \"#utility.yul\":2196:2223   */\n      mstore\n        /* \"#utility.yul\":2091:2230   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2338   */\n    tag_76:\n        /* \"#utility.yul\":2277:2283   */\n      0x00\n        /* \"#utility.yul\":2328:2330   */\n      0x1f\n        /* \"#utility.yul\":2324:2331   */\n      not\n        /* \"#utility.yul\":2319:2321   */\n      0x1f\n        /* \"#utility.yul\":2312:2317   */\n      dup4\n        /* \"#utility.yul\":2308:2322   */\n      add\n        /* \"#utility.yul\":2304:2332   */\n      and\n        /* \"#utility.yul\":2294:2332   */\n      swap1\n      pop\n        /* \"#utility.yul\":2236:2338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2344:2721   */\n    tag_77:\n        /* \"#utility.yul\":2432:2435   */\n      0x00\n        /* \"#utility.yul\":2460:2499   */\n      tag_120\n        /* \"#utility.yul\":2493:2498   */\n      dup3\n        /* \"#utility.yul\":2460:2499   */\n      tag_73\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2515:2586   */\n      tag_121\n        /* \"#utility.yul\":2579:2585   */\n      dup2\n        /* \"#utility.yul\":2574:2577   */\n      dup6\n        /* \"#utility.yul\":2515:2586   */\n      tag_74\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2508:2586   */\n      swap4\n      pop\n        /* \"#utility.yul\":2595:2660   */\n      tag_122\n        /* \"#utility.yul\":2653:2659   */\n      dup2\n        /* \"#utility.yul\":2648:2651   */\n      dup6\n        /* \"#utility.yul\":2641:2645   */\n      0x20\n        /* \"#utility.yul\":2634:2639   */\n      dup7\n        /* \"#utility.yul\":2630:2646   */\n      add\n        /* \"#utility.yul\":2595:2660   */\n      tag_75\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2685:2714   */\n      tag_123\n        /* \"#utility.yul\":2707:2713   */\n      dup2\n        /* \"#utility.yul\":2685:2714   */\n      tag_76\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2680:2683   */\n      dup5\n        /* \"#utility.yul\":2676:2715   */\n      add\n        /* \"#utility.yul\":2669:2715   */\n      swap2\n      pop\n        /* \"#utility.yul\":2436:2721   */\n      pop\n        /* \"#utility.yul\":2344:2721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:3040   */\n    tag_14:\n        /* \"#utility.yul\":2840:2844   */\n      0x00\n        /* \"#utility.yul\":2878:2880   */\n      0x20\n        /* \"#utility.yul\":2867:2876   */\n      dup3\n        /* \"#utility.yul\":2863:2881   */\n      add\n        /* \"#utility.yul\":2855:2881   */\n      swap1\n      pop\n        /* \"#utility.yul\":2927:2936   */\n      dup2\n        /* \"#utility.yul\":2921:2925   */\n      dup2\n        /* \"#utility.yul\":2917:2937   */\n      sub\n        /* \"#utility.yul\":2913:2914   */\n      0x00\n        /* \"#utility.yul\":2902:2911   */\n      dup4\n        /* \"#utility.yul\":2898:2915   */\n      add\n        /* \"#utility.yul\":2891:2938   */\n      mstore\n        /* \"#utility.yul\":2955:3033   */\n      tag_125\n        /* \"#utility.yul\":3028:3032   */\n      dup2\n        /* \"#utility.yul\":3019:3025   */\n      dup5\n        /* \"#utility.yul\":2955:3033   */\n      tag_77\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2947:3033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2727:3040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3172   */\n    tag_78:\n        /* \"#utility.yul\":3083:3090   */\n      0x00\n        /* \"#utility.yul\":3123:3165   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3116:3121   */\n      dup3\n        /* \"#utility.yul\":3112:3166   */\n      and\n        /* \"#utility.yul\":3101:3166   */\n      swap1\n      pop\n        /* \"#utility.yul\":3046:3172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3274   */\n    tag_79:\n        /* \"#utility.yul\":3215:3222   */\n      0x00\n        /* \"#utility.yul\":3244:3268   */\n      tag_128\n        /* \"#utility.yul\":3262:3267   */\n      dup3\n        /* \"#utility.yul\":3244:3268   */\n      tag_78\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3233:3268   */\n      swap1\n      pop\n        /* \"#utility.yul\":3178:3274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3280:3398   */\n    tag_80:\n        /* \"#utility.yul\":3367:3391   */\n      tag_130\n        /* \"#utility.yul\":3385:3390   */\n      dup2\n        /* \"#utility.yul\":3367:3391   */\n      tag_79\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3362:3365   */\n      dup3\n        /* \"#utility.yul\":3355:3392   */\n      mstore\n        /* \"#utility.yul\":3280:3398   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3404:3626   */\n    tag_20:\n        /* \"#utility.yul\":3497:3501   */\n      0x00\n        /* \"#utility.yul\":3535:3537   */\n      0x20\n        /* \"#utility.yul\":3524:3533   */\n      dup3\n        /* \"#utility.yul\":3520:3538   */\n      add\n        /* \"#utility.yul\":3512:3538   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3619   */\n      tag_132\n        /* \"#utility.yul\":3616:3617   */\n      0x00\n        /* \"#utility.yul\":3605:3614   */\n      dup4\n        /* \"#utility.yul\":3601:3618   */\n      add\n        /* \"#utility.yul\":3592:3598   */\n      dup5\n        /* \"#utility.yul\":3548:3619   */\n      tag_80\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3404:3626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3632:3709   */\n    tag_81:\n        /* \"#utility.yul\":3669:3676   */\n      0x00\n        /* \"#utility.yul\":3698:3703   */\n      dup2\n        /* \"#utility.yul\":3687:3703   */\n      swap1\n      pop\n        /* \"#utility.yul\":3632:3709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3715:3833   */\n    tag_82:\n        /* \"#utility.yul\":3802:3826   */\n      tag_135\n        /* \"#utility.yul\":3820:3825   */\n      dup2\n        /* \"#utility.yul\":3802:3826   */\n      tag_81\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3797:3800   */\n      dup3\n        /* \"#utility.yul\":3790:3827   */\n      mstore\n        /* \"#utility.yul\":3715:3833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3839:4061   */\n    tag_24:\n        /* \"#utility.yul\":3932:3936   */\n      0x00\n        /* \"#utility.yul\":3970:3972   */\n      0x20\n        /* \"#utility.yul\":3959:3968   */\n      dup3\n        /* \"#utility.yul\":3955:3973   */\n      add\n        /* \"#utility.yul\":3947:3973   */\n      swap1\n      pop\n        /* \"#utility.yul\":3983:4054   */\n      tag_137\n        /* \"#utility.yul\":4051:4052   */\n      0x00\n        /* \"#utility.yul\":4040:4049   */\n      dup4\n        /* \"#utility.yul\":4036:4053   */\n      add\n        /* \"#utility.yul\":4027:4033   */\n      dup5\n        /* \"#utility.yul\":3983:4054   */\n      tag_82\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3839:4061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4067:4189   */\n    tag_83:\n        /* \"#utility.yul\":4140:4164   */\n      tag_139\n        /* \"#utility.yul\":4158:4163   */\n      dup2\n        /* \"#utility.yul\":4140:4164   */\n      tag_81\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4133:4138   */\n      dup2\n        /* \"#utility.yul\":4130:4165   */\n      eq\n        /* \"#utility.yul\":4120:4183   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":4179:4180   */\n      0x00\n        /* \"#utility.yul\":4176:4177   */\n      dup1\n        /* \"#utility.yul\":4169:4181   */\n      revert\n        /* \"#utility.yul\":4120:4183   */\n    tag_140:\n        /* \"#utility.yul\":4067:4189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4195:4334   */\n    tag_84:\n        /* \"#utility.yul\":4241:4246   */\n      0x00\n        /* \"#utility.yul\":4279:4285   */\n      dup2\n        /* \"#utility.yul\":4266:4286   */\n      calldataload\n        /* \"#utility.yul\":4257:4286   */\n      swap1\n      pop\n        /* \"#utility.yul\":4295:4328   */\n      tag_142\n        /* \"#utility.yul\":4322:4327   */\n      dup2\n        /* \"#utility.yul\":4295:4328   */\n      tag_83\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4195:4334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4340:4669   */\n    tag_27:\n        /* \"#utility.yul\":4399:4405   */\n      0x00\n        /* \"#utility.yul\":4448:4450   */\n      0x20\n        /* \"#utility.yul\":4436:4445   */\n      dup3\n        /* \"#utility.yul\":4427:4434   */\n      dup5\n        /* \"#utility.yul\":4423:4446   */\n      sub\n        /* \"#utility.yul\":4419:4451   */\n      slt\n        /* \"#utility.yul\":4416:4535   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":4454:4533   */\n      tag_145\n      tag_67\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4416:4535   */\n    tag_144:\n        /* \"#utility.yul\":4574:4575   */\n      0x00\n        /* \"#utility.yul\":4599:4652   */\n      tag_146\n        /* \"#utility.yul\":4644:4651   */\n      dup5\n        /* \"#utility.yul\":4635:4641   */\n      dup3\n        /* \"#utility.yul\":4624:4633   */\n      dup6\n        /* \"#utility.yul\":4620:4642   */\n      add\n        /* \"#utility.yul\":4599:4652   */\n      tag_84\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4589:4652   */\n      swap2\n      pop\n        /* \"#utility.yul\":4545:4662   */\n      pop\n        /* \"#utility.yul\":4340:4669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4675:4797   */\n    tag_85:\n        /* \"#utility.yul\":4748:4772   */\n      tag_148\n        /* \"#utility.yul\":4766:4771   */\n      dup2\n        /* \"#utility.yul\":4748:4772   */\n      tag_79\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4741:4746   */\n      dup2\n        /* \"#utility.yul\":4738:4773   */\n      eq\n        /* \"#utility.yul\":4728:4791   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":4787:4788   */\n      0x00\n        /* \"#utility.yul\":4784:4785   */\n      dup1\n        /* \"#utility.yul\":4777:4789   */\n      revert\n        /* \"#utility.yul\":4728:4791   */\n    tag_149:\n        /* \"#utility.yul\":4675:4797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4803:4942   */\n    tag_86:\n        /* \"#utility.yul\":4849:4854   */\n      0x00\n        /* \"#utility.yul\":4887:4893   */\n      dup2\n        /* \"#utility.yul\":4874:4894   */\n      calldataload\n        /* \"#utility.yul\":4865:4894   */\n      swap1\n      pop\n        /* \"#utility.yul\":4903:4936   */\n      tag_151\n        /* \"#utility.yul\":4930:4935   */\n      dup2\n        /* \"#utility.yul\":4903:4936   */\n      tag_85\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4803:4942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4948:5277   */\n    tag_31:\n        /* \"#utility.yul\":5007:5013   */\n      0x00\n        /* \"#utility.yul\":5056:5058   */\n      0x20\n        /* \"#utility.yul\":5044:5053   */\n      dup3\n        /* \"#utility.yul\":5035:5042   */\n      dup5\n        /* \"#utility.yul\":5031:5054   */\n      sub\n        /* \"#utility.yul\":5027:5059   */\n      slt\n        /* \"#utility.yul\":5024:5143   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":5062:5141   */\n      tag_154\n      tag_67\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5024:5143   */\n    tag_153:\n        /* \"#utility.yul\":5182:5183   */\n      0x00\n        /* \"#utility.yul\":5207:5260   */\n      tag_155\n        /* \"#utility.yul\":5252:5259   */\n      dup5\n        /* \"#utility.yul\":5243:5249   */\n      dup3\n        /* \"#utility.yul\":5232:5241   */\n      dup6\n        /* \"#utility.yul\":5228:5250   */\n      add\n        /* \"#utility.yul\":5207:5260   */\n      tag_86\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5197:5260   */\n      swap2\n      pop\n        /* \"#utility.yul\":5153:5270   */\n      pop\n        /* \"#utility.yul\":4948:5277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5448   */\n    tag_87:\n        /* \"#utility.yul\":5423:5440   */\n      0x496e70757420746f6f206c617267650000000000000000000000000000000000\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5411:5417   */\n      dup3\n        /* \"#utility.yul\":5407:5421   */\n      add\n        /* \"#utility.yul\":5400:5441   */\n      mstore\n        /* \"#utility.yul\":5283:5448   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5454:5820   */\n    tag_88:\n        /* \"#utility.yul\":5596:5599   */\n      0x00\n        /* \"#utility.yul\":5617:5684   */\n      tag_158\n        /* \"#utility.yul\":5681:5683   */\n      0x0f\n        /* \"#utility.yul\":5676:5679   */\n      dup4\n        /* \"#utility.yul\":5617:5684   */\n      tag_74\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5610:5684   */\n      swap2\n      pop\n        /* \"#utility.yul\":5693:5786   */\n      tag_159\n        /* \"#utility.yul\":5782:5785   */\n      dup3\n        /* \"#utility.yul\":5693:5786   */\n      tag_87\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5806:5809   */\n      dup3\n        /* \"#utility.yul\":5802:5814   */\n      add\n        /* \"#utility.yul\":5795:5814   */\n      swap1\n      pop\n        /* \"#utility.yul\":5454:5820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5826:6245   */\n    tag_36:\n        /* \"#utility.yul\":5992:5996   */\n      0x00\n        /* \"#utility.yul\":6030:6032   */\n      0x20\n        /* \"#utility.yul\":6019:6028   */\n      dup3\n        /* \"#utility.yul\":6015:6033   */\n      add\n        /* \"#utility.yul\":6007:6033   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6088   */\n      dup2\n        /* \"#utility.yul\":6073:6077   */\n      dup2\n        /* \"#utility.yul\":6069:6089   */\n      sub\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6054:6063   */\n      dup4\n        /* \"#utility.yul\":6050:6067   */\n      add\n        /* \"#utility.yul\":6043:6090   */\n      mstore\n        /* \"#utility.yul\":6107:6238   */\n      tag_161\n        /* \"#utility.yul\":6233:6237   */\n      dup2\n        /* \"#utility.yul\":6107:6238   */\n      tag_88\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6099:6238   */\n      swap1\n      pop\n        /* \"#utility.yul\":5826:6245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6251:6399   */\n    tag_89:\n        /* \"#utility.yul\":6353:6364   */\n      0x00\n        /* \"#utility.yul\":6390:6393   */\n      dup2\n        /* \"#utility.yul\":6375:6393   */\n      swap1\n      pop\n        /* \"#utility.yul\":6251:6399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6405:6566   */\n    tag_90:\n        /* \"#utility.yul\":6545:6558   */\n      0x50726f6365737365643a20000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6541:6542   */\n      0x00\n        /* \"#utility.yul\":6533:6539   */\n      dup3\n        /* \"#utility.yul\":6529:6543   */\n      add\n        /* \"#utility.yul\":6522:6559   */\n      mstore\n        /* \"#utility.yul\":6405:6566   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6572:6974   */\n    tag_91:\n        /* \"#utility.yul\":6732:6735   */\n      0x00\n        /* \"#utility.yul\":6753:6838   */\n      tag_165\n        /* \"#utility.yul\":6835:6837   */\n      0x0b\n        /* \"#utility.yul\":6830:6833   */\n      dup4\n        /* \"#utility.yul\":6753:6838   */\n      tag_89\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6746:6838   */\n      swap2\n      pop\n        /* \"#utility.yul\":6847:6940   */\n      tag_166\n        /* \"#utility.yul\":6936:6939   */\n      dup3\n        /* \"#utility.yul\":6847:6940   */\n      tag_90\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6965:6967   */\n      0x0b\n        /* \"#utility.yul\":6960:6963   */\n      dup3\n        /* \"#utility.yul\":6956:6968   */\n      add\n        /* \"#utility.yul\":6949:6968   */\n      swap1\n      pop\n        /* \"#utility.yul\":6572:6974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7128   */\n    tag_92:\n        /* \"#utility.yul\":7078:7084   */\n      dup3\n        /* \"#utility.yul\":7073:7076   */\n      dup2\n        /* \"#utility.yul\":7068:7071   */\n      dup4\n        /* \"#utility.yul\":7055:7085   */\n      calldatacopy\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7110:7116   */\n      dup4\n        /* \"#utility.yul\":7105:7108   */\n      dup4\n        /* \"#utility.yul\":7101:7117   */\n      add\n        /* \"#utility.yul\":7094:7121   */\n      mstore\n        /* \"#utility.yul\":6980:7128   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7158:7488   */\n    tag_93:\n        /* \"#utility.yul\":7274:7277   */\n      0x00\n        /* \"#utility.yul\":7295:7384   */\n      tag_169\n        /* \"#utility.yul\":7377:7383   */\n      dup4\n        /* \"#utility.yul\":7372:7375   */\n      dup6\n        /* \"#utility.yul\":7295:7384   */\n      tag_89\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7288:7384   */\n      swap4\n      pop\n        /* \"#utility.yul\":7394:7450   */\n      tag_170\n        /* \"#utility.yul\":7443:7449   */\n      dup4\n        /* \"#utility.yul\":7438:7441   */\n      dup6\n        /* \"#utility.yul\":7431:7436   */\n      dup5\n        /* \"#utility.yul\":7394:7450   */\n      tag_92\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7475:7481   */\n      dup3\n        /* \"#utility.yul\":7470:7473   */\n      dup5\n        /* \"#utility.yul\":7466:7482   */\n      add\n        /* \"#utility.yul\":7459:7482   */\n      swap1\n      pop\n        /* \"#utility.yul\":7158:7488   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7494:8055   */\n    tag_38:\n        /* \"#utility.yul\":7737:7740   */\n      0x00\n        /* \"#utility.yul\":7759:7907   */\n      tag_172\n        /* \"#utility.yul\":7903:7906   */\n      dup3\n        /* \"#utility.yul\":7759:7907   */\n      tag_91\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7752:7907   */\n      swap2\n      pop\n        /* \"#utility.yul\":7924:8029   */\n      tag_173\n        /* \"#utility.yul\":8025:8028   */\n      dup3\n        /* \"#utility.yul\":8016:8022   */\n      dup5\n        /* \"#utility.yul\":8008:8014   */\n      dup7\n        /* \"#utility.yul\":7924:8029   */\n      tag_93\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7917:8029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8046:8049   */\n      dup2\n        /* \"#utility.yul\":8039:8049   */\n      swap1\n      pop\n        /* \"#utility.yul\":7494:8055   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8085:8402   */\n    tag_94:\n        /* \"#utility.yul\":8183:8186   */\n      0x00\n        /* \"#utility.yul\":8204:8275   */\n      tag_175\n        /* \"#utility.yul\":8268:8274   */\n      dup4\n        /* \"#utility.yul\":8263:8266   */\n      dup6\n        /* \"#utility.yul\":8204:8275   */\n      tag_74\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":8197:8275   */\n      swap4\n      pop\n        /* \"#utility.yul\":8285:8341   */\n      tag_176\n        /* \"#utility.yul\":8334:8340   */\n      dup4\n        /* \"#utility.yul\":8329:8332   */\n      dup6\n        /* \"#utility.yul\":8322:8327   */\n      dup5\n        /* \"#utility.yul\":8285:8341   */\n      tag_92\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8366:8395   */\n      tag_177\n        /* \"#utility.yul\":8388:8394   */\n      dup4\n        /* \"#utility.yul\":8366:8395   */\n      tag_76\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":8361:8364   */\n      dup5\n        /* \"#utility.yul\":8357:8396   */\n      add\n        /* \"#utility.yul\":8350:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8085:8402   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8408:8942   */\n    tag_40:\n        /* \"#utility.yul\":8579:8583   */\n      0x00\n        /* \"#utility.yul\":8617:8619   */\n      0x40\n        /* \"#utility.yul\":8606:8615   */\n      dup3\n        /* \"#utility.yul\":8602:8620   */\n      add\n        /* \"#utility.yul\":8594:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8666:8675   */\n      dup2\n        /* \"#utility.yul\":8660:8664   */\n      dup2\n        /* \"#utility.yul\":8656:8676   */\n      sub\n        /* \"#utility.yul\":8652:8653   */\n      0x00\n        /* \"#utility.yul\":8641:8650   */\n      dup4\n        /* \"#utility.yul\":8637:8654   */\n      add\n        /* \"#utility.yul\":8630:8677   */\n      mstore\n        /* \"#utility.yul\":8694:8782   */\n      tag_179\n        /* \"#utility.yul\":8777:8781   */\n      dup2\n        /* \"#utility.yul\":8768:8774   */\n      dup6\n        /* \"#utility.yul\":8760:8766   */\n      dup8\n        /* \"#utility.yul\":8694:8782   */\n      tag_94\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8686:8782   */\n      swap1\n      pop\n        /* \"#utility.yul\":8829:8838   */\n      dup2\n        /* \"#utility.yul\":8823:8827   */\n      dup2\n        /* \"#utility.yul\":8819:8839   */\n      sub\n        /* \"#utility.yul\":8814:8816   */\n      0x20\n        /* \"#utility.yul\":8803:8812   */\n      dup4\n        /* \"#utility.yul\":8799:8817   */\n      add\n        /* \"#utility.yul\":8792:8840   */\n      mstore\n        /* \"#utility.yul\":8857:8935   */\n      tag_180\n        /* \"#utility.yul\":8930:8934   */\n      dup2\n        /* \"#utility.yul\":8921:8927   */\n      dup5\n        /* \"#utility.yul\":8857:8935   */\n      tag_77\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":8849:8935   */\n      swap1\n      pop\n        /* \"#utility.yul\":8408:8942   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122083140ff2c5ae2a32e24a78957a88d2d2fd4b2bdf9245fdde01692f686b70243f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 189,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:3",
										"nodeType": "YulBlock",
										"src": "0:1551:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "922:274:3",
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:3",
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nativeSrc": "970:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nativeSrc": "970:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nativeSrc": "939:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:32:3",
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nativeSrc": "932:119:3",
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nativeSrc": "1061:128:3",
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nativeSrc": "1076:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nativeSrc": "1147:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nativeSrc": "1115:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:3",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:3",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:3",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											},
											{
												"body": {
													"nativeSrc": "1267:53:3",
													"nodeType": "YulBlock",
													"src": "1267:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:3"
																		},
																		"nativeSrc": "1289:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:3"
																},
																"nativeSrc": "1277:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:3"
															},
															"nativeSrc": "1277:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:3",
														"nodeType": "YulTypedName",
														"src": "1255:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:3",
														"nodeType": "YulTypedName",
														"src": "1262:3:3",
														"type": ""
													}
												],
												"src": "1202:118:3"
											},
											{
												"body": {
													"nativeSrc": "1424:124:3",
													"nodeType": "YulBlock",
													"src": "1424:124:3",
													"statements": [
														{
															"nativeSrc": "1434:26:3",
															"nodeType": "YulAssignment",
															"src": "1434:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:3"
																},
																"nativeSrc": "1442:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:3"
																		},
																		"nativeSrc": "1523:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:3"
																},
																"nativeSrc": "1470:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:3"
															},
															"nativeSrc": "1470:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:3",
														"nodeType": "YulTypedName",
														"src": "1396:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:3",
														"nodeType": "YulTypedName",
														"src": "1408:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:3",
														"nodeType": "YulTypedName",
														"src": "1419:4:3",
														"type": ""
													}
												],
												"src": "1326:222:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526064600155348015610014575f80fd5b50604051610a5f380380610a5f833981810160405281019061003691906101dc565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009e9190610216565b60405180910390fd5b6100b6816100bd60201b60201c565b505061022f565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ab82610182565b9050919050565b6101bb816101a1565b81146101c5575f80fd5b50565b5f815190506101d6816101b2565b92915050565b5f602082840312156101f1576101f061017e565b5b5f6101fe848285016101c8565b91505092915050565b610210816101a1565b82525050565b5f6020820190506102295f830184610207565b92915050565b6108238061023c5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80635f493a8714610064578063715018a6146100945780638da5cb5b1461009e578063d06a89a4146100bc578063dc2f7867146100da578063f2fde38b146100f6575b5f80fd5b61007e6004803603810190610079919061046b565b610112565b60405161008b9190610526565b60405180910390f35b61009c6101dd565b005b6100a66101f0565b6040516100b39190610585565b60405180910390f35b6100c4610217565b6040516100d191906105b6565b60405180910390f35b6100f460048036038101906100ef91906105f9565b61021d565b005b610110600480360381019061010b919061064e565b61022f565b005b606060015483839050111561015c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610153906106c3565b60405180910390fd5b5f8383604051602001610170929190610767565b60405160208183030381529060405290503373ffffffffffffffffffffffffffffffffffffffff167fc436644274e16b096d0d0df2fbda7162116c56a836b64d4f2a9d52fb86d774268585846040516101cb939291906107b6565b60405180910390a28091505092915050565b6101e56102b3565b6101ee5f61033a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b6102256102b3565b8060018190555050565b6102376102b3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161029e9190610585565b60405180910390fd5b6102b08161033a565b50565b6102bb6103fb565b73ffffffffffffffffffffffffffffffffffffffff166102d96101f0565b73ffffffffffffffffffffffffffffffffffffffff1614610338576102fc6103fb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161032f9190610585565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261042b5761042a61040a565b5b8235905067ffffffffffffffff8111156104485761044761040e565b5b60208301915083600182028301111561046457610463610412565b5b9250929050565b5f806020838503121561048157610480610402565b5b5f83013567ffffffffffffffff81111561049e5761049d610406565b5b6104aa85828601610416565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6104f8826104b6565b61050281856104c0565b93506105128185602086016104d0565b61051b816104de565b840191505092915050565b5f6020820190508181035f83015261053e81846104ee565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056f82610546565b9050919050565b61057f81610565565b82525050565b5f6020820190506105985f830184610576565b92915050565b5f819050919050565b6105b08161059e565b82525050565b5f6020820190506105c95f8301846105a7565b92915050565b6105d88161059e565b81146105e2575f80fd5b50565b5f813590506105f3816105cf565b92915050565b5f6020828403121561060e5761060d610402565b5b5f61061b848285016105e5565b91505092915050565b61062d81610565565b8114610637575f80fd5b50565b5f8135905061064881610624565b92915050565b5f6020828403121561066357610662610402565b5b5f6106708482850161063a565b91505092915050565b7f496e70757420746f6f206c6172676500000000000000000000000000000000005f82015250565b5f6106ad600f836104c0565b91506106b882610679565b602082019050919050565b5f6020820190508181035f8301526106da816106a1565b9050919050565b5f81905092915050565b7f50726f6365737365643a200000000000000000000000000000000000000000005f82015250565b5f61071f600b836106e1565b915061072a826106eb565b600b82019050919050565b828183375f83830152505050565b5f61074e83856106e1565b935061075b838584610735565b82840190509392505050565b5f61077182610713565b915061077e828486610743565b91508190509392505050565b5f61079583856104c0565b93506107a2838584610735565b6107ab836104de565b840190509392505050565b5f6040820190508181035f8301526107cf81858761078a565b905081810360208301526107e381846104ee565b905094935050505056fea264697066735822122083140ff2c5ae2a32e24a78957a88d2d2fd4b2bdf9245fdde01692f686b70243f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA5F CODESIZE SUB DUP1 PUSH2 0xA5F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x1DC JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6 DUP2 PUSH2 0xBD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x22F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB DUP3 PUSH2 0x182 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D6 DUP2 PUSH2 0x1B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1 JUMPI PUSH2 0x1F0 PUSH2 0x17E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FE DUP5 DUP3 DUP6 ADD PUSH2 0x1C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x210 DUP2 PUSH2 0x1A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229 PUSH0 DUP4 ADD DUP5 PUSH2 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x823 DUP1 PUSH2 0x23C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F493A87 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xD06A89A4 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xDC2F7867 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 SLOAD DUP4 DUP4 SWAP1 POP GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC436644274E16B096D0D0DF2FBDA7162116C56A836B64D4F2A9D52FB86D77426 DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x1EE PUSH0 PUSH2 0x33A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x2B3 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2B3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B0 DUP2 PUSH2 0x33A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x3FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D9 PUSH2 0x1F0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x338 JUMPI PUSH2 0x2FC PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x40A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x447 PUSH2 0x40E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0x412 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x402 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49E JUMPI PUSH2 0x49D PUSH2 0x406 JUMP JUMPDEST JUMPDEST PUSH2 0x4AA DUP6 DUP3 DUP7 ADD PUSH2 0x416 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F8 DUP3 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x502 DUP2 DUP6 PUSH2 0x4C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x512 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x51B DUP2 PUSH2 0x4DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x53E DUP2 DUP5 PUSH2 0x4EE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x56F DUP3 PUSH2 0x546 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F DUP2 PUSH2 0x565 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x598 PUSH0 DUP4 ADD DUP5 PUSH2 0x576 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH2 0x59E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x59E JUMP JUMPDEST DUP2 EQ PUSH2 0x5E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F3 DUP2 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60E JUMPI PUSH2 0x60D PUSH2 0x402 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x61B DUP5 DUP3 DUP6 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x565 JUMP JUMPDEST DUP2 EQ PUSH2 0x637 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x648 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x663 JUMPI PUSH2 0x662 PUSH2 0x402 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x670 DUP5 DUP3 DUP6 ADD PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E70757420746F6F206C617267650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6AD PUSH1 0xF DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x6B8 DUP3 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6DA DUP2 PUSH2 0x6A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F6365737365643A20000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x71F PUSH1 0xB DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A DUP3 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0xB DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x74E DUP4 DUP6 PUSH2 0x6E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x75B DUP4 DUP6 DUP5 PUSH2 0x735 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x771 DUP3 PUSH2 0x713 JUMP JUMPDEST SWAP2 POP PUSH2 0x77E DUP3 DUP5 DUP7 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x795 DUP4 DUP6 PUSH2 0x4C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x7A2 DUP4 DUP6 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x7AB DUP4 PUSH2 0x4DE JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7CF DUP2 DUP6 DUP8 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7E3 DUP2 DUP5 PUSH2 0x4EE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 EQ 0xF CALLCODE 0xC5 0xAE 0x2A ORIGIN 0xE2 BLOBBASEFEE PUSH25 0x957A88D2D2FD4B2BDF9245FDDE01692F686B70243F64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "259:774:2:-:0;;;410:3;383:30;;440:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;482:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;440:129:2;259:774;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;259:774:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 691,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1019,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 826,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@gatewayProcess_254": {
									"entryPoint": 274,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxLength_194": {
									"entryPoint": 535,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 496,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 477,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMaxLength_215": {
									"entryPoint": 541,
									"id": 215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 559,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8945:3",
										"nodeType": "YulBlock",
										"src": "0:8945:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "423:28:3",
													"nodeType": "YulBlock",
													"src": "423:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:3",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:3",
																		"nodeType": "YulLiteral",
																		"src": "443:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nativeSrc": "433:12:3",
																"nodeType": "YulFunctionCall",
																"src": "433:12:3"
															},
															"nativeSrc": "433:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:3"
											},
											{
												"body": {
													"nativeSrc": "546:28:3",
													"nodeType": "YulBlock",
													"src": "546:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:3",
																		"nodeType": "YulLiteral",
																		"src": "563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:3",
																		"nodeType": "YulLiteral",
																		"src": "566:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:3"
																},
																"nativeSrc": "556:12:3",
																"nodeType": "YulFunctionCall",
																"src": "556:12:3"
															},
															"nativeSrc": "556:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:3"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:3"
											},
											{
												"body": {
													"nativeSrc": "669:28:3",
													"nodeType": "YulBlock",
													"src": "669:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:3",
																		"nodeType": "YulLiteral",
																		"src": "686:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:3",
																		"nodeType": "YulLiteral",
																		"src": "689:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:3"
																},
																"nativeSrc": "679:12:3",
																"nodeType": "YulFunctionCall",
																"src": "679:12:3"
															},
															"nativeSrc": "679:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:3"
											},
											{
												"body": {
													"nativeSrc": "792:478:3",
													"nodeType": "YulBlock",
													"src": "792:478:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "841:83:3",
																"nodeType": "YulBlock",
																"src": "841:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "843:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "843:77:3"
																			},
																			"nativeSrc": "843:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "843:79:3"
																		},
																		"nativeSrc": "843:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "843:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "820:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "820:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "828:4:3",
																						"nodeType": "YulLiteral",
																						"src": "828:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "816:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "816:3:3"
																				},
																				"nativeSrc": "816:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "816:17:3"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "835:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "835:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "812:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:3"
																		},
																		"nativeSrc": "812:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "812:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "805:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:3"
																},
																"nativeSrc": "805:35:3",
																"nodeType": "YulFunctionCall",
																"src": "805:35:3"
															},
															"nativeSrc": "802:122:3",
															"nodeType": "YulIf",
															"src": "802:122:3"
														},
														{
															"nativeSrc": "933:30:3",
															"nodeType": "YulAssignment",
															"src": "933:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "956:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "943:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:3"
																},
																"nativeSrc": "943:20:3",
																"nodeType": "YulFunctionCall",
																"src": "943:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "933:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1006:83:3",
																"nodeType": "YulBlock",
																"src": "1006:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1008:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1008:77:3"
																			},
																			"nativeSrc": "1008:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1008:79:3"
																		},
																		"nativeSrc": "1008:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "978:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "978:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "986:18:3",
																		"nodeType": "YulLiteral",
																		"src": "986:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "975:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "975:2:3"
																},
																"nativeSrc": "975:30:3",
																"nodeType": "YulFunctionCall",
																"src": "975:30:3"
															},
															"nativeSrc": "972:117:3",
															"nodeType": "YulIf",
															"src": "972:117:3"
														},
														{
															"nativeSrc": "1098:29:3",
															"nodeType": "YulAssignment",
															"src": "1098:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1114:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1122:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1122:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1110:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1110:3:3"
																},
																"nativeSrc": "1110:17:3",
																"nodeType": "YulFunctionCall",
																"src": "1110:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1098:8:3",
																	"nodeType": "YulIdentifier",
																	"src": "1098:8:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1181:83:3",
																"nodeType": "YulBlock",
																"src": "1181:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1183:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1183:77:3"
																			},
																			"nativeSrc": "1183:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1183:79:3"
																		},
																		"nativeSrc": "1183:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1146:8:3",
																				"nodeType": "YulIdentifier",
																				"src": "1146:8:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1160:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1160:6:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1168:4:3",
																						"nodeType": "YulLiteral",
																						"src": "1168:4:3",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1156:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:3"
																				},
																				"nativeSrc": "1156:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1156:17:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1142:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:3"
																		},
																		"nativeSrc": "1142:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1142:32:3"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1176:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1176:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1139:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1139:2:3"
																},
																"nativeSrc": "1139:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1139:41:3"
															},
															"nativeSrc": "1136:128:3",
															"nodeType": "YulIf",
															"src": "1136:128:3"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "717:553:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "759:6:3",
														"nodeType": "YulTypedName",
														"src": "759:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "767:3:3",
														"nodeType": "YulTypedName",
														"src": "767:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "775:8:3",
														"nodeType": "YulTypedName",
														"src": "775:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "785:6:3",
														"nodeType": "YulTypedName",
														"src": "785:6:3",
														"type": ""
													}
												],
												"src": "717:553:3"
											},
											{
												"body": {
													"nativeSrc": "1362:443:3",
													"nodeType": "YulBlock",
													"src": "1362:443:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:83:3",
																"nodeType": "YulBlock",
																"src": "1408:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1410:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1410:77:3"
																			},
																			"nativeSrc": "1410:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:79:3"
																		},
																		"nativeSrc": "1410:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1383:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1383:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1392:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1392:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1379:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:3"
																		},
																		"nativeSrc": "1379:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1404:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1375:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:3"
																},
																"nativeSrc": "1375:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1375:32:3"
															},
															"nativeSrc": "1372:119:3",
															"nodeType": "YulIf",
															"src": "1372:119:3"
														},
														{
															"nativeSrc": "1501:297:3",
															"nodeType": "YulBlock",
															"src": "1501:297:3",
															"statements": [
																{
																	"nativeSrc": "1516:45:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1516:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1547:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1547:9:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1558:1:3",
																						"nodeType": "YulLiteral",
																						"src": "1558:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1543:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1543:3:3"
																				},
																				"nativeSrc": "1543:17:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1543:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1530:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1530:12:3"
																		},
																		"nativeSrc": "1530:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1530:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1520:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1520:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1608:83:3",
																		"nodeType": "YulBlock",
																		"src": "1608:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1610:77:3",
																						"nodeType": "YulIdentifier",
																						"src": "1610:77:3"
																					},
																					"nativeSrc": "1610:79:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1610:79:3"
																				},
																				"nativeSrc": "1610:79:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1610:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1580:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1588:18:3",
																				"nodeType": "YulLiteral",
																				"src": "1588:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1577:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1577:2:3"
																		},
																		"nativeSrc": "1577:30:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:30:3"
																	},
																	"nativeSrc": "1574:117:3",
																	"nodeType": "YulIf",
																	"src": "1574:117:3"
																},
																{
																	"nativeSrc": "1705:83:3",
																	"nodeType": "YulAssignment",
																	"src": "1705:83:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1760:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1760:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1771:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1771:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1756:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1756:3:3"
																				},
																				"nativeSrc": "1756:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1756:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1780:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1780:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "1723:32:3",
																			"nodeType": "YulIdentifier",
																			"src": "1723:32:3"
																		},
																		"nativeSrc": "1723:65:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:65:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1705:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:3"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1713:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1713:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "1276:529:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1324:9:3",
														"nodeType": "YulTypedName",
														"src": "1324:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1335:7:3",
														"nodeType": "YulTypedName",
														"src": "1335:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1347:6:3",
														"nodeType": "YulTypedName",
														"src": "1347:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1355:6:3",
														"nodeType": "YulTypedName",
														"src": "1355:6:3",
														"type": ""
													}
												],
												"src": "1276:529:3"
											},
											{
												"body": {
													"nativeSrc": "1870:40:3",
													"nodeType": "YulBlock",
													"src": "1870:40:3",
													"statements": [
														{
															"nativeSrc": "1881:22:3",
															"nodeType": "YulAssignment",
															"src": "1881:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1897:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1897:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1891:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1891:5:3"
																},
																"nativeSrc": "1891:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1891:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1881:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1881:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1811:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1853:5:3",
														"nodeType": "YulTypedName",
														"src": "1853:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1863:6:3",
														"nodeType": "YulTypedName",
														"src": "1863:6:3",
														"type": ""
													}
												],
												"src": "1811:99:3"
											},
											{
												"body": {
													"nativeSrc": "2012:73:3",
													"nodeType": "YulBlock",
													"src": "2012:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2029:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2034:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2034:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2022:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2022:6:3"
																},
																"nativeSrc": "2022:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2022:19:3"
															},
															"nativeSrc": "2022:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2022:19:3"
														},
														{
															"nativeSrc": "2050:29:3",
															"nodeType": "YulAssignment",
															"src": "2050:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2069:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2069:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2074:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2074:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2065:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:3"
																},
																"nativeSrc": "2065:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2065:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2050:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2050:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1916:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1984:3:3",
														"nodeType": "YulTypedName",
														"src": "1984:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1989:6:3",
														"nodeType": "YulTypedName",
														"src": "1989:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2000:11:3",
														"nodeType": "YulTypedName",
														"src": "2000:11:3",
														"type": ""
													}
												],
												"src": "1916:169:3"
											},
											{
												"body": {
													"nativeSrc": "2153:77:3",
													"nodeType": "YulBlock",
													"src": "2153:77:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2170:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2175:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2175:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2180:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2180:6:3"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2164:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2164:5:3"
																},
																"nativeSrc": "2164:23:3",
																"nodeType": "YulFunctionCall",
																"src": "2164:23:3"
															},
															"nativeSrc": "2164:23:3",
															"nodeType": "YulExpressionStatement",
															"src": "2164:23:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2207:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2207:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2212:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2212:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2203:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:3"
																		},
																		"nativeSrc": "2203:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2203:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2221:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2221:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2196:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2196:6:3"
																},
																"nativeSrc": "2196:27:3",
																"nodeType": "YulFunctionCall",
																"src": "2196:27:3"
															},
															"nativeSrc": "2196:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "2196:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2091:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2135:3:3",
														"nodeType": "YulTypedName",
														"src": "2135:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2140:3:3",
														"nodeType": "YulTypedName",
														"src": "2140:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2145:6:3",
														"nodeType": "YulTypedName",
														"src": "2145:6:3",
														"type": ""
													}
												],
												"src": "2091:139:3"
											},
											{
												"body": {
													"nativeSrc": "2284:54:3",
													"nodeType": "YulBlock",
													"src": "2284:54:3",
													"statements": [
														{
															"nativeSrc": "2294:38:3",
															"nodeType": "YulAssignment",
															"src": "2294:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2312:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2312:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2319:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2319:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2308:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2308:3:3"
																		},
																		"nativeSrc": "2308:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2308:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2328:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2328:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2324:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:3"
																		},
																		"nativeSrc": "2324:7:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2304:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2304:3:3"
																},
																"nativeSrc": "2304:28:3",
																"nodeType": "YulFunctionCall",
																"src": "2304:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2294:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2236:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2267:5:3",
														"nodeType": "YulTypedName",
														"src": "2267:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2277:6:3",
														"nodeType": "YulTypedName",
														"src": "2277:6:3",
														"type": ""
													}
												],
												"src": "2236:102:3"
											},
											{
												"body": {
													"nativeSrc": "2436:285:3",
													"nodeType": "YulBlock",
													"src": "2436:285:3",
													"statements": [
														{
															"nativeSrc": "2446:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2446:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2460:32:3",
																	"nodeType": "YulIdentifier",
																	"src": "2460:32:3"
																},
																"nativeSrc": "2460:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2460:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2450:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2450:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2508:78:3",
															"nodeType": "YulAssignment",
															"src": "2508:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2574:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2574:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2579:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2579:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2515:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2515:58:3"
																},
																"nativeSrc": "2515:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2515:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2508:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2634:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2641:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2641:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2630:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2630:3:3"
																		},
																		"nativeSrc": "2630:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2630:16:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2648:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2648:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2595:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "2595:34:3"
																},
																"nativeSrc": "2595:65:3",
																"nodeType": "YulFunctionCall",
																"src": "2595:65:3"
															},
															"nativeSrc": "2595:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "2595:65:3"
														},
														{
															"nativeSrc": "2669:46:3",
															"nodeType": "YulAssignment",
															"src": "2669:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2680:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2680:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2707:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2707:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2685:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "2685:21:3"
																		},
																		"nativeSrc": "2685:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2676:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2676:3:3"
																},
																"nativeSrc": "2676:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2676:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2669:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2669:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2344:377:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2417:5:3",
														"nodeType": "YulTypedName",
														"src": "2417:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2424:3:3",
														"nodeType": "YulTypedName",
														"src": "2424:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2432:3:3",
														"nodeType": "YulTypedName",
														"src": "2432:3:3",
														"type": ""
													}
												],
												"src": "2344:377:3"
											},
											{
												"body": {
													"nativeSrc": "2845:195:3",
													"nodeType": "YulBlock",
													"src": "2845:195:3",
													"statements": [
														{
															"nativeSrc": "2855:26:3",
															"nodeType": "YulAssignment",
															"src": "2855:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2867:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2867:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2878:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2863:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2863:3:3"
																},
																"nativeSrc": "2863:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2863:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2855:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2855:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2902:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2902:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2913:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2913:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2898:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:3"
																		},
																		"nativeSrc": "2898:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2921:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2921:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2927:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2917:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:3"
																		},
																		"nativeSrc": "2917:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2917:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2891:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2891:6:3"
																},
																"nativeSrc": "2891:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2891:47:3"
															},
															"nativeSrc": "2891:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2891:47:3"
														},
														{
															"nativeSrc": "2947:86:3",
															"nodeType": "YulAssignment",
															"src": "2947:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3019:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3019:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3028:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3028:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2955:63:3",
																	"nodeType": "YulIdentifier",
																	"src": "2955:63:3"
																},
																"nativeSrc": "2955:78:3",
																"nodeType": "YulFunctionCall",
																"src": "2955:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2947:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2947:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2727:313:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2817:9:3",
														"nodeType": "YulTypedName",
														"src": "2817:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2829:6:3",
														"nodeType": "YulTypedName",
														"src": "2829:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2840:4:3",
														"nodeType": "YulTypedName",
														"src": "2840:4:3",
														"type": ""
													}
												],
												"src": "2727:313:3"
											},
											{
												"body": {
													"nativeSrc": "3091:81:3",
													"nodeType": "YulBlock",
													"src": "3091:81:3",
													"statements": [
														{
															"nativeSrc": "3101:65:3",
															"nodeType": "YulAssignment",
															"src": "3101:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3116:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3116:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3123:42:3",
																		"nodeType": "YulLiteral",
																		"src": "3123:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3112:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3112:3:3"
																},
																"nativeSrc": "3112:54:3",
																"nodeType": "YulFunctionCall",
																"src": "3112:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3101:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3101:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3046:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3073:5:3",
														"nodeType": "YulTypedName",
														"src": "3073:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3083:7:3",
														"nodeType": "YulTypedName",
														"src": "3083:7:3",
														"type": ""
													}
												],
												"src": "3046:126:3"
											},
											{
												"body": {
													"nativeSrc": "3223:51:3",
													"nodeType": "YulBlock",
													"src": "3223:51:3",
													"statements": [
														{
															"nativeSrc": "3233:35:3",
															"nodeType": "YulAssignment",
															"src": "3233:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3262:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3262:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3244:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3244:17:3"
																},
																"nativeSrc": "3244:24:3",
																"nodeType": "YulFunctionCall",
																"src": "3244:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3233:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3233:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3178:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3205:5:3",
														"nodeType": "YulTypedName",
														"src": "3205:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3215:7:3",
														"nodeType": "YulTypedName",
														"src": "3215:7:3",
														"type": ""
													}
												],
												"src": "3178:96:3"
											},
											{
												"body": {
													"nativeSrc": "3345:53:3",
													"nodeType": "YulBlock",
													"src": "3345:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3362:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3362:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3385:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3385:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3367:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3367:17:3"
																		},
																		"nativeSrc": "3367:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3367:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3355:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:3"
																},
																"nativeSrc": "3355:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3355:37:3"
															},
															"nativeSrc": "3355:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3355:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3280:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3333:5:3",
														"nodeType": "YulTypedName",
														"src": "3333:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3340:3:3",
														"nodeType": "YulTypedName",
														"src": "3340:3:3",
														"type": ""
													}
												],
												"src": "3280:118:3"
											},
											{
												"body": {
													"nativeSrc": "3502:124:3",
													"nodeType": "YulBlock",
													"src": "3502:124:3",
													"statements": [
														{
															"nativeSrc": "3512:26:3",
															"nodeType": "YulAssignment",
															"src": "3512:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3524:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3524:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3535:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3535:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3520:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:3"
																},
																"nativeSrc": "3520:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3520:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3512:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3512:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3592:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3592:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3605:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3605:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3616:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3616:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3601:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3601:3:3"
																		},
																		"nativeSrc": "3601:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3548:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3548:43:3"
																},
																"nativeSrc": "3548:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3548:71:3"
															},
															"nativeSrc": "3548:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3548:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3404:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3474:9:3",
														"nodeType": "YulTypedName",
														"src": "3474:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3486:6:3",
														"nodeType": "YulTypedName",
														"src": "3486:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3497:4:3",
														"nodeType": "YulTypedName",
														"src": "3497:4:3",
														"type": ""
													}
												],
												"src": "3404:222:3"
											},
											{
												"body": {
													"nativeSrc": "3677:32:3",
													"nodeType": "YulBlock",
													"src": "3677:32:3",
													"statements": [
														{
															"nativeSrc": "3687:16:3",
															"nodeType": "YulAssignment",
															"src": "3687:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "3698:5:3",
																"nodeType": "YulIdentifier",
																"src": "3698:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3687:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3687:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3632:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3659:5:3",
														"nodeType": "YulTypedName",
														"src": "3659:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3669:7:3",
														"nodeType": "YulTypedName",
														"src": "3669:7:3",
														"type": ""
													}
												],
												"src": "3632:77:3"
											},
											{
												"body": {
													"nativeSrc": "3780:53:3",
													"nodeType": "YulBlock",
													"src": "3780:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3797:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3797:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3820:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3820:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3802:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3802:17:3"
																		},
																		"nativeSrc": "3802:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3802:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3790:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:3"
																},
																"nativeSrc": "3790:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3790:37:3"
															},
															"nativeSrc": "3790:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3790:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3715:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3768:5:3",
														"nodeType": "YulTypedName",
														"src": "3768:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3775:3:3",
														"nodeType": "YulTypedName",
														"src": "3775:3:3",
														"type": ""
													}
												],
												"src": "3715:118:3"
											},
											{
												"body": {
													"nativeSrc": "3937:124:3",
													"nodeType": "YulBlock",
													"src": "3937:124:3",
													"statements": [
														{
															"nativeSrc": "3947:26:3",
															"nodeType": "YulAssignment",
															"src": "3947:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3959:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3959:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3970:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3970:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3955:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3955:3:3"
																},
																"nativeSrc": "3955:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3955:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3947:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3947:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4027:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4027:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4040:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4040:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4051:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4051:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4036:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4036:3:3"
																		},
																		"nativeSrc": "4036:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4036:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3983:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "3983:43:3"
																},
																"nativeSrc": "3983:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3983:71:3"
															},
															"nativeSrc": "3983:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "3983:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3839:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3909:9:3",
														"nodeType": "YulTypedName",
														"src": "3909:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3921:6:3",
														"nodeType": "YulTypedName",
														"src": "3921:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3932:4:3",
														"nodeType": "YulTypedName",
														"src": "3932:4:3",
														"type": ""
													}
												],
												"src": "3839:222:3"
											},
											{
												"body": {
													"nativeSrc": "4110:79:3",
													"nodeType": "YulBlock",
													"src": "4110:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4167:16:3",
																"nodeType": "YulBlock",
																"src": "4167:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4176:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4176:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4179:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4179:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4169:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4169:6:3"
																			},
																			"nativeSrc": "4169:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4169:12:3"
																		},
																		"nativeSrc": "4169:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4169:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4133:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4133:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4158:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4158:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4140:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "4140:17:3"
																				},
																				"nativeSrc": "4140:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4140:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4130:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4130:2:3"
																		},
																		"nativeSrc": "4130:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4130:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4123:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:3"
																},
																"nativeSrc": "4123:43:3",
																"nodeType": "YulFunctionCall",
																"src": "4123:43:3"
															},
															"nativeSrc": "4120:63:3",
															"nodeType": "YulIf",
															"src": "4120:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4067:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4103:5:3",
														"nodeType": "YulTypedName",
														"src": "4103:5:3",
														"type": ""
													}
												],
												"src": "4067:122:3"
											},
											{
												"body": {
													"nativeSrc": "4247:87:3",
													"nodeType": "YulBlock",
													"src": "4247:87:3",
													"statements": [
														{
															"nativeSrc": "4257:29:3",
															"nodeType": "YulAssignment",
															"src": "4257:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4279:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4279:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4266:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "4266:12:3"
																},
																"nativeSrc": "4266:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4266:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4257:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4257:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4322:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4322:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4295:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "4295:26:3"
																},
																"nativeSrc": "4295:33:3",
																"nodeType": "YulFunctionCall",
																"src": "4295:33:3"
															},
															"nativeSrc": "4295:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "4295:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4195:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4225:6:3",
														"nodeType": "YulTypedName",
														"src": "4225:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4233:3:3",
														"nodeType": "YulTypedName",
														"src": "4233:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4241:5:3",
														"nodeType": "YulTypedName",
														"src": "4241:5:3",
														"type": ""
													}
												],
												"src": "4195:139:3"
											},
											{
												"body": {
													"nativeSrc": "4406:263:3",
													"nodeType": "YulBlock",
													"src": "4406:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4452:83:3",
																"nodeType": "YulBlock",
																"src": "4452:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4454:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "4454:77:3"
																			},
																			"nativeSrc": "4454:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4454:79:3"
																		},
																		"nativeSrc": "4454:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4454:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4427:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4427:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4436:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4436:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4423:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4423:3:3"
																		},
																		"nativeSrc": "4423:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4423:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4448:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4448:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4419:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:3"
																},
																"nativeSrc": "4419:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4419:32:3"
															},
															"nativeSrc": "4416:119:3",
															"nodeType": "YulIf",
															"src": "4416:119:3"
														},
														{
															"nativeSrc": "4545:117:3",
															"nodeType": "YulBlock",
															"src": "4545:117:3",
															"statements": [
																{
																	"nativeSrc": "4560:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4560:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4574:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4574:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4564:6:3",
																			"nodeType": "YulTypedName",
																			"src": "4564:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4589:63:3",
																	"nodeType": "YulAssignment",
																	"src": "4589:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4624:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "4624:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4635:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "4635:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4620:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4620:3:3"
																				},
																				"nativeSrc": "4620:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4620:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4644:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4644:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4599:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "4599:20:3"
																		},
																		"nativeSrc": "4599:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4599:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4589:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4589:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4340:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4376:9:3",
														"nodeType": "YulTypedName",
														"src": "4376:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4387:7:3",
														"nodeType": "YulTypedName",
														"src": "4387:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4399:6:3",
														"nodeType": "YulTypedName",
														"src": "4399:6:3",
														"type": ""
													}
												],
												"src": "4340:329:3"
											},
											{
												"body": {
													"nativeSrc": "4718:79:3",
													"nodeType": "YulBlock",
													"src": "4718:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4775:16:3",
																"nodeType": "YulBlock",
																"src": "4775:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4784:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4784:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4787:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4787:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4777:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4777:6:3"
																			},
																			"nativeSrc": "4777:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4777:12:3"
																		},
																		"nativeSrc": "4777:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4777:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4741:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4741:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4766:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4766:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4748:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "4748:17:3"
																				},
																				"nativeSrc": "4748:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4748:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4738:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "4738:2:3"
																		},
																		"nativeSrc": "4738:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4738:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4731:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4731:6:3"
																},
																"nativeSrc": "4731:43:3",
																"nodeType": "YulFunctionCall",
																"src": "4731:43:3"
															},
															"nativeSrc": "4728:63:3",
															"nodeType": "YulIf",
															"src": "4728:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4675:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4711:5:3",
														"nodeType": "YulTypedName",
														"src": "4711:5:3",
														"type": ""
													}
												],
												"src": "4675:122:3"
											},
											{
												"body": {
													"nativeSrc": "4855:87:3",
													"nodeType": "YulBlock",
													"src": "4855:87:3",
													"statements": [
														{
															"nativeSrc": "4865:29:3",
															"nodeType": "YulAssignment",
															"src": "4865:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4887:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4887:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4874:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "4874:12:3"
																},
																"nativeSrc": "4874:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4874:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4865:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4865:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4930:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4930:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4903:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "4903:26:3"
																},
																"nativeSrc": "4903:33:3",
																"nodeType": "YulFunctionCall",
																"src": "4903:33:3"
															},
															"nativeSrc": "4903:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "4903:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4803:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4833:6:3",
														"nodeType": "YulTypedName",
														"src": "4833:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4841:3:3",
														"nodeType": "YulTypedName",
														"src": "4841:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4849:5:3",
														"nodeType": "YulTypedName",
														"src": "4849:5:3",
														"type": ""
													}
												],
												"src": "4803:139:3"
											},
											{
												"body": {
													"nativeSrc": "5014:263:3",
													"nodeType": "YulBlock",
													"src": "5014:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "5060:83:3",
																"nodeType": "YulBlock",
																"src": "5060:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5062:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "5062:77:3"
																			},
																			"nativeSrc": "5062:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5062:79:3"
																		},
																		"nativeSrc": "5062:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5062:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5035:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "5035:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5044:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5044:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5031:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:3"
																		},
																		"nativeSrc": "5031:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5031:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5056:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5056:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5027:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:3"
																},
																"nativeSrc": "5027:32:3",
																"nodeType": "YulFunctionCall",
																"src": "5027:32:3"
															},
															"nativeSrc": "5024:119:3",
															"nodeType": "YulIf",
															"src": "5024:119:3"
														},
														{
															"nativeSrc": "5153:117:3",
															"nodeType": "YulBlock",
															"src": "5153:117:3",
															"statements": [
																{
																	"nativeSrc": "5168:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5168:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5182:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5182:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5172:6:3",
																			"nodeType": "YulTypedName",
																			"src": "5172:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5197:63:3",
																	"nodeType": "YulAssignment",
																	"src": "5197:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5232:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "5232:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5243:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "5243:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5228:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5228:3:3"
																				},
																				"nativeSrc": "5228:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5228:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5252:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "5252:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5207:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "5207:20:3"
																		},
																		"nativeSrc": "5207:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5207:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5197:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5197:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4948:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4984:9:3",
														"nodeType": "YulTypedName",
														"src": "4984:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4995:7:3",
														"nodeType": "YulTypedName",
														"src": "4995:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5007:6:3",
														"nodeType": "YulTypedName",
														"src": "5007:6:3",
														"type": ""
													}
												],
												"src": "4948:329:3"
											},
											{
												"body": {
													"nativeSrc": "5389:59:3",
													"nodeType": "YulBlock",
													"src": "5389:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5411:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5411:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5419:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5419:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5407:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:3"
																		},
																		"nativeSrc": "5407:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5407:14:3"
																	},
																	{
																		"hexValue": "496e70757420746f6f206c61726765",
																		"kind": "string",
																		"nativeSrc": "5423:17:3",
																		"nodeType": "YulLiteral",
																		"src": "5423:17:3",
																		"type": "",
																		"value": "Input too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5400:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:3"
																},
																"nativeSrc": "5400:41:3",
																"nodeType": "YulFunctionCall",
																"src": "5400:41:3"
															},
															"nativeSrc": "5400:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "5400:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8",
												"nativeSrc": "5283:165:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5381:6:3",
														"nodeType": "YulTypedName",
														"src": "5381:6:3",
														"type": ""
													}
												],
												"src": "5283:165:3"
											},
											{
												"body": {
													"nativeSrc": "5600:220:3",
													"nodeType": "YulBlock",
													"src": "5600:220:3",
													"statements": [
														{
															"nativeSrc": "5610:74:3",
															"nodeType": "YulAssignment",
															"src": "5610:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5676:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5676:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5681:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5681:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5617:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5617:58:3"
																},
																"nativeSrc": "5617:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5617:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5610:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5782:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5782:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8",
																	"nativeSrc": "5693:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5693:88:3"
																},
																"nativeSrc": "5693:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5693:93:3"
															},
															"nativeSrc": "5693:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5693:93:3"
														},
														{
															"nativeSrc": "5795:19:3",
															"nodeType": "YulAssignment",
															"src": "5795:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5806:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5806:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5811:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5802:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5802:3:3"
																},
																"nativeSrc": "5802:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5802:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5795:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5795:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5454:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5588:3:3",
														"nodeType": "YulTypedName",
														"src": "5588:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5596:3:3",
														"nodeType": "YulTypedName",
														"src": "5596:3:3",
														"type": ""
													}
												],
												"src": "5454:366:3"
											},
											{
												"body": {
													"nativeSrc": "5997:248:3",
													"nodeType": "YulBlock",
													"src": "5997:248:3",
													"statements": [
														{
															"nativeSrc": "6007:26:3",
															"nodeType": "YulAssignment",
															"src": "6007:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6019:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6019:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6030:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6030:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6015:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:3"
																},
																"nativeSrc": "6015:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6015:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6007:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6007:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6054:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6054:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6065:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6065:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6050:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:3"
																		},
																		"nativeSrc": "6050:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6073:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6073:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6079:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6069:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:3"
																		},
																		"nativeSrc": "6069:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6069:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6043:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:3"
																},
																"nativeSrc": "6043:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6043:47:3"
															},
															"nativeSrc": "6043:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6043:47:3"
														},
														{
															"nativeSrc": "6099:139:3",
															"nodeType": "YulAssignment",
															"src": "6099:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6233:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6233:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6107:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6107:124:3"
																},
																"nativeSrc": "6107:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6107:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6099:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6099:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5826:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5977:9:3",
														"nodeType": "YulTypedName",
														"src": "5977:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5992:4:3",
														"nodeType": "YulTypedName",
														"src": "5992:4:3",
														"type": ""
													}
												],
												"src": "5826:419:3"
											},
											{
												"body": {
													"nativeSrc": "6365:34:3",
													"nodeType": "YulBlock",
													"src": "6365:34:3",
													"statements": [
														{
															"nativeSrc": "6375:18:3",
															"nodeType": "YulAssignment",
															"src": "6375:18:3",
															"value": {
																"name": "pos",
																"nativeSrc": "6390:3:3",
																"nodeType": "YulIdentifier",
																"src": "6390:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6375:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "6375:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6251:148:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6337:3:3",
														"nodeType": "YulTypedName",
														"src": "6337:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6342:6:3",
														"nodeType": "YulTypedName",
														"src": "6342:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6353:11:3",
														"nodeType": "YulTypedName",
														"src": "6353:11:3",
														"type": ""
													}
												],
												"src": "6251:148:3"
											},
											{
												"body": {
													"nativeSrc": "6511:55:3",
													"nodeType": "YulBlock",
													"src": "6511:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6533:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6533:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6541:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6541:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6529:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6529:3:3"
																		},
																		"nativeSrc": "6529:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6529:14:3"
																	},
																	{
																		"hexValue": "50726f6365737365643a20",
																		"kind": "string",
																		"nativeSrc": "6545:13:3",
																		"nodeType": "YulLiteral",
																		"src": "6545:13:3",
																		"type": "",
																		"value": "Processed: "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6522:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:3"
																},
																"nativeSrc": "6522:37:3",
																"nodeType": "YulFunctionCall",
																"src": "6522:37:3"
															},
															"nativeSrc": "6522:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "6522:37:3"
														}
													]
												},
												"name": "store_literal_in_memory_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402",
												"nativeSrc": "6405:161:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6503:6:3",
														"nodeType": "YulTypedName",
														"src": "6503:6:3",
														"type": ""
													}
												],
												"src": "6405:161:3"
											},
											{
												"body": {
													"nativeSrc": "6736:238:3",
													"nodeType": "YulBlock",
													"src": "6736:238:3",
													"statements": [
														{
															"nativeSrc": "6746:92:3",
															"nodeType": "YulAssignment",
															"src": "6746:92:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6830:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6830:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6835:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:3",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6753:76:3",
																	"nodeType": "YulIdentifier",
																	"src": "6753:76:3"
																},
																"nativeSrc": "6753:85:3",
																"nodeType": "YulFunctionCall",
																"src": "6753:85:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6746:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6936:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6936:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402",
																	"nativeSrc": "6847:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6847:88:3"
																},
																"nativeSrc": "6847:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6847:93:3"
															},
															"nativeSrc": "6847:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6847:93:3"
														},
														{
															"nativeSrc": "6949:19:3",
															"nodeType": "YulAssignment",
															"src": "6949:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6960:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6960:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6965:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6965:2:3",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6956:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:3"
																},
																"nativeSrc": "6956:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6956:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6949:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6572:402:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6724:3:3",
														"nodeType": "YulTypedName",
														"src": "6724:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6732:3:3",
														"nodeType": "YulTypedName",
														"src": "6732:3:3",
														"type": ""
													}
												],
												"src": "6572:402:3"
											},
											{
												"body": {
													"nativeSrc": "7044:84:3",
													"nodeType": "YulBlock",
													"src": "7044:84:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7068:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7068:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7073:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7073:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7078:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7078:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7055:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "7055:12:3"
																},
																"nativeSrc": "7055:30:3",
																"nodeType": "YulFunctionCall",
																"src": "7055:30:3"
															},
															"nativeSrc": "7055:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "7055:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7105:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "7105:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7110:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "7110:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7101:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:3"
																		},
																		"nativeSrc": "7101:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7101:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7119:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7119:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:3"
																},
																"nativeSrc": "7094:27:3",
																"nodeType": "YulFunctionCall",
																"src": "7094:27:3"
															},
															"nativeSrc": "7094:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "7094:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6980:148:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7026:3:3",
														"nodeType": "YulTypedName",
														"src": "7026:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7031:3:3",
														"nodeType": "YulTypedName",
														"src": "7031:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7036:6:3",
														"nodeType": "YulTypedName",
														"src": "7036:6:3",
														"type": ""
													}
												],
												"src": "6980:148:3"
											},
											{
												"body": {
													"nativeSrc": "7278:210:3",
													"nodeType": "YulBlock",
													"src": "7278:210:3",
													"statements": [
														{
															"nativeSrc": "7288:96:3",
															"nodeType": "YulAssignment",
															"src": "7288:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7372:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7372:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7377:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7377:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7295:76:3",
																	"nodeType": "YulIdentifier",
																	"src": "7295:76:3"
																},
																"nativeSrc": "7295:89:3",
																"nodeType": "YulFunctionCall",
																"src": "7295:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7288:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7431:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "7431:5:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7438:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7438:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7443:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7443:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7394:36:3",
																	"nodeType": "YulIdentifier",
																	"src": "7394:36:3"
																},
																"nativeSrc": "7394:56:3",
																"nodeType": "YulFunctionCall",
																"src": "7394:56:3"
															},
															"nativeSrc": "7394:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "7394:56:3"
														},
														{
															"nativeSrc": "7459:23:3",
															"nodeType": "YulAssignment",
															"src": "7459:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7470:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7470:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7475:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7475:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7466:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7466:3:3"
																},
																"nativeSrc": "7466:16:3",
																"nodeType": "YulFunctionCall",
																"src": "7466:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7459:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7459:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7158:330:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7251:5:3",
														"nodeType": "YulTypedName",
														"src": "7251:5:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7258:6:3",
														"nodeType": "YulTypedName",
														"src": "7258:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7266:3:3",
														"nodeType": "YulTypedName",
														"src": "7266:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7274:3:3",
														"nodeType": "YulTypedName",
														"src": "7274:3:3",
														"type": ""
													}
												],
												"src": "7158:330:3"
											},
											{
												"body": {
													"nativeSrc": "7741:314:3",
													"nodeType": "YulBlock",
													"src": "7741:314:3",
													"statements": [
														{
															"nativeSrc": "7752:155:3",
															"nodeType": "YulAssignment",
															"src": "7752:155:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7903:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7903:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7759:142:3",
																	"nodeType": "YulIdentifier",
																	"src": "7759:142:3"
																},
																"nativeSrc": "7759:148:3",
																"nodeType": "YulFunctionCall",
																"src": "7759:148:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7752:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:3"
																}
															]
														},
														{
															"nativeSrc": "7917:112:3",
															"nodeType": "YulAssignment",
															"src": "7917:112:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8008:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8008:6:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8016:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8016:6:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8025:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8025:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7924:83:3",
																	"nodeType": "YulIdentifier",
																	"src": "7924:83:3"
																},
																"nativeSrc": "7924:105:3",
																"nodeType": "YulFunctionCall",
																"src": "7924:105:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7917:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7917:3:3"
																}
															]
														},
														{
															"nativeSrc": "8039:10:3",
															"nodeType": "YulAssignment",
															"src": "8039:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "8046:3:3",
																"nodeType": "YulIdentifier",
																"src": "8046:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8039:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8039:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7494:561:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7712:3:3",
														"nodeType": "YulTypedName",
														"src": "7712:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7718:6:3",
														"nodeType": "YulTypedName",
														"src": "7718:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7726:6:3",
														"nodeType": "YulTypedName",
														"src": "7726:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7737:3:3",
														"nodeType": "YulTypedName",
														"src": "7737:3:3",
														"type": ""
													}
												],
												"src": "7494:561:3"
											},
											{
												"body": {
													"nativeSrc": "8187:215:3",
													"nodeType": "YulBlock",
													"src": "8187:215:3",
													"statements": [
														{
															"nativeSrc": "8197:78:3",
															"nodeType": "YulAssignment",
															"src": "8197:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8263:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8263:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8268:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8268:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8204:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "8204:58:3"
																},
																"nativeSrc": "8204:71:3",
																"nodeType": "YulFunctionCall",
																"src": "8204:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8197:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8197:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "8322:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "8322:5:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8329:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8329:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8334:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8334:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8285:36:3",
																	"nodeType": "YulIdentifier",
																	"src": "8285:36:3"
																},
																"nativeSrc": "8285:56:3",
																"nodeType": "YulFunctionCall",
																"src": "8285:56:3"
															},
															"nativeSrc": "8285:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "8285:56:3"
														},
														{
															"nativeSrc": "8350:46:3",
															"nodeType": "YulAssignment",
															"src": "8350:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8361:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8361:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8388:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "8388:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8366:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "8366:21:3"
																		},
																		"nativeSrc": "8366:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8366:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8357:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8357:3:3"
																},
																"nativeSrc": "8357:39:3",
																"nodeType": "YulFunctionCall",
																"src": "8357:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8350:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8085:317:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "8160:5:3",
														"nodeType": "YulTypedName",
														"src": "8160:5:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8167:6:3",
														"nodeType": "YulTypedName",
														"src": "8167:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8175:3:3",
														"nodeType": "YulTypedName",
														"src": "8175:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8183:3:3",
														"nodeType": "YulTypedName",
														"src": "8183:3:3",
														"type": ""
													}
												],
												"src": "8085:317:3"
											},
											{
												"body": {
													"nativeSrc": "8584:358:3",
													"nodeType": "YulBlock",
													"src": "8584:358:3",
													"statements": [
														{
															"nativeSrc": "8594:26:3",
															"nodeType": "YulAssignment",
															"src": "8594:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8606:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8606:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8617:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8617:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8602:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8602:3:3"
																},
																"nativeSrc": "8602:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8602:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8594:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8594:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8641:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8652:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8652:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8637:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8637:3:3"
																		},
																		"nativeSrc": "8637:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8637:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8660:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8660:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8666:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8666:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8656:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:3"
																		},
																		"nativeSrc": "8656:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8630:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8630:6:3"
																},
																"nativeSrc": "8630:47:3",
																"nodeType": "YulFunctionCall",
																"src": "8630:47:3"
															},
															"nativeSrc": "8630:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "8630:47:3"
														},
														{
															"nativeSrc": "8686:96:3",
															"nodeType": "YulAssignment",
															"src": "8686:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8760:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8760:6:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8768:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8768:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8777:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8777:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8694:65:3",
																	"nodeType": "YulIdentifier",
																	"src": "8694:65:3"
																},
																"nativeSrc": "8694:88:3",
																"nodeType": "YulFunctionCall",
																"src": "8694:88:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8686:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8686:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8803:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8803:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8814:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8814:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8799:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8799:3:3"
																		},
																		"nativeSrc": "8799:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8799:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8823:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8823:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8829:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8829:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8819:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8819:3:3"
																		},
																		"nativeSrc": "8819:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8819:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8792:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:3"
																},
																"nativeSrc": "8792:48:3",
																"nodeType": "YulFunctionCall",
																"src": "8792:48:3"
															},
															"nativeSrc": "8792:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "8792:48:3"
														},
														{
															"nativeSrc": "8849:86:3",
															"nodeType": "YulAssignment",
															"src": "8849:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8921:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8921:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8930:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8930:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8857:63:3",
																	"nodeType": "YulIdentifier",
																	"src": "8857:63:3"
																},
																"nativeSrc": "8857:78:3",
																"nodeType": "YulFunctionCall",
																"src": "8857:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8849:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8849:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8408:534:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8540:9:3",
														"nodeType": "YulTypedName",
														"src": "8540:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8552:6:3",
														"nodeType": "YulTypedName",
														"src": "8552:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8560:6:3",
														"nodeType": "YulTypedName",
														"src": "8560:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8568:6:3",
														"nodeType": "YulTypedName",
														"src": "8568:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8579:4:3",
														"nodeType": "YulTypedName",
														"src": "8579:4:3",
														"type": ""
													}
												],
												"src": "8408:534:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input too large\")\n\n    }\n\n    function abi_encode_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402(memPtr) {\n\n        mstore(add(memPtr, 0), \"Processed: \")\n\n    }\n\n    function abi_encode_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 11)\n        store_literal_in_memory_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402(pos)\n        end := add(pos, 11)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_t_string_calldata_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80635f493a8714610064578063715018a6146100945780638da5cb5b1461009e578063d06a89a4146100bc578063dc2f7867146100da578063f2fde38b146100f6575b5f80fd5b61007e6004803603810190610079919061046b565b610112565b60405161008b9190610526565b60405180910390f35b61009c6101dd565b005b6100a66101f0565b6040516100b39190610585565b60405180910390f35b6100c4610217565b6040516100d191906105b6565b60405180910390f35b6100f460048036038101906100ef91906105f9565b61021d565b005b610110600480360381019061010b919061064e565b61022f565b005b606060015483839050111561015c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610153906106c3565b60405180910390fd5b5f8383604051602001610170929190610767565b60405160208183030381529060405290503373ffffffffffffffffffffffffffffffffffffffff167fc436644274e16b096d0d0df2fbda7162116c56a836b64d4f2a9d52fb86d774268585846040516101cb939291906107b6565b60405180910390a28091505092915050565b6101e56102b3565b6101ee5f61033a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b6102256102b3565b8060018190555050565b6102376102b3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161029e9190610585565b60405180910390fd5b6102b08161033a565b50565b6102bb6103fb565b73ffffffffffffffffffffffffffffffffffffffff166102d96101f0565b73ffffffffffffffffffffffffffffffffffffffff1614610338576102fc6103fb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161032f9190610585565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261042b5761042a61040a565b5b8235905067ffffffffffffffff8111156104485761044761040e565b5b60208301915083600182028301111561046457610463610412565b5b9250929050565b5f806020838503121561048157610480610402565b5b5f83013567ffffffffffffffff81111561049e5761049d610406565b5b6104aa85828601610416565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6104f8826104b6565b61050281856104c0565b93506105128185602086016104d0565b61051b816104de565b840191505092915050565b5f6020820190508181035f83015261053e81846104ee565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056f82610546565b9050919050565b61057f81610565565b82525050565b5f6020820190506105985f830184610576565b92915050565b5f819050919050565b6105b08161059e565b82525050565b5f6020820190506105c95f8301846105a7565b92915050565b6105d88161059e565b81146105e2575f80fd5b50565b5f813590506105f3816105cf565b92915050565b5f6020828403121561060e5761060d610402565b5b5f61061b848285016105e5565b91505092915050565b61062d81610565565b8114610637575f80fd5b50565b5f8135905061064881610624565b92915050565b5f6020828403121561066357610662610402565b5b5f6106708482850161063a565b91505092915050565b7f496e70757420746f6f206c6172676500000000000000000000000000000000005f82015250565b5f6106ad600f836104c0565b91506106b882610679565b602082019050919050565b5f6020820190508181035f8301526106da816106a1565b9050919050565b5f81905092915050565b7f50726f6365737365643a200000000000000000000000000000000000000000005f82015250565b5f61071f600b836106e1565b915061072a826106eb565b600b82019050919050565b828183375f83830152505050565b5f61074e83856106e1565b935061075b838584610735565b82840190509392505050565b5f61077182610713565b915061077e828486610743565b91508190509392505050565b5f61079583856104c0565b93506107a2838584610735565b6107ab836104de565b840190509392505050565b5f6040820190508181035f8301526107cf81858761078a565b905081810360208301526107e381846104ee565b905094935050505056fea264697066735822122083140ff2c5ae2a32e24a78957a88d2d2fd4b2bdf9245fdde01692f686b70243f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F493A87 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0xD06A89A4 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xDC2F7867 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 SLOAD DUP4 DUP4 SWAP1 POP GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x170 SWAP3 SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC436644274E16B096D0D0DF2FBDA7162116C56A836B64D4F2A9D52FB86D77426 DUP6 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x1EE PUSH0 PUSH2 0x33A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x2B3 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x2B3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B0 DUP2 PUSH2 0x33A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x3FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D9 PUSH2 0x1F0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x338 JUMPI PUSH2 0x2FC PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x40A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x447 PUSH2 0x40E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0x412 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x481 JUMPI PUSH2 0x480 PUSH2 0x402 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49E JUMPI PUSH2 0x49D PUSH2 0x406 JUMP JUMPDEST JUMPDEST PUSH2 0x4AA DUP6 DUP3 DUP7 ADD PUSH2 0x416 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4F8 DUP3 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x502 DUP2 DUP6 PUSH2 0x4C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x512 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x51B DUP2 PUSH2 0x4DE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x53E DUP2 DUP5 PUSH2 0x4EE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x56F DUP3 PUSH2 0x546 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57F DUP2 PUSH2 0x565 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x598 PUSH0 DUP4 ADD DUP5 PUSH2 0x576 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH2 0x59E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D8 DUP2 PUSH2 0x59E JUMP JUMPDEST DUP2 EQ PUSH2 0x5E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5F3 DUP2 PUSH2 0x5CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60E JUMPI PUSH2 0x60D PUSH2 0x402 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x61B DUP5 DUP3 DUP6 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x565 JUMP JUMPDEST DUP2 EQ PUSH2 0x637 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x648 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x663 JUMPI PUSH2 0x662 PUSH2 0x402 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x670 DUP5 DUP3 DUP6 ADD PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E70757420746F6F206C617267650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6AD PUSH1 0xF DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x6B8 DUP3 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6DA DUP2 PUSH2 0x6A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F6365737365643A20000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x71F PUSH1 0xB DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A DUP3 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0xB DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x74E DUP4 DUP6 PUSH2 0x6E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x75B DUP4 DUP6 DUP5 PUSH2 0x735 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x771 DUP3 PUSH2 0x713 JUMP JUMPDEST SWAP2 POP PUSH2 0x77E DUP3 DUP5 DUP7 PUSH2 0x743 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x795 DUP4 DUP6 PUSH2 0x4C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x7A2 DUP4 DUP6 DUP5 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x7AB DUP4 PUSH2 0x4DE JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7CF DUP2 DUP6 DUP8 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7E3 DUP2 DUP5 PUSH2 0x4EE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 EQ 0xF CALLCODE 0xC5 0xAE 0x2A ORIGIN 0xE2 BLOBBASEFEE PUSH25 0x957A88D2D2FD4B2BDF9245FDDE01692F686B70243F64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "259:774:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:364;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:30:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;575:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;667:364:2;732:13;788:9;;771:5;;765:19;;:32;;757:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;856:20;918:5;;886:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;856:69;;974:10;959:41;;;986:5;;993:6;959:41;;;;;;;;:::i;:::-;;;;;;;;1018:6;1011:13;;;667:364;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;383:30:2:-;;;;:::o;575:86::-;1531:13:0;:11;:13::i;:::-;651:3:2::1;639:9;:15;;;;575:86:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;717:553;775:8;785:6;835:3;828:4;820:6;816:17;812:27;802:122;;843:79;;:::i;:::-;802:122;956:6;943:20;933:30;;986:18;978:6;975:30;972:117;;;1008:79;;:::i;:::-;972:117;1122:4;1114:6;1110:17;1098:29;;1176:3;1168:4;1160:6;1156:17;1146:8;1142:32;1139:41;1136:128;;;1183:79;;:::i;:::-;1136:128;717:553;;;;;:::o;1276:529::-;1347:6;1355;1404:2;1392:9;1383:7;1379:23;1375:32;1372:119;;;1410:79;;:::i;:::-;1372:119;1558:1;1547:9;1543:17;1530:31;1588:18;1580:6;1577:30;1574:117;;;1610:79;;:::i;:::-;1574:117;1723:65;1780:7;1771:6;1760:9;1756:22;1723:65;:::i;:::-;1705:83;;;;1501:297;1276:529;;;;;:::o;1811:99::-;1863:6;1897:5;1891:12;1881:22;;1811:99;;;:::o;1916:169::-;2000:11;2034:6;2029:3;2022:19;2074:4;2069:3;2065:14;2050:29;;1916:169;;;;:::o;2091:139::-;2180:6;2175:3;2170;2164:23;2221:1;2212:6;2207:3;2203:16;2196:27;2091:139;;;:::o;2236:102::-;2277:6;2328:2;2324:7;2319:2;2312:5;2308:14;2304:28;2294:38;;2236:102;;;:::o;2344:377::-;2432:3;2460:39;2493:5;2460:39;:::i;:::-;2515:71;2579:6;2574:3;2515:71;:::i;:::-;2508:78;;2595:65;2653:6;2648:3;2641:4;2634:5;2630:16;2595:65;:::i;:::-;2685:29;2707:6;2685:29;:::i;:::-;2680:3;2676:39;2669:46;;2436:285;2344:377;;;;:::o;2727:313::-;2840:4;2878:2;2867:9;2863:18;2855:26;;2927:9;2921:4;2917:20;2913:1;2902:9;2898:17;2891:47;2955:78;3028:4;3019:6;2955:78;:::i;:::-;2947:86;;2727:313;;;;:::o;3046:126::-;3083:7;3123:42;3116:5;3112:54;3101:65;;3046:126;;;:::o;3178:96::-;3215:7;3244:24;3262:5;3244:24;:::i;:::-;3233:35;;3178:96;;;:::o;3280:118::-;3367:24;3385:5;3367:24;:::i;:::-;3362:3;3355:37;3280:118;;:::o;3404:222::-;3497:4;3535:2;3524:9;3520:18;3512:26;;3548:71;3616:1;3605:9;3601:17;3592:6;3548:71;:::i;:::-;3404:222;;;;:::o;3632:77::-;3669:7;3698:5;3687:16;;3632:77;;;:::o;3715:118::-;3802:24;3820:5;3802:24;:::i;:::-;3797:3;3790:37;3715:118;;:::o;3839:222::-;3932:4;3970:2;3959:9;3955:18;3947:26;;3983:71;4051:1;4040:9;4036:17;4027:6;3983:71;:::i;:::-;3839:222;;;;:::o;4067:122::-;4140:24;4158:5;4140:24;:::i;:::-;4133:5;4130:35;4120:63;;4179:1;4176;4169:12;4120:63;4067:122;:::o;4195:139::-;4241:5;4279:6;4266:20;4257:29;;4295:33;4322:5;4295:33;:::i;:::-;4195:139;;;;:::o;4340:329::-;4399:6;4448:2;4436:9;4427:7;4423:23;4419:32;4416:119;;;4454:79;;:::i;:::-;4416:119;4574:1;4599:53;4644:7;4635:6;4624:9;4620:22;4599:53;:::i;:::-;4589:63;;4545:117;4340:329;;;;:::o;4675:122::-;4748:24;4766:5;4748:24;:::i;:::-;4741:5;4738:35;4728:63;;4787:1;4784;4777:12;4728:63;4675:122;:::o;4803:139::-;4849:5;4887:6;4874:20;4865:29;;4903:33;4930:5;4903:33;:::i;:::-;4803:139;;;;:::o;4948:329::-;5007:6;5056:2;5044:9;5035:7;5031:23;5027:32;5024:119;;;5062:79;;:::i;:::-;5024:119;5182:1;5207:53;5252:7;5243:6;5232:9;5228:22;5207:53;:::i;:::-;5197:63;;5153:117;4948:329;;;;:::o;5283:165::-;5423:17;5419:1;5411:6;5407:14;5400:41;5283:165;:::o;5454:366::-;5596:3;5617:67;5681:2;5676:3;5617:67;:::i;:::-;5610:74;;5693:93;5782:3;5693:93;:::i;:::-;5811:2;5806:3;5802:12;5795:19;;5454:366;;;:::o;5826:419::-;5992:4;6030:2;6019:9;6015:18;6007:26;;6079:9;6073:4;6069:20;6065:1;6054:9;6050:17;6043:47;6107:131;6233:4;6107:131;:::i;:::-;6099:139;;5826:419;;;:::o;6251:148::-;6353:11;6390:3;6375:18;;6251:148;;;;:::o;6405:161::-;6545:13;6541:1;6533:6;6529:14;6522:37;6405:161;:::o;6572:402::-;6732:3;6753:85;6835:2;6830:3;6753:85;:::i;:::-;6746:92;;6847:93;6936:3;6847:93;:::i;:::-;6965:2;6960:3;6956:12;6949:19;;6572:402;;;:::o;6980:148::-;7078:6;7073:3;7068;7055:30;7119:1;7110:6;7105:3;7101:16;7094:27;6980:148;;;:::o;7158:330::-;7274:3;7295:89;7377:6;7372:3;7295:89;:::i;:::-;7288:96;;7394:56;7443:6;7438:3;7431:5;7394:56;:::i;:::-;7475:6;7470:3;7466:16;7459:23;;7158:330;;;;;:::o;7494:561::-;7737:3;7759:148;7903:3;7759:148;:::i;:::-;7752:155;;7924:105;8025:3;8016:6;8008;7924:105;:::i;:::-;7917:112;;8046:3;8039:10;;7494:561;;;;;:::o;8085:317::-;8183:3;8204:71;8268:6;8263:3;8204:71;:::i;:::-;8197:78;;8285:56;8334:6;8329:3;8322:5;8285:56;:::i;:::-;8366:29;8388:6;8366:29;:::i;:::-;8361:3;8357:39;8350:46;;8085:317;;;;;:::o;8408:534::-;8579:4;8617:2;8606:9;8602:18;8594:26;;8666:9;8660:4;8656:20;8652:1;8641:9;8637:17;8630:47;8694:88;8777:4;8768:6;8760;8694:88;:::i;:::-;8686:96;;8829:9;8823:4;8819:20;8814:2;8803:9;8799:18;8792:48;8857:78;8930:4;8921:6;8857:78;:::i;:::-;8849:86;;8408:534;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"gatewayProcess(string)": "infinite",
								"maxLength()": "2469",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"setMaxLength(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 410,
									"end": 413,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 383,
									"end": 413,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 383,
									"end": 413,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 440,
									"end": 569,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 569,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 440,
									"end": 569,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 1033,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083140ff2c5ae2a32e24a78957a88d2d2fd4b2bdf9245fdde01692f686b70243f64736f6c634300081a0033",
									".code": [
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "5F493A87"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "D06A89A4"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "DC2F7867"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 259,
											"end": 1033,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 667,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 667,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 667,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 383,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 575,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 575,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 788,
											"end": 797,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 797,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 771,
											"end": 776,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 771,
											"end": 776,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 765,
											"end": 784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 765,
											"end": 784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 765,
											"end": 797,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 765,
											"end": 797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 757,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 757,
											"end": 817,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 757,
											"end": 817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 923,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 918,
											"end": 923,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 886,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 886,
											"end": 924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 984,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "C436644274E16B096D0D0DF2FBDA7162116C56A836B64D4F2A9D52FB86D77426"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 993,
											"end": 999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1000,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 413,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 383,
											"end": 413,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 383,
											"end": 413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 575,
											"end": 661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 639,
											"end": 648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 639,
											"end": 654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 639,
											"end": 654,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 639,
											"end": 654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 575,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 835,
											"end": 838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 816,
											"end": 833,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 812,
											"end": 839,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 802,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 843,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 802,
											"end": 924,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 943,
											"end": 963,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 933,
											"end": 963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 975,
											"end": 1005,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1008,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1160,
											"end": 1166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1173,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1154,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1180,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1183,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 717,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1402,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1410,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1610,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1769,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1723,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1501,
											"end": 1798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1910,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1811,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 1903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2085,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1916,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2022,
											"end": 2041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2069,
											"end": 2072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2175,
											"end": 2178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2173,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "MCOPY",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2218,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2338,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2236,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2312,
											"end": 2317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2721,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2344,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2460,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2499,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2460,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2579,
											"end": 2585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2515,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2515,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2586,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2639,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2595,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2660,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2595,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2707,
											"end": 2713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2685,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2685,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 3040,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2727,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 2937,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3028,
											"end": 3032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2955,
											"end": 3033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 3033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 3040,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 3040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 3040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 3040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3172,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3046,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3166,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3166,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3101,
											"end": 3166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3172,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3178,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3262,
											"end": 3267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3244,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3233,
											"end": 3268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3233,
											"end": 3268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3398,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3280,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3367,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3362,
											"end": 3365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3626,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3537,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3601,
											"end": 3618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3548,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3619,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3548,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3709,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3632,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3802,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3802,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3790,
											"end": 3827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 4061,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3839,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3959,
											"end": 3968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3947,
											"end": 3973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3947,
											"end": 3973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4049,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4053,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3983,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4054,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3983,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 4061,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 4061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 4061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 4061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3839,
											"end": 4061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4189,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4067,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4158,
											"end": 4163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4140,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4133,
											"end": 4138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4165,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4120,
											"end": 4183,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4169,
											"end": 4181,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4183,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4120,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4334,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4195,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4266,
											"end": 4286,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4257,
											"end": 4286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4257,
											"end": 4286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4322,
											"end": 4327,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4295,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4328,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4295,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4334,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4340,
											"end": 4669,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4340,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4434,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4446,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4451,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4416,
											"end": 4535,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4454,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4454,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 4533,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4454,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4535,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4416,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4575,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4644,
											"end": 4651,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 4642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4599,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4652,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4599,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4652,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4340,
											"end": 4669,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4340,
											"end": 4669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4340,
											"end": 4669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4340,
											"end": 4669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4340,
											"end": 4669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4766,
											"end": 4771,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4748,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4741,
											"end": 4746,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4738,
											"end": 4773,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4728,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4942,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4803,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4894,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4930,
											"end": 4935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4903,
											"end": 4936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4936,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4903,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4942,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4803,
											"end": 4942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5035,
											"end": 5042,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5059,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5062,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5252,
											"end": 5259,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 5249,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5207,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5197,
											"end": 5260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5448,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5283,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 3,
											"value": "496E70757420746F6F206C617267650000000000000000000000000000000000"
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5407,
											"end": 5421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5400,
											"end": 5441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5454,
											"end": 5820,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5454,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5681,
											"end": 5683,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 5676,
											"end": 5679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5617,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5617,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5617,
											"end": 5684,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5617,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5693,
											"end": 5786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5786,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5693,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5802,
											"end": 5814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5454,
											"end": 5820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5454,
											"end": 5820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5454,
											"end": 5820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5454,
											"end": 5820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6245,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5826,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5992,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 6033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 6033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6073,
											"end": 6077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6063,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6043,
											"end": 6090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6107,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6233,
											"end": 6237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6107,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6107,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6107,
											"end": 6238,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 6107,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6099,
											"end": 6238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6399,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6251,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6353,
											"end": 6364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6399,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6399,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6251,
											"end": 6399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6566,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6405,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6558,
											"name": "PUSH",
											"source": 3,
											"value": "50726F6365737365643A20000000000000000000000000000000000000000000"
										},
										{
											"begin": 6541,
											"end": 6542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6529,
											"end": 6543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6522,
											"end": 6559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6974,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6572,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 6830,
											"end": 6833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6753,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6753,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6746,
											"end": 6838,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6746,
											"end": 6838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6847,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6965,
											"end": 6967,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7128,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6980,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7071,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7055,
											"end": 7085,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7116,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7101,
											"end": 7117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7094,
											"end": 7121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7274,
											"end": 7277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7295,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7377,
											"end": 7383,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 7295,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7384,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7295,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7394,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7441,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7394,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7394,
											"end": 7450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7394,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7394,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7473,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7466,
											"end": 7482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7740,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7759,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7759,
											"end": 7907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7759,
											"end": 7907,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7759,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7752,
											"end": 7907,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7752,
											"end": 7907,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8025,
											"end": 8028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 7924,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7924,
											"end": 8029,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7924,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8039,
											"end": 8049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8039,
											"end": 8049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 8055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8183,
											"end": 8186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8204,
											"end": 8275,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8204,
											"end": 8275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8204,
											"end": 8275,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8204,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8197,
											"end": 8275,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8197,
											"end": 8275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 8334,
											"end": 8340,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8327,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 8285,
											"end": 8341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8285,
											"end": 8341,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 8285,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 8366,
											"end": 8395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8395,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8366,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8364,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8350,
											"end": 8396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8350,
											"end": 8396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8619,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8594,
											"end": 8620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8666,
											"end": 8675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8656,
											"end": 8676,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8652,
											"end": 8653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8650,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8768,
											"end": 8774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 8694,
											"end": 8782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8782,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8694,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8686,
											"end": 8782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8686,
											"end": 8782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 8838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8816,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8803,
											"end": 8812,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8857,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8930,
											"end": 8934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8921,
											"end": 8927,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8857,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 8857,
											"end": 8935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8857,
											"end": 8935,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8857,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8408,
											"end": 8942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"gatewayProcess(string)": "5f493a87",
							"maxLength()": "d06a89a4",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMaxLength(uint256)": "dc2f7867",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"request\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"response\",\"type\":\"string\"}],\"name\":\"GatewayProcess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"gatewayProcess\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"setMaxLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A safer gateway: - validates input length - optional role-based or signature-based checks - sanitized storage or limited calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/Common Gateway Interface/Secured \\u201cCGI-like\\u201d On-Chain Gateway defense.sol\":\"SecureGateway\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"C/Common Gateway Interface/Secured \\u201cCGI-like\\u201d On-Chain Gateway defense.sol\":{\"keccak256\":\"0x50f6e234e56012f570e03f06f622cfc6db12b59dc5cf3bde1479c6e0cef6eedf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a98b633013002fe8b98faf79a8a3be44a0e3af289aba0587fc0ba87a77bc34ce\",\"dweb:/ipfs/QmRjedAmRwx4jXBP5gHFyuFRAnK1A6mEo3BWJiwAMP5mpf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol:SecureGateway",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 194,
								"contract": "C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol:SecureGateway",
								"label": "maxLength",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A safer gateway: - validates input length - optional role-based or signature-based checks - sanitized storage or limited calls",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol": {
				"ast": {
					"absolutePath": "C/Common Gateway Interface/Secured “CGI-like” On-Chain Gateway defense.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"SecureGateway": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 256,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "Ownable",
										"nameLocations": [
											"285:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "285:7:2"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "285:7:2"
								}
							],
							"canonicalName": "SecureGateway",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "112:146:2",
								"text": " A safer gateway:\n - validates input length\n - optional role-based or signature-based checks\n - sanitized storage or limited calls"
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255,
								147,
								177
							],
							"name": "SecureGateway",
							"nameLocation": "268:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "c436644274e16b096d0d0df2fbda7162116c56a836b64d4f2a9d52fb86d77426",
									"id": 191,
									"name": "GatewayProcess",
									"nameLocation": "305:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "336:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "320:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": false,
												"mutability": "mutable",
												"name": "request",
												"nameLocation": "351:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "344:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "344:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "response",
												"nameLocation": "367:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "360:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "360:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:57:2"
									},
									"src": "299:78:2"
								},
								{
									"constant": false,
									"functionSelector": "d06a89a4",
									"id": 194,
									"mutability": "mutable",
									"name": "maxLength",
									"nameLocation": "398:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 255,
									"src": "383:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "410:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "496:73:2",
										"statements": []
									},
									"id": 203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 199,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "482:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 200,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 198,
												"name": "Ownable",
												"nameLocations": [
													"474:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "474:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "474:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "460:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "452:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:22:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:2"
									},
									"scope": 255,
									"src": "440:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "629:32:2",
										"statements": [
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 210,
														"name": "maxLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "639:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "651:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "639:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "639:15:2"
											}
										]
									},
									"functionSelector": "dc2f7867",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 207,
												"name": "onlyOwner",
												"nameLocations": [
													"619:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "619:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "619:9:2"
										}
									],
									"name": "setMaxLength",
									"nameLocation": "584:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "605:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "597:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:13:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:2"
									},
									"scope": 255,
									"src": "575:86:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "747:284:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "input",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "771:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "765:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 223,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "765:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "765:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "778:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "765:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 228,
																"name": "maxLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "788:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "765:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e70757420746f6f206c61726765",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "799:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8",
																"typeString": "literal_string \"Input too large\""
															},
															"value": "Input too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2298fa7390194af5452751aa3ddd6b1a49fb3790ca3e59bb4983b474e6aa2ed8",
																"typeString": "literal_string \"Input too large\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "757:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "757:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "757:60:2"
											},
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "output",
														"nameLocation": "870:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "856:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 233,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "856:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "50726f6365737365643a20",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "903:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402",
																		"typeString": "literal_string \"Processed: \""
																	},
																	"value": "Processed: "
																},
																{
																	"id": 240,
																	"name": "input",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "918:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2b963a7b7c58058c8bb3d9738d620879f03c47893da6c5e90e9b8aa2fd1c4402",
																		"typeString": "literal_string \"Processed: \""
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 237,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "886:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "890:12:2",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "886:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:38:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "879:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 235,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "879:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "879:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "856:69:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 245,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "974:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "978:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "974:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 248,
															"name": "output",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "993:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 244,
														"name": "GatewayProcess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "959:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory,string memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "EmitStatement",
												"src": "954:46:2"
											},
											{
												"expression": {
													"id": 251,
													"name": "output",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "1018:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 252,
												"nodeType": "Return",
												"src": "1011:13:2"
											}
										]
									},
									"functionSelector": "5f493a87",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gatewayProcess",
									"nameLocation": "676:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "707:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "691:21:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "691:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:23:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "732:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 219,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "732:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:15:2"
									},
									"scope": 255,
									"src": "667:364:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 256,
							"src": "259:774:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								191
							]
						}
					],
					"src": "32:1002:2"
				},
				"id": 2
			}
		}
	}
}