{
	"id": "c9e45beeae0702303a1069b2543a27e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/Cost Benefit Analysis/NoCostCheck.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract NoCostCheck {\n    function trigger() external {\n        // Anyone can execute â€” no check for benefit\n        // May drain gas, trigger side effects, or spam logs\n        for (uint256 i = 0; i < 1000; i++) {\n            emit Triggered(i);\n        }\n    }\n\n    event Triggered(uint256 n);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"C/Cost Benefit Analysis/NoCostCheck.sol": {
				"NoCostCheck": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "Triggered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "trigger",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":58:357  contract NoCostCheck {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":58:357  contract NoCostCheck {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7fec8d38\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":85:322  function trigger() external {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":244:253  uint256 i */\n      0x00\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":239:316  for (uint256 i = 0; i < 1000; i++) {... */\n    tag_7:\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":263:267  1000 */\n      0x03e8\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":259:260  i */\n      dup2\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":259:267  i < 1000 */\n      lt\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":239:316  for (uint256 i = 0; i < 1000; i++) {... */\n      iszero\n      tag_8\n      jumpi\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":293:305  Triggered(i) */\n      0xcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":303:304  i */\n      dup2\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":293:305  Triggered(i) */\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":269:272  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":239:316  for (uint256 i = 0; i < 1000; i++) {... */\n      jump(tag_7)\n    tag_8:\n      pop\n        /* \"C/Cost Benefit Analysis/NoCostCheck.sol\":85:322  function trigger() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_12:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_13:\n        /* \"#utility.yul\":177:201   */\n      tag_17\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_12\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_19\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_13\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220104fa501d71a822c9aecab3f7f5762421ad0d1a9e7e4633cf037f293c28587e064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060e48061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80637fec8d3814602a575b5f80fd5b60306032565b005b5f5b6103e8811015607e577fcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb81604051606a91906097565b60405180910390a180806001019150506034565b50565b5f819050919050565b6091816081565b82525050565b5f60208201905060a85f830184608a565b9291505056fea2646970667358221220104fa501d71a822c9aecab3f7f5762421ad0d1a9e7e4633cf037f293c28587e064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE4 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEC8D38 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH1 0x7E JUMPI PUSH32 0xCDEBA0448CAFA891383055F46F2FEC420E049FAB5171B5B30B5458C0320F68FB DUP2 PUSH1 0x40 MLOAD PUSH1 0x6A SWAP2 SWAP1 PUSH1 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x34 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x91 DUP2 PUSH1 0x81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA8 PUSH0 DUP4 ADD DUP5 PUSH1 0x8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x4F 0xA5 ADD 0xD7 BYTE DUP3 0x2C SWAP11 0xEC 0xAB EXTCODEHASH PUSH32 0x5762421AD0D1A9E7E4633CF037F293C28587E064736F6C634300081A00330000 ",
							"sourceMap": "58:299:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@trigger_21": {
									"entryPoint": 50,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:439:1",
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c80637fec8d3814602a575b5f80fd5b60306032565b005b5f5b6103e8811015607e577fcdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb81604051606a91906097565b60405180910390a180806001019150506034565b50565b5f819050919050565b6091816081565b82525050565b5f60208201905060a85f830184608a565b9291505056fea2646970667358221220104fa501d71a822c9aecab3f7f5762421ad0d1a9e7e4633cf037f293c28587e064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FEC8D38 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x32 JUMP JUMPDEST STOP JUMPDEST PUSH0 JUMPDEST PUSH2 0x3E8 DUP2 LT ISZERO PUSH1 0x7E JUMPI PUSH32 0xCDEBA0448CAFA891383055F46F2FEC420E049FAB5171B5B30B5458C0320F68FB DUP2 PUSH1 0x40 MLOAD PUSH1 0x6A SWAP2 SWAP1 PUSH1 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0x34 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x91 DUP2 PUSH1 0x81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA8 PUSH0 DUP4 ADD DUP5 PUSH1 0x8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x4F 0xA5 ADD 0xD7 BYTE DUP3 0x2C SWAP11 0xEC 0xAB EXTCODEHASH PUSH32 0x5762421AD0D1A9E7E4633CF037F293C28587E064736F6C634300081A00330000 ",
							"sourceMap": "58:299:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:237;;;:::i;:::-;;;244:9;239:77;263:4;259:1;:8;239:77;;;293:12;303:1;293:12;;;;;;:::i;:::-;;;;;;;;269:3;;;;;;;239:77;;;;85:237::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "45600",
								"executionCost": "97",
								"totalCost": "45697"
							},
							"external": {
								"trigger()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 357,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220104fa501d71a822c9aecab3f7f5762421ad0d1a9e7e4633cf037f293c28587e064736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "7FEC8D38"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 85,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 85,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 85,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 322,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 244,
											"end": 253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 239,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 259,
											"end": 260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 259,
											"end": 267,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 239,
											"end": 316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 239,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 239,
											"end": 316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "PUSH",
											"source": 0,
											"value": "CDEBA0448CAFA891383055F46F2FEC420E049FAB5171B5B30B5458C0320F68FB"
										},
										{
											"begin": 303,
											"end": 304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 293,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 305,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 269,
											"end": 272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 239,
											"end": 316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 239,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"C/Cost Benefit Analysis/NoCostCheck.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"trigger()": "7fec8d38"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"Triggered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/Cost Benefit Analysis/NoCostCheck.sol\":\"NoCostCheck\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"C/Cost Benefit Analysis/NoCostCheck.sol\":{\"keccak256\":\"0x73c5c555507f3f5ed57e446de6317c1a899eaea4b8d6fb7aae69d41dd1c051d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f486364243a4798bb87771edc1bf56e017357379b1f9c2871b4e2fa129923456\",\"dweb:/ipfs/QmfPZGtV2dsD1viQ4JrcED1Fb5UWYsLtuYchvnka8isScx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"C/Cost Benefit Analysis/NoCostCheck.sol": {
				"ast": {
					"absolutePath": "C/Cost Benefit Analysis/NoCostCheck.sol",
					"exportedSymbols": {
						"NoCostCheck": [
							26
						]
					},
					"id": 27,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NoCostCheck",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "NoCostCheck",
							"nameLocation": "67:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "113:209:0",
										"statements": [
											{
												"body": {
													"id": 18,
													"nodeType": "Block",
													"src": "274:42:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 15,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "303:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 14,
																	"name": "Triggered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "293:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "293:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 17,
															"nodeType": "EmitStatement",
															"src": "288:17:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "259:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "259:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "252:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 19,
															"src": "244:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "244:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "244:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "269:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "269:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "269:3:0"
												},
												"nodeType": "ForStatement",
												"src": "239:77:0"
											}
										]
									},
									"functionSelector": "7fec8d38",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trigger",
									"nameLocation": "94:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "101:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:0:0"
									},
									"scope": 26,
									"src": "85:237:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "cdeba0448cafa891383055f46f2fec420e049fab5171b5b30b5458c0320f68fb",
									"id": 25,
									"name": "Triggered",
									"nameLocation": "334:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "352:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "344:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:11:0"
									},
									"src": "328:27:0"
								}
							],
							"scope": 27,
							"src": "58:299:0",
							"usedErrors": [],
							"usedEvents": [
								25
							]
						}
					],
					"src": "32:326:0"
				},
				"id": 0
			}
		}
	}
}