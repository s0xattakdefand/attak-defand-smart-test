{
	"id": "a45f338b6ff4d3e542cc86a7044c3b11",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/Collision/Double-Hash or Alternate Hashing Approach.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * Other Type D: Double-hash or alternate hashing approach\n * to reduce collision concerns or match external protocols.\n */\ncontract DoubleHash {\n    /**\n     * @dev Double-hash: keccak256( keccak256(data) ).\n     * Overkill for typical usage, but used in certain bridging or legacy designs.\n     */\n    function doubleHash(bytes memory data) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(keccak256(data)));\n    }\n\n    /**\n     * @dev Example of an alternative hashing approach that you might need\n     * to match another chain's standard. Here, we do an extra keccak256 for demonstration.\n     */\n    function altDoubleHash(bytes memory data) public pure returns (bytes32) {\n        bytes32 tempHash = keccak256(abi.encodePacked(data));\n        return keccak256(abi.encodePacked(tempHash));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"C/Collision/Double-Hash or Alternate Hashing Approach.sol": {
				"DoubleHash": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "altDoubleHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "doubleHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"altDoubleHash(bytes)": {
								"details": "Example of an alternative hashing approach that you might need to match another chain's standard. Here, we do an extra keccak256 for demonstration."
							},
							"doubleHash(bytes)": {
								"details": "Double-hash: keccak256( keccak256(data) ). Overkill for typical usage, but used in certain bridging or legacy designs."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":186:889  contract DoubleHash {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":186:889  contract DoubleHash {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x10e635a5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x765f8060\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":366:503  function doubleHash(bytes memory data) public pure returns (bytes32) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":692:887  function altDoubleHash(bytes memory data) public pure returns (bytes32) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":366:503  function doubleHash(bytes memory data) public pure returns (bytes32) {... */\n    tag_8:\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":426:433  bytes32 */\n      0x00\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":489:493  data */\n      dup2\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":479:494  keccak256(data) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":462:495  abi.encodePacked(keccak256(data)) */\n      add(0x20, mload(0x40))\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":452:496  keccak256(abi.encodePacked(keccak256(data))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":445:496  return keccak256(abi.encodePacked(keccak256(data))) */\n      swap1\n      pop\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":366:503  function doubleHash(bytes memory data) public pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":692:887  function altDoubleHash(bytes memory data) public pure returns (bytes32) {... */\n    tag_13:\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":755:762  bytes32 */\n      0x00\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":774:790  bytes32 tempHash */\n      dup1\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":820:824  data */\n      dup3\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":803:825  abi.encodePacked(data) */\n      add(0x20, mload(0x40))\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":793:826  keccak256(abi.encodePacked(data)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":774:826  bytes32 tempHash = keccak256(abi.encodePacked(data)) */\n      swap1\n      pop\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":870:878  tempHash */\n      dup1\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":853:879  abi.encodePacked(tempHash) */\n      add(0x20, mload(0x40))\n      tag_21\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":843:880  keccak256(abi.encodePacked(tempHash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":836:880  return keccak256(abi.encodePacked(tempHash)) */\n      swap2\n      pop\n      pop\n        /* \"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":692:887  function altDoubleHash(bytes memory data) public pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_22:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_23:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_24:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_25:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_26:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_27:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_28:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_29:\n        /* \"#utility.yul\":957:984   */\n      tag_52\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_27\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_54\n      tag_28\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1030:1118   */\n    tag_53:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_30:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_56\n      tag_22\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_57\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_29\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1603   */\n    tag_31:\n        /* \"#utility.yul\":1357:1361   */\n      0x00\n        /* \"#utility.yul\":1447:1465   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1439:1445   */\n      dup3\n        /* \"#utility.yul\":1436:1466   */\n      gt\n        /* \"#utility.yul\":1433:1489   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1469:1487   */\n      tag_60\n      tag_28\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1433:1489   */\n    tag_59:\n        /* \"#utility.yul\":1507:1536   */\n      tag_61\n        /* \"#utility.yul\":1529:1535   */\n      dup3\n        /* \"#utility.yul\":1507:1536   */\n      tag_27\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1499:1536   */\n      swap1\n      pop\n        /* \"#utility.yul\":1591:1595   */\n      0x20\n        /* \"#utility.yul\":1585:1589   */\n      dup2\n        /* \"#utility.yul\":1581:1596   */\n      add\n        /* \"#utility.yul\":1573:1596   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1609:1757   */\n    tag_32:\n        /* \"#utility.yul\":1707:1713   */\n      dup3\n        /* \"#utility.yul\":1702:1705   */\n      dup2\n        /* \"#utility.yul\":1697:1700   */\n      dup4\n        /* \"#utility.yul\":1684:1714   */\n      calldatacopy\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1739:1745   */\n      dup4\n        /* \"#utility.yul\":1734:1737   */\n      dup4\n        /* \"#utility.yul\":1730:1746   */\n      add\n        /* \"#utility.yul\":1723:1750   */\n      mstore\n        /* \"#utility.yul\":1609:1757   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1763:2186   */\n    tag_33:\n        /* \"#utility.yul\":1840:1845   */\n      0x00\n        /* \"#utility.yul\":1865:1930   */\n      tag_64\n        /* \"#utility.yul\":1881:1929   */\n      tag_65\n        /* \"#utility.yul\":1922:1928   */\n      dup5\n        /* \"#utility.yul\":1881:1929   */\n      tag_31\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1865:1930   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1856:1930   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:1959   */\n      dup3\n        /* \"#utility.yul\":1946:1951   */\n      dup2\n        /* \"#utility.yul\":1939:1960   */\n      mstore\n        /* \"#utility.yul\":1991:1995   */\n      0x20\n        /* \"#utility.yul\":1984:1989   */\n      dup2\n        /* \"#utility.yul\":1980:1996   */\n      add\n        /* \"#utility.yul\":2029:2032   */\n      dup5\n        /* \"#utility.yul\":2020:2026   */\n      dup5\n        /* \"#utility.yul\":2015:2018   */\n      dup5\n        /* \"#utility.yul\":2011:2027   */\n      add\n        /* \"#utility.yul\":2008:2033   */\n      gt\n        /* \"#utility.yul\":2005:2117   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2036:2115   */\n      tag_67\n      tag_26\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2005:2117   */\n    tag_66:\n        /* \"#utility.yul\":2126:2180   */\n      tag_68\n        /* \"#utility.yul\":2173:2179   */\n      dup5\n        /* \"#utility.yul\":2168:2171   */\n      dup3\n        /* \"#utility.yul\":2163:2166   */\n      dup6\n        /* \"#utility.yul\":2126:2180   */\n      tag_32\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1846:2186   */\n      pop\n        /* \"#utility.yul\":1763:2186   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2543   */\n    tag_34:\n        /* \"#utility.yul\":2260:2265   */\n      0x00\n        /* \"#utility.yul\":2309:2312   */\n      dup3\n        /* \"#utility.yul\":2302:2306   */\n      0x1f\n        /* \"#utility.yul\":2294:2300   */\n      dup4\n        /* \"#utility.yul\":2290:2307   */\n      add\n        /* \"#utility.yul\":2286:2313   */\n      slt\n        /* \"#utility.yul\":2276:2398   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2317:2396   */\n      tag_71\n      tag_25\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2276:2398   */\n    tag_70:\n        /* \"#utility.yul\":2434:2440   */\n      dup2\n        /* \"#utility.yul\":2421:2441   */\n      calldataload\n        /* \"#utility.yul\":2459:2537   */\n      tag_72\n        /* \"#utility.yul\":2533:2536   */\n      dup5\n        /* \"#utility.yul\":2525:2531   */\n      dup3\n        /* \"#utility.yul\":2518:2522   */\n      0x20\n        /* \"#utility.yul\":2510:2516   */\n      dup7\n        /* \"#utility.yul\":2506:2523   */\n      add\n        /* \"#utility.yul\":2459:2537   */\n      tag_33\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2450:2537   */\n      swap2\n      pop\n        /* \"#utility.yul\":2266:2543   */\n      pop\n        /* \"#utility.yul\":2205:2543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:3056   */\n    tag_7:\n        /* \"#utility.yul\":2617:2623   */\n      0x00\n        /* \"#utility.yul\":2666:2668   */\n      0x20\n        /* \"#utility.yul\":2654:2663   */\n      dup3\n        /* \"#utility.yul\":2645:2652   */\n      dup5\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_75\n      tag_23\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2634:2753   */\n    tag_74:\n        /* \"#utility.yul\":2820:2821   */\n      0x00\n        /* \"#utility.yul\":2809:2818   */\n      dup3\n        /* \"#utility.yul\":2805:2822   */\n      add\n        /* \"#utility.yul\":2792:2823   */\n      calldataload\n        /* \"#utility.yul\":2850:2868   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2842:2848   */\n      dup2\n        /* \"#utility.yul\":2839:2869   */\n      gt\n        /* \"#utility.yul\":2836:2953   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2872:2951   */\n      tag_77\n      tag_24\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2836:2953   */\n    tag_76:\n        /* \"#utility.yul\":2977:3039   */\n      tag_78\n        /* \"#utility.yul\":3031:3038   */\n      dup5\n        /* \"#utility.yul\":3022:3028   */\n      dup3\n        /* \"#utility.yul\":3011:3020   */\n      dup6\n        /* \"#utility.yul\":3007:3029   */\n      add\n        /* \"#utility.yul\":2977:3039   */\n      tag_34\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2967:3039   */\n      swap2\n      pop\n        /* \"#utility.yul\":2763:3049   */\n      pop\n        /* \"#utility.yul\":2549:3056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3062:3139   */\n    tag_35:\n        /* \"#utility.yul\":3099:3106   */\n      0x00\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3117:3133   */\n      swap1\n      pop\n        /* \"#utility.yul\":3062:3139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3145:3263   */\n    tag_36:\n        /* \"#utility.yul\":3232:3256   */\n      tag_81\n        /* \"#utility.yul\":3250:3255   */\n      dup2\n        /* \"#utility.yul\":3232:3256   */\n      tag_35\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3227:3230   */\n      dup3\n        /* \"#utility.yul\":3220:3257   */\n      mstore\n        /* \"#utility.yul\":3145:3263   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3269:3491   */\n    tag_10:\n        /* \"#utility.yul\":3362:3366   */\n      0x00\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3389:3398   */\n      dup3\n        /* \"#utility.yul\":3385:3403   */\n      add\n        /* \"#utility.yul\":3377:3403   */\n      swap1\n      pop\n        /* \"#utility.yul\":3413:3484   */\n      tag_83\n        /* \"#utility.yul\":3481:3482   */\n      0x00\n        /* \"#utility.yul\":3470:3479   */\n      dup4\n        /* \"#utility.yul\":3466:3483   */\n      add\n        /* \"#utility.yul\":3457:3463   */\n      dup5\n        /* \"#utility.yul\":3413:3484   */\n      tag_36\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3269:3491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3497:3576   */\n    tag_37:\n        /* \"#utility.yul\":3536:3543   */\n      0x00\n        /* \"#utility.yul\":3565:3570   */\n      dup2\n        /* \"#utility.yul\":3554:3570   */\n      swap1\n      pop\n        /* \"#utility.yul\":3497:3576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3582:3739   */\n    tag_38:\n        /* \"#utility.yul\":3687:3732   */\n      tag_86\n        /* \"#utility.yul\":3707:3731   */\n      tag_87\n        /* \"#utility.yul\":3725:3730   */\n      dup3\n        /* \"#utility.yul\":3707:3731   */\n      tag_35\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3687:3732   */\n      tag_37\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3682:3685   */\n      dup3\n        /* \"#utility.yul\":3675:3733   */\n      mstore\n        /* \"#utility.yul\":3582:3739   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3745:4001   */\n    tag_17:\n        /* \"#utility.yul\":3857:3860   */\n      0x00\n        /* \"#utility.yul\":3872:3947   */\n      tag_89\n        /* \"#utility.yul\":3943:3946   */\n      dup3\n        /* \"#utility.yul\":3934:3940   */\n      dup5\n        /* \"#utility.yul\":3872:3947   */\n      tag_38\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3972:3974   */\n      0x20\n        /* \"#utility.yul\":3967:3970   */\n      dup3\n        /* \"#utility.yul\":3963:3975   */\n      add\n        /* \"#utility.yul\":3956:3975   */\n      swap2\n      pop\n        /* \"#utility.yul\":3992:3995   */\n      dup2\n        /* \"#utility.yul\":3985:3995   */\n      swap1\n      pop\n        /* \"#utility.yul\":3745:4001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4007:4105   */\n    tag_39:\n        /* \"#utility.yul\":4058:4064   */\n      0x00\n        /* \"#utility.yul\":4092:4097   */\n      dup2\n        /* \"#utility.yul\":4086:4098   */\n      mload\n        /* \"#utility.yul\":4076:4098   */\n      swap1\n      pop\n        /* \"#utility.yul\":4007:4105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4111:4258   */\n    tag_40:\n        /* \"#utility.yul\":4212:4223   */\n      0x00\n        /* \"#utility.yul\":4249:4252   */\n      dup2\n        /* \"#utility.yul\":4234:4252   */\n      swap1\n      pop\n        /* \"#utility.yul\":4111:4258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4264:4403   */\n    tag_41:\n        /* \"#utility.yul\":4353:4359   */\n      dup3\n        /* \"#utility.yul\":4348:4351   */\n      dup2\n        /* \"#utility.yul\":4343:4346   */\n      dup4\n        /* \"#utility.yul\":4337:4360   */\n      mcopy\n        /* \"#utility.yul\":4394:4395   */\n      0x00\n        /* \"#utility.yul\":4385:4391   */\n      dup4\n        /* \"#utility.yul\":4380:4383   */\n      dup4\n        /* \"#utility.yul\":4376:4392   */\n      add\n        /* \"#utility.yul\":4369:4396   */\n      mstore\n        /* \"#utility.yul\":4264:4403   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4409:4795   */\n    tag_42:\n        /* \"#utility.yul\":4513:4516   */\n      0x00\n        /* \"#utility.yul\":4541:4579   */\n      tag_94\n        /* \"#utility.yul\":4573:4578   */\n      dup3\n        /* \"#utility.yul\":4541:4579   */\n      tag_39\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":4595:4683   */\n      tag_95\n        /* \"#utility.yul\":4676:4682   */\n      dup2\n        /* \"#utility.yul\":4671:4674   */\n      dup6\n        /* \"#utility.yul\":4595:4683   */\n      tag_40\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4588:4683   */\n      swap4\n      pop\n        /* \"#utility.yul\":4692:4757   */\n      tag_96\n        /* \"#utility.yul\":4750:4756   */\n      dup2\n        /* \"#utility.yul\":4745:4748   */\n      dup6\n        /* \"#utility.yul\":4738:4742   */\n      0x20\n        /* \"#utility.yul\":4731:4736   */\n      dup7\n        /* \"#utility.yul\":4727:4743   */\n      add\n        /* \"#utility.yul\":4692:4757   */\n      tag_41\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4782:4788   */\n      dup1\n        /* \"#utility.yul\":4777:4780   */\n      dup5\n        /* \"#utility.yul\":4773:4789   */\n      add\n        /* \"#utility.yul\":4766:4789   */\n      swap2\n      pop\n        /* \"#utility.yul\":4517:4795   */\n      pop\n        /* \"#utility.yul\":4409:4795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4801:5072   */\n    tag_20:\n        /* \"#utility.yul\":4931:4934   */\n      0x00\n        /* \"#utility.yul\":4953:5046   */\n      tag_98\n        /* \"#utility.yul\":5042:5045   */\n      dup3\n        /* \"#utility.yul\":5033:5039   */\n      dup5\n        /* \"#utility.yul\":4953:5046   */\n      tag_42\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4946:5046   */\n      swap2\n      pop\n        /* \"#utility.yul\":5063:5066   */\n      dup2\n        /* \"#utility.yul\":5056:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":4801:5072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ba03601340ff6f46af657ccb65610d7f21183940ad77f6f0da86c134a0790b8d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506103c58061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806310e635a514610038578063765f806014610068575b5f80fd5b610052600480360381019061004d9190610275565b610098565b60405161005f91906102d4565b60405180910390f35b610082600480360381019061007d9190610275565b6100ce565b60405161008f91906102d4565b60405180910390f35b5f81805190602001206040516020016100b1919061030d565b604051602081830303815290604052805190602001209050919050565b5f80826040516020016100e19190610379565b6040516020818303038152906040528051906020012090508060405160200161010a919061030d565b60405160208183030381529060405280519060200120915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61018782610141565b810181811067ffffffffffffffff821117156101a6576101a5610151565b5b80604052505050565b5f6101b8610128565b90506101c4828261017e565b919050565b5f67ffffffffffffffff8211156101e3576101e2610151565b5b6101ec82610141565b9050602081019050919050565b828183375f83830152505050565b5f610219610214846101c9565b6101af565b9050828152602081018484840111156102355761023461013d565b5b6102408482856101f9565b509392505050565b5f82601f83011261025c5761025b610139565b5b813561026c848260208601610207565b91505092915050565b5f6020828403121561028a57610289610131565b5b5f82013567ffffffffffffffff8111156102a7576102a6610135565b5b6102b384828501610248565b91505092915050565b5f819050919050565b6102ce816102bc565b82525050565b5f6020820190506102e75f8301846102c5565b92915050565b5f819050919050565b610307610302826102bc565b6102ed565b82525050565b5f61031882846102f6565b60208201915081905092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61035382610327565b61035d8185610331565b935061036d81856020860161033b565b80840191505092915050565b5f6103848284610349565b91508190509291505056fea2646970667358221220ba03601340ff6f46af657ccb65610d7f21183940ad77f6f0da86c134a0790b8d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10E635A5 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x765F8060 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x275 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x275 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x187 DUP3 PUSH2 0x141 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x151 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8 PUSH2 0x128 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C4 DUP3 DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E3 JUMPI PUSH2 0x1E2 PUSH2 0x151 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC DUP3 PUSH2 0x141 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x219 PUSH2 0x214 DUP5 PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x235 JUMPI PUSH2 0x234 PUSH2 0x13D JUMP JUMPDEST JUMPDEST PUSH2 0x240 DUP5 DUP3 DUP6 PUSH2 0x1F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x139 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x207 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28A JUMPI PUSH2 0x289 PUSH2 0x131 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x135 JUMP JUMPDEST JUMPDEST PUSH2 0x2B3 DUP5 DUP3 DUP6 ADD PUSH2 0x248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x2BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x307 PUSH2 0x302 DUP3 PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x318 DUP3 DUP5 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x353 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH2 0x35D DUP2 DUP6 PUSH2 0x331 JUMP JUMPDEST SWAP4 POP PUSH2 0x36D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x384 DUP3 DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA SUB PUSH1 0x13 BLOCKHASH SELFDESTRUCT PUSH16 0x46AF657CCB65610D7F21183940AD77F6 CREATE 0xDA DUP7 0xC1 CALLVALUE LOG0 PUSH26 0xB8D64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "186:703:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@altDoubleHash_45": {
									"entryPoint": 206,
									"id": 45,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@doubleHash_20": {
									"entryPoint": 152,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5075:1",
										"nodeType": "YulBlock",
										"src": "0:5075:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "628:54:1",
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nativeSrc": "638:38:1",
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:1",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:1",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nativeSrc": "668:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nativeSrc": "648:28:1",
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:1",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:1",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nativeSrc": "716:152:1",
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:1",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nativeSrc": "726:88:1",
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nativeSrc": "726:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:1",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nativeSrc": "823:15:1",
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nativeSrc": "823:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:1",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:1",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nativeSrc": "847:15:1",
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nativeSrc": "847:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nativeSrc": "917:238:1",
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nativeSrc": "927:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nativeSrc": "957:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nativeSrc": "945:40:1",
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:1",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:1",
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nativeSrc": "1098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nativeSrc": "1098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nativeSrc": "1036:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nativeSrc": "1072:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nativeSrc": "1033:62:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nativeSrc": "1030:88:1",
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nativeSrc": "1127:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nativeSrc": "1127:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:1",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:1",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nativeSrc": "1202:88:1",
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nativeSrc": "1212:30:1",
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nativeSrc": "1222:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nativeSrc": "1251:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nativeSrc": "1251:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:1",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:1",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nativeSrc": "1362:241:1",
													"nodeType": "YulBlock",
													"src": "1362:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1467:22:1",
																"nodeType": "YulBlock",
																"src": "1467:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1469:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1469:16:1"
																			},
																			"nativeSrc": "1469:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1469:18:1"
																		},
																		"nativeSrc": "1469:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1439:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1439:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1447:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1447:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:1"
																},
																"nativeSrc": "1436:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1436:30:1"
															},
															"nativeSrc": "1433:56:1",
															"nodeType": "YulIf",
															"src": "1433:56:1"
														},
														{
															"nativeSrc": "1499:37:1",
															"nodeType": "YulAssignment",
															"src": "1499:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1529:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1507:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:21:1"
																},
																"nativeSrc": "1507:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1507:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1499:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1499:4:1"
																}
															]
														},
														{
															"nativeSrc": "1573:23:1",
															"nodeType": "YulAssignment",
															"src": "1573:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1585:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1585:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1581:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1581:3:1"
																},
																"nativeSrc": "1581:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1581:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1573:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1573:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "1296:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1346:6:1",
														"nodeType": "YulTypedName",
														"src": "1346:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1357:4:1",
														"nodeType": "YulTypedName",
														"src": "1357:4:1",
														"type": ""
													}
												],
												"src": "1296:307:1"
											},
											{
												"body": {
													"nativeSrc": "1673:84:1",
													"nodeType": "YulBlock",
													"src": "1673:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1697:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1702:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1702:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1707:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1707:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1684:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1684:12:1"
																},
																"nativeSrc": "1684:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1684:30:1"
															},
															"nativeSrc": "1684:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "1684:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nativeSrc": "1730:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1730:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1748:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1748:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1723:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:1"
																},
																"nativeSrc": "1723:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1723:27:1"
															},
															"nativeSrc": "1723:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1723:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1609:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1655:3:1",
														"nodeType": "YulTypedName",
														"src": "1655:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1660:3:1",
														"nodeType": "YulTypedName",
														"src": "1660:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1665:6:1",
														"nodeType": "YulTypedName",
														"src": "1665:6:1",
														"type": ""
													}
												],
												"src": "1609:148:1"
											},
											{
												"body": {
													"nativeSrc": "1846:340:1",
													"nodeType": "YulBlock",
													"src": "1846:340:1",
													"statements": [
														{
															"nativeSrc": "1856:74:1",
															"nodeType": "YulAssignment",
															"src": "1856:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1922:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1922:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "1881:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "1881:40:1"
																		},
																		"nativeSrc": "1881:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1881:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1865:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1865:15:1"
																},
																"nativeSrc": "1865:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1865:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1856:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1856:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1946:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1946:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1953:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:1"
																},
																"nativeSrc": "1939:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1939:21:1"
															},
															"nativeSrc": "1939:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1939:21:1"
														},
														{
															"nativeSrc": "1969:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1969:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1984:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1984:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1991:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1991:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1980:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:1"
																},
																"nativeSrc": "1980:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1980:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1973:3:1",
																	"nodeType": "YulTypedName",
																	"src": "1973:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2034:83:1",
																"nodeType": "YulBlock",
																"src": "2034:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2036:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2036:77:1"
																			},
																			"nativeSrc": "2036:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2036:79:1"
																		},
																		"nativeSrc": "2036:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2036:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2015:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2015:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2020:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2020:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2011:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:1"
																		},
																		"nativeSrc": "2011:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2011:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2029:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2029:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2008:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2008:2:1"
																},
																"nativeSrc": "2008:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2008:25:1"
															},
															"nativeSrc": "2005:112:1",
															"nodeType": "YulIf",
															"src": "2005:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2163:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2168:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2168:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2173:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2173:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2126:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "2126:36:1"
																},
																"nativeSrc": "2126:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2126:54:1"
															},
															"nativeSrc": "2126:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "2126:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "1763:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1819:3:1",
														"nodeType": "YulTypedName",
														"src": "1819:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1824:6:1",
														"nodeType": "YulTypedName",
														"src": "1824:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1832:3:1",
														"nodeType": "YulTypedName",
														"src": "1832:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1840:5:1",
														"nodeType": "YulTypedName",
														"src": "1840:5:1",
														"type": ""
													}
												],
												"src": "1763:423:1"
											},
											{
												"body": {
													"nativeSrc": "2266:277:1",
													"nodeType": "YulBlock",
													"src": "2266:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2315:83:1",
																"nodeType": "YulBlock",
																"src": "2315:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2317:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2317:77:1"
																			},
																			"nativeSrc": "2317:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2317:79:1"
																		},
																		"nativeSrc": "2317:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2294:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2294:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2302:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2302:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2290:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2290:3:1"
																				},
																				"nativeSrc": "2290:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2290:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2309:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2309:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2286:3:1"
																		},
																		"nativeSrc": "2286:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2286:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																},
																"nativeSrc": "2279:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2279:35:1"
															},
															"nativeSrc": "2276:122:1",
															"nodeType": "YulIf",
															"src": "2276:122:1"
														},
														{
															"nativeSrc": "2407:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2407:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2434:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2434:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2421:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2421:12:1"
																},
																"nativeSrc": "2421:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2421:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2411:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2411:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2450:87:1",
															"nodeType": "YulAssignment",
															"src": "2450:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2510:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2510:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2518:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2518:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:1"
																		},
																		"nativeSrc": "2506:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2525:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2533:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "2459:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "2459:46:1"
																},
																"nativeSrc": "2459:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2459:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2450:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "2205:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2244:6:1",
														"nodeType": "YulTypedName",
														"src": "2244:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2252:3:1",
														"nodeType": "YulTypedName",
														"src": "2252:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2260:5:1",
														"nodeType": "YulTypedName",
														"src": "2260:5:1",
														"type": ""
													}
												],
												"src": "2205:338:1"
											},
											{
												"body": {
													"nativeSrc": "2624:432:1",
													"nodeType": "YulBlock",
													"src": "2624:432:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:1",
																"nodeType": "YulBlock",
																"src": "2670:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:1"
																			},
																			"nativeSrc": "2672:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:1"
																		},
																		"nativeSrc": "2672:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:1"
																		},
																		"nativeSrc": "2641:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:1"
																},
																"nativeSrc": "2637:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:1"
															},
															"nativeSrc": "2634:119:1",
															"nodeType": "YulIf",
															"src": "2634:119:1"
														},
														{
															"nativeSrc": "2763:286:1",
															"nodeType": "YulBlock",
															"src": "2763:286:1",
															"statements": [
																{
																	"nativeSrc": "2778:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2809:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2809:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2820:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2820:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2805:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2805:3:1"
																				},
																				"nativeSrc": "2805:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2805:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2792:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "2792:12:1"
																		},
																		"nativeSrc": "2792:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2870:83:1",
																		"nodeType": "YulBlock",
																		"src": "2870:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2872:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:77:1"
																					},
																					"nativeSrc": "2872:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2872:79:1"
																				},
																				"nativeSrc": "2872:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2872:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2842:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2842:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2850:18:1",
																				"nodeType": "YulLiteral",
																				"src": "2850:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2839:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2839:2:1"
																		},
																		"nativeSrc": "2839:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:30:1"
																	},
																	"nativeSrc": "2836:117:1",
																	"nodeType": "YulIf",
																	"src": "2836:117:1"
																},
																{
																	"nativeSrc": "2967:72:1",
																	"nodeType": "YulAssignment",
																	"src": "2967:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3011:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3011:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3022:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3022:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3007:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3007:3:1"
																				},
																				"nativeSrc": "3007:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3007:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3031:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3031:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "2977:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "2977:29:1"
																		},
																		"nativeSrc": "2977:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2977:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2967:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2967:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nativeSrc": "2549:507:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2594:9:1",
														"nodeType": "YulTypedName",
														"src": "2594:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2605:7:1",
														"nodeType": "YulTypedName",
														"src": "2605:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2617:6:1",
														"nodeType": "YulTypedName",
														"src": "2617:6:1",
														"type": ""
													}
												],
												"src": "2549:507:1"
											},
											{
												"body": {
													"nativeSrc": "3107:32:1",
													"nodeType": "YulBlock",
													"src": "3107:32:1",
													"statements": [
														{
															"nativeSrc": "3117:16:1",
															"nodeType": "YulAssignment",
															"src": "3117:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3128:5:1",
																"nodeType": "YulIdentifier",
																"src": "3128:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3117:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3062:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3089:5:1",
														"nodeType": "YulTypedName",
														"src": "3089:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3099:7:1",
														"nodeType": "YulTypedName",
														"src": "3099:7:1",
														"type": ""
													}
												],
												"src": "3062:77:1"
											},
											{
												"body": {
													"nativeSrc": "3210:53:1",
													"nodeType": "YulBlock",
													"src": "3210:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3227:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3227:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3250:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3250:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3232:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3232:17:1"
																		},
																		"nativeSrc": "3232:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3220:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:1"
																},
																"nativeSrc": "3220:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3220:37:1"
															},
															"nativeSrc": "3220:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3220:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3145:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3198:5:1",
														"nodeType": "YulTypedName",
														"src": "3198:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3205:3:1",
														"nodeType": "YulTypedName",
														"src": "3205:3:1",
														"type": ""
													}
												],
												"src": "3145:118:1"
											},
											{
												"body": {
													"nativeSrc": "3367:124:1",
													"nodeType": "YulBlock",
													"src": "3367:124:1",
													"statements": [
														{
															"nativeSrc": "3377:26:1",
															"nodeType": "YulAssignment",
															"src": "3377:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3389:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3389:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3400:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3400:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3385:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3385:3:1"
																},
																"nativeSrc": "3385:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3385:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3377:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3377:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3457:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3457:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3470:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3470:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3481:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3481:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:1"
																		},
																		"nativeSrc": "3466:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3466:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3413:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3413:43:1"
																},
																"nativeSrc": "3413:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3413:71:1"
															},
															"nativeSrc": "3413:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3413:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3269:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3339:9:1",
														"nodeType": "YulTypedName",
														"src": "3339:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3351:6:1",
														"nodeType": "YulTypedName",
														"src": "3351:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3362:4:1",
														"nodeType": "YulTypedName",
														"src": "3362:4:1",
														"type": ""
													}
												],
												"src": "3269:222:1"
											},
											{
												"body": {
													"nativeSrc": "3544:32:1",
													"nodeType": "YulBlock",
													"src": "3544:32:1",
													"statements": [
														{
															"nativeSrc": "3554:16:1",
															"nodeType": "YulAssignment",
															"src": "3554:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3565:5:1",
																"nodeType": "YulIdentifier",
																"src": "3565:5:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "3554:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3554:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nativeSrc": "3497:79:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:1",
														"nodeType": "YulTypedName",
														"src": "3526:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "3536:7:1",
														"nodeType": "YulTypedName",
														"src": "3536:7:1",
														"type": ""
													}
												],
												"src": "3497:79:1"
											},
											{
												"body": {
													"nativeSrc": "3665:74:1",
													"nodeType": "YulBlock",
													"src": "3665:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3682:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3682:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3725:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3725:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "3707:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3707:17:1"
																				},
																				"nativeSrc": "3707:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3707:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nativeSrc": "3687:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "3687:19:1"
																		},
																		"nativeSrc": "3687:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3687:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3675:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:1"
																},
																"nativeSrc": "3675:58:1",
																"nodeType": "YulFunctionCall",
																"src": "3675:58:1"
															},
															"nativeSrc": "3675:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "3675:58:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nativeSrc": "3582:157:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3653:5:1",
														"nodeType": "YulTypedName",
														"src": "3653:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3660:3:1",
														"nodeType": "YulTypedName",
														"src": "3660:3:1",
														"type": ""
													}
												],
												"src": "3582:157:1"
											},
											{
												"body": {
													"nativeSrc": "3861:140:1",
													"nodeType": "YulBlock",
													"src": "3861:140:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3934:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3934:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3943:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3943:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nativeSrc": "3872:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "3872:61:1"
																},
																"nativeSrc": "3872:75:1",
																"nodeType": "YulFunctionCall",
																"src": "3872:75:1"
															},
															"nativeSrc": "3872:75:1",
															"nodeType": "YulExpressionStatement",
															"src": "3872:75:1"
														},
														{
															"nativeSrc": "3956:19:1",
															"nodeType": "YulAssignment",
															"src": "3956:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3967:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3967:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3972:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3963:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:1"
																},
																"nativeSrc": "3963:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3963:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3956:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:1"
																}
															]
														},
														{
															"nativeSrc": "3985:10:1",
															"nodeType": "YulAssignment",
															"src": "3985:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3992:3:1",
																"nodeType": "YulIdentifier",
																"src": "3992:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3985:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3985:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3745:256:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3840:3:1",
														"nodeType": "YulTypedName",
														"src": "3840:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3846:6:1",
														"nodeType": "YulTypedName",
														"src": "3846:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3857:3:1",
														"nodeType": "YulTypedName",
														"src": "3857:3:1",
														"type": ""
													}
												],
												"src": "3745:256:1"
											},
											{
												"body": {
													"nativeSrc": "4065:40:1",
													"nodeType": "YulBlock",
													"src": "4065:40:1",
													"statements": [
														{
															"nativeSrc": "4076:22:1",
															"nodeType": "YulAssignment",
															"src": "4076:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4092:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4092:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4086:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:1"
																},
																"nativeSrc": "4086:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4086:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4076:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4076:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "4007:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4048:5:1",
														"nodeType": "YulTypedName",
														"src": "4048:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4058:6:1",
														"nodeType": "YulTypedName",
														"src": "4058:6:1",
														"type": ""
													}
												],
												"src": "4007:98:1"
											},
											{
												"body": {
													"nativeSrc": "4224:34:1",
													"nodeType": "YulBlock",
													"src": "4224:34:1",
													"statements": [
														{
															"nativeSrc": "4234:18:1",
															"nodeType": "YulAssignment",
															"src": "4234:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "4249:3:1",
																"nodeType": "YulIdentifier",
																"src": "4249:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4234:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "4234:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4111:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4196:3:1",
														"nodeType": "YulTypedName",
														"src": "4196:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4201:6:1",
														"nodeType": "YulTypedName",
														"src": "4201:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4212:11:1",
														"nodeType": "YulTypedName",
														"src": "4212:11:1",
														"type": ""
													}
												],
												"src": "4111:147:1"
											},
											{
												"body": {
													"nativeSrc": "4326:77:1",
													"nodeType": "YulBlock",
													"src": "4326:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4343:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4343:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4348:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4353:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4353:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4337:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:5:1"
																},
																"nativeSrc": "4337:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:23:1"
															},
															"nativeSrc": "4337:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4380:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4380:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4385:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4385:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:1"
																		},
																		"nativeSrc": "4376:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4376:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4394:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4394:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:1"
																},
																"nativeSrc": "4369:27:1",
																"nodeType": "YulFunctionCall",
																"src": "4369:27:1"
															},
															"nativeSrc": "4369:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "4369:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4264:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4308:3:1",
														"nodeType": "YulTypedName",
														"src": "4308:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4313:3:1",
														"nodeType": "YulTypedName",
														"src": "4313:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4318:6:1",
														"nodeType": "YulTypedName",
														"src": "4318:6:1",
														"type": ""
													}
												],
												"src": "4264:139:1"
											},
											{
												"body": {
													"nativeSrc": "4517:278:1",
													"nodeType": "YulBlock",
													"src": "4517:278:1",
													"statements": [
														{
															"nativeSrc": "4527:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4527:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4573:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4573:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "4541:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "4541:31:1"
																},
																"nativeSrc": "4541:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4541:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4531:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4531:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4588:95:1",
															"nodeType": "YulAssignment",
															"src": "4588:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4671:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4671:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4676:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4676:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4595:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "4595:75:1"
																},
																"nativeSrc": "4595:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4595:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4588:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4588:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4731:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4731:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4727:3:1"
																		},
																		"nativeSrc": "4727:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4727:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4745:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4745:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4750:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4750:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4692:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:34:1"
																},
																"nativeSrc": "4692:65:1",
																"nodeType": "YulFunctionCall",
																"src": "4692:65:1"
															},
															"nativeSrc": "4692:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "4692:65:1"
														},
														{
															"nativeSrc": "4766:23:1",
															"nodeType": "YulAssignment",
															"src": "4766:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4777:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4782:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4782:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4773:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:1"
																},
																"nativeSrc": "4773:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4773:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4766:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "4409:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4498:5:1",
														"nodeType": "YulTypedName",
														"src": "4498:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4505:3:1",
														"nodeType": "YulTypedName",
														"src": "4505:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4513:3:1",
														"nodeType": "YulTypedName",
														"src": "4513:3:1",
														"type": ""
													}
												],
												"src": "4409:386:1"
											},
											{
												"body": {
													"nativeSrc": "4935:137:1",
													"nodeType": "YulBlock",
													"src": "4935:137:1",
													"statements": [
														{
															"nativeSrc": "4946:100:1",
															"nodeType": "YulAssignment",
															"src": "4946:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5033:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5042:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5042:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4953:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "4953:79:1"
																},
																"nativeSrc": "4953:93:1",
																"nodeType": "YulFunctionCall",
																"src": "4953:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4946:3:1"
																}
															]
														},
														{
															"nativeSrc": "5056:10:1",
															"nodeType": "YulAssignment",
															"src": "5056:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "5063:3:1",
																"nodeType": "YulIdentifier",
																"src": "5063:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5056:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4801:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4914:3:1",
														"nodeType": "YulTypedName",
														"src": "4914:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4920:6:1",
														"nodeType": "YulTypedName",
														"src": "4920:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4931:3:1",
														"nodeType": "YulTypedName",
														"src": "4931:3:1",
														"type": ""
													}
												],
												"src": "4801:271:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c806310e635a514610038578063765f806014610068575b5f80fd5b610052600480360381019061004d9190610275565b610098565b60405161005f91906102d4565b60405180910390f35b610082600480360381019061007d9190610275565b6100ce565b60405161008f91906102d4565b60405180910390f35b5f81805190602001206040516020016100b1919061030d565b604051602081830303815290604052805190602001209050919050565b5f80826040516020016100e19190610379565b6040516020818303038152906040528051906020012090508060405160200161010a919061030d565b60405160208183030381529060405280519060200120915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61018782610141565b810181811067ffffffffffffffff821117156101a6576101a5610151565b5b80604052505050565b5f6101b8610128565b90506101c4828261017e565b919050565b5f67ffffffffffffffff8211156101e3576101e2610151565b5b6101ec82610141565b9050602081019050919050565b828183375f83830152505050565b5f610219610214846101c9565b6101af565b9050828152602081018484840111156102355761023461013d565b5b6102408482856101f9565b509392505050565b5f82601f83011261025c5761025b610139565b5b813561026c848260208601610207565b91505092915050565b5f6020828403121561028a57610289610131565b5b5f82013567ffffffffffffffff8111156102a7576102a6610135565b5b6102b384828501610248565b91505092915050565b5f819050919050565b6102ce816102bc565b82525050565b5f6020820190506102e75f8301846102c5565b92915050565b5f819050919050565b610307610302826102bc565b6102ed565b82525050565b5f61031882846102f6565b60208201915081905092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61035382610327565b61035d8185610331565b935061036d81856020860161033b565b80840191505092915050565b5f6103848284610349565b91508190509291505056fea2646970667358221220ba03601340ff6f46af657ccb65610d7f21183940ad77f6f0da86c134a0790b8d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10E635A5 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x765F8060 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x275 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x275 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x187 DUP3 PUSH2 0x141 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x151 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8 PUSH2 0x128 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C4 DUP3 DUP3 PUSH2 0x17E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E3 JUMPI PUSH2 0x1E2 PUSH2 0x151 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC DUP3 PUSH2 0x141 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x219 PUSH2 0x214 DUP5 PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x235 JUMPI PUSH2 0x234 PUSH2 0x13D JUMP JUMPDEST JUMPDEST PUSH2 0x240 DUP5 DUP3 DUP6 PUSH2 0x1F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x139 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x207 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28A JUMPI PUSH2 0x289 PUSH2 0x131 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x135 JUMP JUMPDEST JUMPDEST PUSH2 0x2B3 DUP5 DUP3 DUP6 ADD PUSH2 0x248 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x2BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x307 PUSH2 0x302 DUP3 PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x318 DUP3 DUP5 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x353 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH2 0x35D DUP2 DUP6 PUSH2 0x331 JUMP JUMPDEST SWAP4 POP PUSH2 0x36D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x384 DUP3 DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA SUB PUSH1 0x13 BLOCKHASH SELFDESTRUCT PUSH16 0x46AF657CCB65610D7F21183940AD77F6 CREATE 0xDA DUP7 0xC1 CALLVALUE LOG0 PUSH26 0xB8D64736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "186:703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;692:195;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:137;426:7;489:4;479:15;;;;;;462:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;452:44;;;;;;445:51;;366:137;;;:::o;692:195::-;755:7;774:16;820:4;803:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;793:33;;;;;;774:52;;870:8;853:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;843:37;;;;;;836:44;;;692:195;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:307::-;1357:4;1447:18;1439:6;1436:30;1433:56;;;1469:18;;:::i;:::-;1433:56;1507:29;1529:6;1507:29;:::i;:::-;1499:37;;1591:4;1585;1581:15;1573:23;;1296:307;;;:::o;1609:148::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1609:148;;;:::o;1763:423::-;1840:5;1865:65;1881:48;1922:6;1881:48;:::i;:::-;1865:65;:::i;:::-;1856:74;;1953:6;1946:5;1939:21;1991:4;1984:5;1980:16;2029:3;2020:6;2015:3;2011:16;2008:25;2005:112;;;2036:79;;:::i;:::-;2005:112;2126:54;2173:6;2168:3;2163;2126:54;:::i;:::-;1846:340;1763:423;;;;;:::o;2205:338::-;2260:5;2309:3;2302:4;2294:6;2290:17;2286:27;2276:122;;2317:79;;:::i;:::-;2276:122;2434:6;2421:20;2459:78;2533:3;2525:6;2518:4;2510:6;2506:17;2459:78;:::i;:::-;2450:87;;2266:277;2205:338;;;;:::o;2549:507::-;2617:6;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2820:1;2809:9;2805:17;2792:31;2850:18;2842:6;2839:30;2836:117;;;2872:79;;:::i;:::-;2836:117;2977:62;3031:7;3022:6;3011:9;3007:22;2977:62;:::i;:::-;2967:72;;2763:286;2549:507;;;;:::o;3062:77::-;3099:7;3128:5;3117:16;;3062:77;;;:::o;3145:118::-;3232:24;3250:5;3232:24;:::i;:::-;3227:3;3220:37;3145:118;;:::o;3269:222::-;3362:4;3400:2;3389:9;3385:18;3377:26;;3413:71;3481:1;3470:9;3466:17;3457:6;3413:71;:::i;:::-;3269:222;;;;:::o;3497:79::-;3536:7;3565:5;3554:16;;3497:79;;;:::o;3582:157::-;3687:45;3707:24;3725:5;3707:24;:::i;:::-;3687:45;:::i;:::-;3682:3;3675:58;3582:157;;:::o;3745:256::-;3857:3;3872:75;3943:3;3934:6;3872:75;:::i;:::-;3972:2;3967:3;3963:12;3956:19;;3992:3;3985:10;;3745:256;;;;:::o;4007:98::-;4058:6;4092:5;4086:12;4076:22;;4007:98;;;:::o;4111:147::-;4212:11;4249:3;4234:18;;4111:147;;;;:::o;4264:139::-;4353:6;4348:3;4343;4337:23;4394:1;4385:6;4380:3;4376:16;4369:27;4264:139;;;:::o;4409:386::-;4513:3;4541:38;4573:5;4541:38;:::i;:::-;4595:88;4676:6;4671:3;4595:88;:::i;:::-;4588:95;;4692:65;4750:6;4745:3;4738:4;4731:5;4727:16;4692:65;:::i;:::-;4782:6;4777:3;4773:16;4766:23;;4517:278;4409:386;;;;:::o;4801:271::-;4931:3;4953:93;5042:3;5033:6;4953:93;:::i;:::-;4946:100;;5063:3;5056:10;;4801:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193000",
								"executionCost": "236",
								"totalCost": "193236"
							},
							"external": {
								"altDoubleHash(bytes)": "infinite",
								"doubleHash(bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 186,
									"end": 889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 889,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba03601340ff6f46af657ccb65610d7f21183940ad77f6f0da86c134a0790b8d64736f6c634300081a0033",
									".code": [
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "10E635A5"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "765F8060"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 366,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 692,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 692,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 479,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 479,
											"end": 494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 494,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 462,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 452,
											"end": 496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 452,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 452,
											"end": 496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 445,
											"end": 496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 692,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 820,
											"end": 824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 803,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 793,
											"end": 826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 793,
											"end": 826,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 774,
											"end": 826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 853,
											"end": 879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 843,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 843,
											"end": 880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 843,
											"end": 880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 836,
											"end": 880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 836,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 836,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 692,
											"end": 887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1466,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1469,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1433,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1507,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1507,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1757,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1609,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1714,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1881,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1881,
											"end": 1929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1929,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1881,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1865,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1930,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1865,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 1996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2018,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2117,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2005,
											"end": 2117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2036,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2036,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2115,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2036,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2005,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2126,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2126,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2543,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2205,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2306,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2313,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2317,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2317,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2441,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2533,
											"end": 2536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2459,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2537,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2459,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 3056,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2549,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2872,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2977,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2977,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 3049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 3056,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 3056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 3056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 3056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3139,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3062,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3145,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3232,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3232,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3491,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3269,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3481,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3413,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3484,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3413,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3739,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3582,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3707,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3725,
											"end": 3730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3707,
											"end": 3731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3731,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3707,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3687,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3732,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3687,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 4001,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3745,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3943,
											"end": 3946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3872,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3947,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3872,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 3995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 3995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 4001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 4001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 4001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 4001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 4001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4105,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4007,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4258,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4111,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4111,
											"end": 4258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4360,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4409,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4541,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4683,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4595,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4683,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4748,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4736,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4692,
											"end": 4757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4757,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4692,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5072,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5042,
											"end": 5045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4953,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4953,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"C/Collision/Double-Hash or Alternate Hashing Approach.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"altDoubleHash(bytes)": "765f8060",
							"doubleHash(bytes)": "10e635a5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"altDoubleHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"doubleHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"altDoubleHash(bytes)\":{\"details\":\"Example of an alternative hashing approach that you might need to match another chain's standard. Here, we do an extra keccak256 for demonstration.\"},\"doubleHash(bytes)\":{\"details\":\"Double-hash: keccak256( keccak256(data) ). Overkill for typical usage, but used in certain bridging or legacy designs.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Other Type D: Double-hash or alternate hashing approach to reduce collision concerns or match external protocols.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":\"DoubleHash\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"C/Collision/Double-Hash or Alternate Hashing Approach.sol\":{\"keccak256\":\"0x76218165b873f6f2fa1c27a63008183382ef7f7dcdb514920fae14f3b9a602cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768d099dcd6886cb86d15d0a0b558d88646fafb419fd52ed16fce02e975f1c5d\",\"dweb:/ipfs/QmVXS7gdLEojCCyb1mb9Pi9rdTeavADth47Gxu37L5tK4m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Other Type D: Double-hash or alternate hashing approach to reduce collision concerns or match external protocols.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"C/Collision/Double-Hash or Alternate Hashing Approach.sol": {
				"ast": {
					"absolutePath": "C/Collision/Double-Hash or Alternate Hashing Approach.sol",
					"exportedSymbols": {
						"DoubleHash": [
							46
						]
					},
					"id": 47,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DoubleHash",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:127:0",
								"text": " Other Type D: Double-hash or alternate hashing approach\n to reduce collision concerns or match external protocols."
							},
							"fullyImplemented": true,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "DoubleHash",
							"nameLocation": "195:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "435:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 14,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "489:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 13,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "479:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "479:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 11,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "462:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "466:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "462:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "462:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 10,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "452:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 9,
												"id": 18,
												"nodeType": "Return",
												"src": "445:51:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "212:149:0",
										"text": " @dev Double-hash: keccak256( keccak256(data) ).\n Overkill for typical usage, but used in certain bridging or legacy designs."
									},
									"functionSelector": "10e635a5",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doubleHash",
									"nameLocation": "375:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "399:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "386:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:19:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 7,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:9:0"
									},
									"scope": 46,
									"src": "366:137:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "764:123:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "tempHash",
														"nameLocation": "782:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 44,
														"src": "774:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 28,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 33,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "820:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 31,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "803:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "807:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "803:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "803:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 30,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "793:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "793:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "774:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 40,
																	"name": "tempHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "870:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 38,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "853:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "857:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "853:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "853:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 37,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "843:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "843:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 27,
												"id": 43,
												"nodeType": "Return",
												"src": "836:44:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "509:178:0",
										"text": " @dev Example of an alternative hashing approach that you might need\n to match another chain's standard. Here, we do an extra keccak256 for demonstration."
									},
									"functionSelector": "765f8060",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "altDoubleHash",
									"nameLocation": "701:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "728:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "715:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 22,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "715:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:19:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 25,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:9:0"
									},
									"scope": 46,
									"src": "692:195:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 47,
							"src": "186:703:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:858:0"
				},
				"id": 0
			}
		}
	}
}