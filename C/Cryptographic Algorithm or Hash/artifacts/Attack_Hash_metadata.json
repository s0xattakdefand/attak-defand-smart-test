{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract HashVuln",
						"name": "_t",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "a",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "b",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes16",
						"name": "digest",
						"type": "bytes16"
					},
					{
						"indexed": false,
						"internalType": "enum CryptoAlgoAttackType",
						"name": "attack",
						"type": "uint8"
					}
				],
				"name": "CollisionFound",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "a",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "b",
						"type": "bytes"
					}
				],
				"name": "findCollision",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "target",
				"outputs": [
					{
						"internalType": "contract HashVuln",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"findCollision(bytes,bytes)": {
					"notice": "stub collision: two arbitrary inputs producing same stub digest"
				}
			},
			"notice": "───────────────────────────────────────────────────────────────────────────── 2) ATTACK STUB: demonstrate collision by hashing two different inputs ─────────────────────────────────────────────────────────────────────────────",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"C/Cryptographic Algorithm or Hash/Cryptographic Algorithm or Hash.sol": "Attack_Hash"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"C/Cryptographic Algorithm or Hash/Cryptographic Algorithm or Hash.sol": {
			"keccak256": "0x333598608c049d8ad859692670561d64b490094e2fae79af585cbb300868f4a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://00b8cd4bee52cc6053489dbf2097472a030413f4a4f9729060dc11ad0a81d99d",
				"dweb:/ipfs/QmcWEaZhp2gPQqqHHF92M6nFy8pascANvxh4YaLKN52ALG"
			]
		}
	},
	"version": 1
}