{
	"id": "7688e7d1472da52f0fe6b84b6667edeb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol": {
				"content": "import \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract SingleActiveCall is ReentrancyGuard {\n    bool private inCall;\n\n    modifier oneAtATime() {\n        require(!inCall, \"[CAC] Another call in progress\");\n        inCall = true;\n        _;\n        inCall = false;\n    }\n\n    function criticalAction() external oneAtATime nonReentrant {\n        // do something\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol": {
				"SingleActiveCall": {
					"abi": [
						{
							"inputs": [],
							"name": "criticalAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":64:386  contract SingleActiveCall is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":64:386  contract SingleActiveCall is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":64:386  contract SingleActiveCall is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e89df1d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":294:384  function criticalAction() external oneAtATime nonReentrant {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":182:188  inCall */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":181:188  !inCall */\n      iszero\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":173:223  require(!inCall, \"[CAC] Another call in progress\") */\n      tag_7\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_8\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_7:\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":242:246  true */\n      0x01\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":233:239  inCall */\n      dup1\n      0x00\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":233:246  inCall = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_11\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_12\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_11:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_14\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_15\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_14:\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":276:281  false */\n      0x00\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":267:273  inCall */\n      0x01\n      0x00\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":267:281  inCall = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":294:384  function criticalAction() external oneAtATime nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_21:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:362   */\n    tag_22:\n        /* \"#utility.yul\":322:354   */\n      0x5b4341435d20416e6f746865722063616c6c20696e2070726f67726573730000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:355   */\n      mstore\n        /* \"#utility.yul\":182:362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":368:734   */\n    tag_23:\n        /* \"#utility.yul\":510:513   */\n      0x00\n        /* \"#utility.yul\":531:598   */\n      tag_30\n        /* \"#utility.yul\":595:597   */\n      0x1e\n        /* \"#utility.yul\":590:593   */\n      dup4\n        /* \"#utility.yul\":531:598   */\n      tag_21\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":524:598   */\n      swap2\n      pop\n        /* \"#utility.yul\":607:700   */\n      tag_31\n        /* \"#utility.yul\":696:699   */\n      dup3\n        /* \"#utility.yul\":607:700   */\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":725:727   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup3\n        /* \"#utility.yul\":716:728   */\n      add\n        /* \"#utility.yul\":709:728   */\n      swap1\n      pop\n        /* \"#utility.yul\":368:734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":740:1159   */\n    tag_9:\n        /* \"#utility.yul\":906:910   */\n      0x00\n        /* \"#utility.yul\":944:946   */\n      0x20\n        /* \"#utility.yul\":933:942   */\n      dup3\n        /* \"#utility.yul\":929:947   */\n      add\n        /* \"#utility.yul\":921:947   */\n      swap1\n      pop\n        /* \"#utility.yul\":993:1002   */\n      dup2\n        /* \"#utility.yul\":987:991   */\n      dup2\n        /* \"#utility.yul\":983:1003   */\n      sub\n        /* \"#utility.yul\":979:980   */\n      0x00\n        /* \"#utility.yul\":968:977   */\n      dup4\n        /* \"#utility.yul\":964:981   */\n      add\n        /* \"#utility.yul\":957:1004   */\n      mstore\n        /* \"#utility.yul\":1021:1152   */\n      tag_33\n        /* \"#utility.yul\":1147:1151   */\n      dup2\n        /* \"#utility.yul\":1021:1152   */\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1013:1152   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:1159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1165:1346   */\n    tag_24:\n        /* \"#utility.yul\":1305:1338   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":1301:1302   */\n      0x00\n        /* \"#utility.yul\":1293:1299   */\n      dup3\n        /* \"#utility.yul\":1289:1303   */\n      add\n        /* \"#utility.yul\":1282:1339   */\n      mstore\n        /* \"#utility.yul\":1165:1346   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1718   */\n    tag_25:\n        /* \"#utility.yul\":1494:1497   */\n      0x00\n        /* \"#utility.yul\":1515:1582   */\n      tag_36\n        /* \"#utility.yul\":1579:1581   */\n      0x1f\n        /* \"#utility.yul\":1574:1577   */\n      dup4\n        /* \"#utility.yul\":1515:1582   */\n      tag_21\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1508:1582   */\n      swap2\n      pop\n        /* \"#utility.yul\":1591:1684   */\n      tag_37\n        /* \"#utility.yul\":1680:1683   */\n      dup3\n        /* \"#utility.yul\":1591:1684   */\n      tag_24\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1709:1711   */\n      0x20\n        /* \"#utility.yul\":1704:1707   */\n      dup3\n        /* \"#utility.yul\":1700:1712   */\n      add\n        /* \"#utility.yul\":1693:1712   */\n      swap1\n      pop\n        /* \"#utility.yul\":1352:1718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1724:2143   */\n    tag_19:\n        /* \"#utility.yul\":1890:1894   */\n      0x00\n        /* \"#utility.yul\":1928:1930   */\n      0x20\n        /* \"#utility.yul\":1917:1926   */\n      dup3\n        /* \"#utility.yul\":1913:1931   */\n      add\n        /* \"#utility.yul\":1905:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1977:1986   */\n      dup2\n        /* \"#utility.yul\":1971:1975   */\n      dup2\n        /* \"#utility.yul\":1967:1987   */\n      sub\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1952:1961   */\n      dup4\n        /* \"#utility.yul\":1948:1965   */\n      add\n        /* \"#utility.yul\":1941:1988   */\n      mstore\n        /* \"#utility.yul\":2005:2136   */\n      tag_39\n        /* \"#utility.yul\":2131:2135   */\n      dup2\n        /* \"#utility.yul\":2005:2136   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1997:2136   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:2143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a0832d1ddc4b646aafc1041f4c72e3587c0675987de3ae35780029a235fb179364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060015f81905550610236806100235f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80639e89df1d1461002d575b5f80fd5b610035610037565b005b60015f9054906101000a900460ff1615610086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007d9061017a565b60405180910390fd5b6001805f6101000a81548160ff0219169083151502179055506100a76100ca565b6100af610117565b5f60015f6101000a81548160ff021916908315150217905550565b60025f540361010e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610105906101e2565b60405180910390fd5b60025f81905550565b60015f81905550565b5f82825260208201905092915050565b7f5b4341435d20416e6f746865722063616c6c20696e2070726f677265737300005f82015250565b5f610164601e83610120565b915061016f82610130565b602082019050919050565b5f6020820190508181035f83015261019181610158565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6101cc601f83610120565b91506101d782610198565b602082019050919050565b5f6020820190508181035f8301526101f9816101c0565b905091905056fea2646970667358221220a0832d1ddc4b646aafc1041f4c72e3587c0675987de3ae35780029a235fb179364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x236 DUP1 PUSH2 0x23 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E89DF1D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D SWAP1 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA7 PUSH2 0xCA JUMP JUMPDEST PUSH2 0xAF PUSH2 0x117 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5B4341435D20416E6F746865722063616C6C20696E2070726F67726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x164 PUSH1 0x1E DUP4 PUSH2 0x120 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F DUP3 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191 DUP2 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC PUSH1 0x1F DUP4 PUSH2 0x120 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7 DUP3 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F9 DUP2 PUSH2 0x1C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 DUP4 0x2D SAR 0xDC 0x4B PUSH5 0x6AAFC1041F 0x4C PUSH19 0xE3587C0675987DE3AE35780029A235FB179364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "64:322:1:-:0;;;;;;;;;;;;;1716:1:0;1821:7;:22;;;;64:322:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nonReentrantAfter_52": {
									"entryPoint": 279,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 202,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@criticalAction_96": {
									"entryPoint": 55,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2146:2",
										"nodeType": "YulBlock",
										"src": "0:2146:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:2",
													"nodeType": "YulBlock",
													"src": "103:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:2"
																},
																"nativeSrc": "113:19:2",
																"nodeType": "YulFunctionCall",
																"src": "113:19:2"
															},
															"nativeSrc": "113:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:2"
														},
														{
															"nativeSrc": "141:29:2",
															"nodeType": "YulAssignment",
															"src": "141:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:2",
																		"nodeType": "YulLiteral",
																		"src": "165:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:2"
																},
																"nativeSrc": "156:14:2",
																"nodeType": "YulFunctionCall",
																"src": "156:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:2",
														"nodeType": "YulTypedName",
														"src": "75:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:2",
														"nodeType": "YulTypedName",
														"src": "80:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:2",
														"nodeType": "YulTypedName",
														"src": "91:11:2",
														"type": ""
													}
												],
												"src": "7:169:2"
											},
											{
												"body": {
													"nativeSrc": "288:74:2",
													"nodeType": "YulBlock",
													"src": "288:74:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:2",
																				"nodeType": "YulLiteral",
																				"src": "318:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:2"
																		},
																		"nativeSrc": "306:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:2"
																	},
																	{
																		"hexValue": "5b4341435d20416e6f746865722063616c6c20696e2070726f6772657373",
																		"kind": "string",
																		"nativeSrc": "322:32:2",
																		"nodeType": "YulLiteral",
																		"src": "322:32:2",
																		"type": "",
																		"value": "[CAC] Another call in progress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:2"
																},
																"nativeSrc": "299:56:2",
																"nodeType": "YulFunctionCall",
																"src": "299:56:2"
															},
															"nativeSrc": "299:56:2",
															"nodeType": "YulExpressionStatement",
															"src": "299:56:2"
														}
													]
												},
												"name": "store_literal_in_memory_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b",
												"nativeSrc": "182:180:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:2",
														"nodeType": "YulTypedName",
														"src": "280:6:2",
														"type": ""
													}
												],
												"src": "182:180:2"
											},
											{
												"body": {
													"nativeSrc": "514:220:2",
													"nodeType": "YulBlock",
													"src": "514:220:2",
													"statements": [
														{
															"nativeSrc": "524:74:2",
															"nodeType": "YulAssignment",
															"src": "524:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "590:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "590:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "595:2:2",
																		"nodeType": "YulLiteral",
																		"src": "595:2:2",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "531:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "531:58:2"
																},
																"nativeSrc": "531:67:2",
																"nodeType": "YulFunctionCall",
																"src": "531:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "524:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "696:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "696:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b",
																	"nativeSrc": "607:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "607:88:2"
																},
																"nativeSrc": "607:93:2",
																"nodeType": "YulFunctionCall",
																"src": "607:93:2"
															},
															"nativeSrc": "607:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "607:93:2"
														},
														{
															"nativeSrc": "709:19:2",
															"nodeType": "YulAssignment",
															"src": "709:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "720:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "720:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "725:2:2",
																		"nodeType": "YulLiteral",
																		"src": "725:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "716:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:2"
																},
																"nativeSrc": "716:12:2",
																"nodeType": "YulFunctionCall",
																"src": "716:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "709:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "709:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "368:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "502:3:2",
														"nodeType": "YulTypedName",
														"src": "502:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "510:3:2",
														"nodeType": "YulTypedName",
														"src": "510:3:2",
														"type": ""
													}
												],
												"src": "368:366:2"
											},
											{
												"body": {
													"nativeSrc": "911:248:2",
													"nodeType": "YulBlock",
													"src": "911:248:2",
													"statements": [
														{
															"nativeSrc": "921:26:2",
															"nodeType": "YulAssignment",
															"src": "921:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "933:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "933:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "944:2:2",
																		"nodeType": "YulLiteral",
																		"src": "944:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "929:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:2"
																},
																"nativeSrc": "929:18:2",
																"nodeType": "YulFunctionCall",
																"src": "929:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "921:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "921:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "968:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "968:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "979:1:2",
																				"nodeType": "YulLiteral",
																				"src": "979:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "964:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "964:3:2"
																		},
																		"nativeSrc": "964:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "964:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "987:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "987:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "983:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "983:3:2"
																		},
																		"nativeSrc": "983:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "983:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "957:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "957:6:2"
																},
																"nativeSrc": "957:47:2",
																"nodeType": "YulFunctionCall",
																"src": "957:47:2"
															},
															"nativeSrc": "957:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "957:47:2"
														},
														{
															"nativeSrc": "1013:139:2",
															"nodeType": "YulAssignment",
															"src": "1013:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1147:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1147:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1021:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "1021:124:2"
																},
																"nativeSrc": "1021:131:2",
																"nodeType": "YulFunctionCall",
																"src": "1021:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1013:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1013:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "740:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "891:9:2",
														"nodeType": "YulTypedName",
														"src": "891:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "906:4:2",
														"nodeType": "YulTypedName",
														"src": "906:4:2",
														"type": ""
													}
												],
												"src": "740:419:2"
											},
											{
												"body": {
													"nativeSrc": "1271:75:2",
													"nodeType": "YulBlock",
													"src": "1271:75:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1293:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1293:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1301:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1301:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1289:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1289:3:2"
																		},
																		"nativeSrc": "1289:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:14:2"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "1305:33:2",
																		"nodeType": "YulLiteral",
																		"src": "1305:33:2",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1282:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:2"
																},
																"nativeSrc": "1282:57:2",
																"nodeType": "YulFunctionCall",
																"src": "1282:57:2"
															},
															"nativeSrc": "1282:57:2",
															"nodeType": "YulExpressionStatement",
															"src": "1282:57:2"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "1165:181:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1263:6:2",
														"nodeType": "YulTypedName",
														"src": "1263:6:2",
														"type": ""
													}
												],
												"src": "1165:181:2"
											},
											{
												"body": {
													"nativeSrc": "1498:220:2",
													"nodeType": "YulBlock",
													"src": "1498:220:2",
													"statements": [
														{
															"nativeSrc": "1508:74:2",
															"nodeType": "YulAssignment",
															"src": "1508:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1574:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1574:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1579:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1579:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1515:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "1515:58:2"
																},
																"nativeSrc": "1515:67:2",
																"nodeType": "YulFunctionCall",
																"src": "1515:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1508:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1508:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1680:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1680:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "1591:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "1591:88:2"
																},
																"nativeSrc": "1591:93:2",
																"nodeType": "YulFunctionCall",
																"src": "1591:93:2"
															},
															"nativeSrc": "1591:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "1591:93:2"
														},
														{
															"nativeSrc": "1693:19:2",
															"nodeType": "YulAssignment",
															"src": "1693:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1704:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1704:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1709:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1700:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:2"
																},
																"nativeSrc": "1700:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1700:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1693:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1352:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1486:3:2",
														"nodeType": "YulTypedName",
														"src": "1486:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1494:3:2",
														"nodeType": "YulTypedName",
														"src": "1494:3:2",
														"type": ""
													}
												],
												"src": "1352:366:2"
											},
											{
												"body": {
													"nativeSrc": "1895:248:2",
													"nodeType": "YulBlock",
													"src": "1895:248:2",
													"statements": [
														{
															"nativeSrc": "1905:26:2",
															"nodeType": "YulAssignment",
															"src": "1905:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1917:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1917:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1928:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1913:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:2"
																},
																"nativeSrc": "1913:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1913:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1905:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1905:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1952:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1963:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1963:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1948:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:2"
																		},
																		"nativeSrc": "1948:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1948:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1971:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "1971:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1977:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:2"
																		},
																		"nativeSrc": "1967:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1941:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:2"
																},
																"nativeSrc": "1941:47:2",
																"nodeType": "YulFunctionCall",
																"src": "1941:47:2"
															},
															"nativeSrc": "1941:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "1941:47:2"
														},
														{
															"nativeSrc": "1997:139:2",
															"nodeType": "YulAssignment",
															"src": "1997:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2131:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2131:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2005:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "2005:124:2"
																},
																"nativeSrc": "2005:131:2",
																"nodeType": "YulFunctionCall",
																"src": "2005:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1997:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1997:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1724:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1875:9:2",
														"nodeType": "YulTypedName",
														"src": "1875:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1890:4:2",
														"nodeType": "YulTypedName",
														"src": "1890:4:2",
														"type": ""
													}
												],
												"src": "1724:419:2"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"[CAC] Another call in progress\")\n\n    }\n\n    function abi_encode_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c80639e89df1d1461002d575b5f80fd5b610035610037565b005b60015f9054906101000a900460ff1615610086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007d9061017a565b60405180910390fd5b6001805f6101000a81548160ff0219169083151502179055506100a76100ca565b6100af610117565b5f60015f6101000a81548160ff021916908315150217905550565b60025f540361010e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610105906101e2565b60405180910390fd5b60025f81905550565b60015f81905550565b5f82825260208201905092915050565b7f5b4341435d20416e6f746865722063616c6c20696e2070726f677265737300005f82015250565b5f610164601e83610120565b915061016f82610130565b602082019050919050565b5f6020820190508181035f83015261019181610158565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6101cc601f83610120565b91506101d782610198565b602082019050919050565b5f6020820190508181035f8301526101f9816101c0565b905091905056fea2646970667358221220a0832d1ddc4b646aafc1041f4c72e3587c0675987de3ae35780029a235fb179364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E89DF1D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D SWAP1 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA7 PUSH2 0xCA JUMP JUMPDEST PUSH2 0xAF PUSH2 0x117 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x10E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5B4341435D20416E6F746865722063616C6C20696E2070726F67726573730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x164 PUSH1 0x1E DUP4 PUSH2 0x120 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F DUP3 PUSH2 0x130 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191 DUP2 PUSH2 0x158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC PUSH1 0x1F DUP4 PUSH2 0x120 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7 DUP3 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F9 DUP2 PUSH2 0x1C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 DUP4 0x2D SAR 0xDC 0x4B PUSH5 0x6AAFC1041F 0x4C PUSH19 0xE3587C0675987DE3AE35780029A235FB179364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "64:322:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:90;;;:::i;:::-;;;182:6;;;;;;;;;;;181:7;173:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;242:4;233:6;;:13;;;;;;;;;;;;;;;;;;2261:21:0::1;:19;:21::i;:::-;2303:20;:18;:20::i;:::-;276:5:1::0;267:6;;:14;;;;;;;;;;;;;;;;;;294:90::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;7:169:2:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:180::-;322:32;318:1;310:6;306:14;299:56;182:180;:::o;368:366::-;510:3;531:67;595:2;590:3;531:67;:::i;:::-;524:74;;607:93;696:3;607:93;:::i;:::-;725:2;720:3;716:12;709:19;;368:366;;;:::o;740:419::-;906:4;944:2;933:9;929:18;921:26;;993:9;987:4;983:20;979:1;968:9;964:17;957:47;1021:131;1147:4;1021:131;:::i;:::-;1013:139;;740:419;;;:::o;1165:181::-;1305:33;1301:1;1293:6;1289:14;1282:57;1165:181;:::o;1352:366::-;1494:3;1515:67;1579:2;1574:3;1515:67;:::i;:::-;1508:74;;1591:93;1680:3;1591:93;:::i;:::-;1709:2;1704:3;1700:12;1693:19;;1352:366;;;:::o;1724:419::-;1890:4;1928:2;1917:9;1913:18;1905:26;;1977:9;1971:4;1967:20;1963:1;1952:9;1948:17;1941:47;2005:131;2131:4;2005:131;:::i;:::-;1997:139;;1724:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "113200",
								"executionCost": "22270",
								"totalCost": "135470"
							},
							"external": {
								"criticalAction()": "80103"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 64,
									"end": 386,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 64,
									"end": 386,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0832d1ddc4b646aafc1041f4c72e3587c0675987de3ae35780029a235fb179364736f6c634300081a0033",
									".code": [
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "9E89DF1D"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 64,
											"end": 386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 64,
											"end": 386,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 384,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 182,
											"end": 188,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 182,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 182,
											"end": 188,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 181,
											"end": 188,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 223,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 233,
											"end": 246,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 233,
											"end": 246,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 233,
											"end": 246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 267,
											"end": 281,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 267,
											"end": 281,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 267,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 182,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 354,
											"name": "PUSH",
											"source": 2,
											"value": "5B4341435D20416E6F746865722063616C6C20696E2070726F67726573730000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 299,
											"end": 355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 368,
											"end": 734,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 368,
											"end": 734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 590,
											"end": 593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 531,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 531,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 531,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 531,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 524,
											"end": 598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 524,
											"end": 598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 607,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 696,
											"end": 699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 607,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 607,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 607,
											"end": 700,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 607,
											"end": 700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 709,
											"end": 728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 709,
											"end": 728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 368,
											"end": 734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 368,
											"end": 734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 368,
											"end": 734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 368,
											"end": 734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 740,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 906,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 929,
											"end": 947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 921,
											"end": 947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 979,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 964,
											"end": 981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1147,
											"end": 1151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1021,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1152,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1021,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 1159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 740,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 740,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 1159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1346,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1165,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1301,
											"end": 1302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1282,
											"end": 1339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1718,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1352,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1574,
											"end": 1577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1515,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1515,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1680,
											"end": 1683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1591,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1591,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1707,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1971,
											"end": 1975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 1987,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2005,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 2143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"criticalAction()": "9e89df1d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"criticalAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":\"SingleActiveCall\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\":{\"keccak256\":\"0x6ed246340f5fec2a0875e0648faf63a2dc42ea624f24d374111b6d4fa037caf8\",\"urls\":[\"bzz-raw://3516c565a9fb2c029c6569a1465f585d121b5a76643a312c256aec9cbdc19cef\",\"dweb:/ipfs/QmTaiXxYfaQVf9FVTnkczEWRhTzbYY9XzCw2iQ3q4ZG1Uf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol:SingleActiveCall",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 70,
								"contract": "C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol:SingleActiveCall",
								"label": "inCall",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol": {
				"ast": {
					"absolutePath": "C/Call Admission Control (CAC)/CONCURRENCYTOKEN one active call at a time defense.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						],
						"SingleActiveCall": [
							97
						]
					},
					"id": 98,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 66,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 98,
							"sourceUnit": 65,
							"src": "0:62:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 67,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"93:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "93:15:1"
									},
									"id": 68,
									"nodeType": "InheritanceSpecifier",
									"src": "93:15:1"
								}
							],
							"canonicalName": "SingleActiveCall",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97,
								64
							],
							"name": "SingleActiveCall",
							"nameLocation": "73:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "inCall",
									"nameLocation": "128:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 97,
									"src": "115:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 69,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "115:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "163:125:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "181:7:1",
															"subExpression": {
																"id": 73,
																"name": "inCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "182:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b4341435d20416e6f746865722063616c6c20696e2070726f6772657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "190:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b",
																"typeString": "literal_string \"[CAC] Another call in progress\""
															},
															"value": "[CAC] Another call in progress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_162c08237dc5b08987e2dde00cd93e0bef5e9abc33c09e86d83ce0f658844f0b",
																"typeString": "literal_string \"[CAC] Another call in progress\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "173:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "173:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "173:50:1"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "inCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "233:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "242:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "233:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "233:13:1"
											},
											{
												"id": 82,
												"nodeType": "PlaceholderStatement",
												"src": "256:1:1"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 83,
														"name": "inCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "267:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "276:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "267:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "267:14:1"
											}
										]
									},
									"id": 88,
									"name": "oneAtATime",
									"nameLocation": "150:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:2:1"
									},
									"src": "141:147:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "353:31:1",
										"statements": []
									},
									"functionSelector": "9e89df1d",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 90,
												"name": "oneAtATime",
												"nameLocations": [
													"329:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "329:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "329:10:1"
										},
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "nonReentrant",
												"nameLocations": [
													"340:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "340:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "340:12:1"
										}
									],
									"name": "criticalAction",
									"nameLocation": "303:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:0:1"
									},
									"scope": 97,
									"src": "294:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 98,
							"src": "64:322:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:387:1"
				},
				"id": 1
			}
		}
	}
}