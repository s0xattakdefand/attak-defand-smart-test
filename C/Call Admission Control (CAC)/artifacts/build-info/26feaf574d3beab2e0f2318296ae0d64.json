{
	"id": "26feaf574d3beab2e0f2318296ae0d64",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol": {
				"content": "contract BlockWindowLimit {\n    uint256 public callsThisBlock;\n    uint256 public lastBlock;\n    uint256 public blockCap = 5; // only 5 calls admitted per block\n\n    function limitedAction() external {\n        if (block.number != lastBlock) {\n            lastBlock = block.number;\n            callsThisBlock = 0;\n        }\n        require(callsThisBlock < blockCap, \"[CAC] Block call limit reached\");\n        callsThisBlock++;\n        // proceed\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol": {
				"BlockWindowLimit": {
					"abi": [
						{
							"inputs": [],
							"name": "blockCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callsThisBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "limitedAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":0:453  contract BlockWindowLimit {... */\n  mstore(0x40, 0x80)\n    /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":123:124  5 */\n  0x05\n    /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":97:124  uint256 public blockCap = 5 */\n  0x02\n  sstore\n    /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":0:453  contract BlockWindowLimit {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":0:453  contract BlockWindowLimit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x65546216\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x806b984f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe57715b6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xefc0e441\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":97:124  uint256 public blockCap = 5 */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":67:91  uint256 public lastBlock */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":166:451  function limitedAction() external {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":32:61  uint256 public callsThisBlock */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":97:124  uint256 public blockCap = 5 */\n    tag_8:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":67:91  uint256 public lastBlock */\n    tag_12:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":166:451  function limitedAction() external {... */\n    tag_15:\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":230:239  lastBlock */\n      sload(0x01)\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":214:226  block.number */\n      number\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":214:239  block.number != lastBlock */\n      eq\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":210:322  if (block.number != lastBlock) {... */\n      tag_20\n      jumpi\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":267:279  block.number */\n      number\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":255:264  lastBlock */\n      0x01\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":255:279  lastBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":310:311  0 */\n      0x00\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":293:307  callsThisBlock */\n      dup1\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":293:311  callsThisBlock = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":210:322  if (block.number != lastBlock) {... */\n    tag_20:\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":356:364  blockCap */\n      sload(0x02)\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":339:353  callsThisBlock */\n      sload(0x00)\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":339:364  callsThisBlock < blockCap */\n      lt\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":331:399  require(callsThisBlock < blockCap, \"[CAC] Block call limit reached\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_22\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":409:423  callsThisBlock */\n      0x00\n      dup1\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":409:425  callsThisBlock++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":166:451  function limitedAction() external {... */\n      jump\t// out\n        /* \"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":32:61  uint256 public callsThisBlock */\n    tag_17:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_26:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_27:\n        /* \"#utility.yul\":177:201   */\n      tag_35\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_26\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_10:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_37\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:611   */\n    tag_28:\n        /* \"#utility.yul\":526:537   */\n      0x00\n        /* \"#utility.yul\":560:566   */\n      dup3\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:567   */\n      mstore\n        /* \"#utility.yul\":600:604   */\n      0x20\n        /* \"#utility.yul\":595:598   */\n      dup3\n        /* \"#utility.yul\":591:605   */\n      add\n        /* \"#utility.yul\":576:605   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":617:797   */\n    tag_29:\n        /* \"#utility.yul\":757:789   */\n      0x5b4341435d20426c6f636b2063616c6c206c696d697420726561636865640000\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":741:755   */\n      add\n        /* \"#utility.yul\":734:790   */\n      mstore\n        /* \"#utility.yul\":617:797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:1169   */\n    tag_30:\n        /* \"#utility.yul\":945:948   */\n      0x00\n        /* \"#utility.yul\":966:1033   */\n      tag_41\n        /* \"#utility.yul\":1030:1032   */\n      0x1e\n        /* \"#utility.yul\":1025:1028   */\n      dup4\n        /* \"#utility.yul\":966:1033   */\n      tag_28\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":959:1033   */\n      swap2\n      pop\n        /* \"#utility.yul\":1042:1135   */\n      tag_42\n        /* \"#utility.yul\":1131:1134   */\n      dup3\n        /* \"#utility.yul\":1042:1135   */\n      tag_29\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1155:1158   */\n      dup3\n        /* \"#utility.yul\":1151:1163   */\n      add\n        /* \"#utility.yul\":1144:1163   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:1169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1175:1594   */\n    tag_23:\n        /* \"#utility.yul\":1341:1345   */\n      0x00\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1368:1377   */\n      dup3\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"#utility.yul\":1356:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1437   */\n      dup2\n        /* \"#utility.yul\":1422:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1438   */\n      sub\n        /* \"#utility.yul\":1414:1415   */\n      0x00\n        /* \"#utility.yul\":1403:1412   */\n      dup4\n        /* \"#utility.yul\":1399:1416   */\n      add\n        /* \"#utility.yul\":1392:1439   */\n      mstore\n        /* \"#utility.yul\":1456:1587   */\n      tag_44\n        /* \"#utility.yul\":1582:1586   */\n      dup2\n        /* \"#utility.yul\":1456:1587   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1448:1587   */\n      swap1\n      pop\n        /* \"#utility.yul\":1175:1594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1600:1780   */\n    tag_31:\n        /* \"#utility.yul\":1648:1725   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1638:1726   */\n      mstore\n        /* \"#utility.yul\":1745:1749   */\n      0x11\n        /* \"#utility.yul\":1742:1743   */\n      0x04\n        /* \"#utility.yul\":1735:1750   */\n      mstore\n        /* \"#utility.yul\":1769:1773   */\n      0x24\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1759:1774   */\n      revert\n        /* \"#utility.yul\":1786:2019   */\n    tag_25:\n        /* \"#utility.yul\":1825:1828   */\n      0x00\n        /* \"#utility.yul\":1848:1872   */\n      tag_47\n        /* \"#utility.yul\":1866:1871   */\n      dup3\n        /* \"#utility.yul\":1848:1872   */\n      tag_26\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1839:1872   */\n      swap2\n      pop\n        /* \"#utility.yul\":1894:1960   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1887:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1961   */\n      sub\n        /* \"#utility.yul\":1881:1984   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1964:1982   */\n      tag_49\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1881:1984   */\n    tag_48:\n        /* \"#utility.yul\":2011:2012   */\n      0x01\n        /* \"#utility.yul\":2004:2009   */\n      dup3\n        /* \"#utility.yul\":2000:2013   */\n      add\n        /* \"#utility.yul\":1993:2013   */\n      swap1\n      pop\n        /* \"#utility.yul\":1786:2019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200afcfac2f8e8e18fa5722c96a9aa9de92b064ce58c24ac76d9a5305eac39afe164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260056002553480156013575f80fd5b5061028a806100215f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063655462161461004e578063806b984f1461006c578063e57715b61461008a578063efc0e44114610094575b5f80fd5b6100566100b2565b604051610063919061014f565b60405180910390f35b6100746100b8565b604051610081919061014f565b60405180910390f35b6100926100be565b005b61009c610132565b6040516100a9919061014f565b60405180910390f35b60025481565b60015481565b60015443146100d557436001819055505f80819055505b6002545f541061011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906101c2565b60405180910390fd5b5f8081548092919061012b9061020d565b9190505550565b5f5481565b5f819050919050565b61014981610137565b82525050565b5f6020820190506101625f830184610140565b92915050565b5f82825260208201905092915050565b7f5b4341435d20426c6f636b2063616c6c206c696d6974207265616368656400005f82015250565b5f6101ac601e83610168565b91506101b782610178565b602082019050919050565b5f6020820190508181035f8301526101d9816101a0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61021782610137565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610249576102486101e0565b5b60018201905091905056fea26469706673582212200afcfac2f8e8e18fa5722c96a9aa9de92b064ce58c24ac76d9a5305eac39afe164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A DUP1 PUSH2 0x21 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65546216 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x806B984F EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xE57715B6 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xEFC0E441 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER EQ PUSH2 0xD5 JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SLOAD LT PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12B SWAP1 PUSH2 0x20D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149 DUP2 PUSH2 0x137 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162 PUSH0 DUP4 ADD DUP5 PUSH2 0x140 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5B4341435D20426C6F636B2063616C6C206C696D697420726561636865640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC PUSH1 0x1E DUP4 PUSH2 0x168 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7 DUP3 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D9 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x217 DUP3 PUSH2 0x137 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x1E0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xFC STATICCALL 0xC2 0xF8 0xE8 0xE1 DUP16 0xA5 PUSH19 0x2C96A9AA9DE92B064CE58C24AC76D9A5305EAC CODECOPY 0xAF 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:453:0:-:0;;;123:1;97:27;;0:453;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blockCap_7": {
									"entryPoint": 178,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@callsThisBlock_2": {
									"entryPoint": 306,
									"id": 2,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastBlock_4": {
									"entryPoint": 184,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@limitedAction_36": {
									"entryPoint": 190,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2022:1",
										"nodeType": "YulBlock",
										"src": "0:2022:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "538:73:1",
													"nodeType": "YulBlock",
													"src": "538:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "560:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:1"
																},
																"nativeSrc": "548:19:1",
																"nodeType": "YulFunctionCall",
																"src": "548:19:1"
															},
															"nativeSrc": "548:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "548:19:1"
														},
														{
															"nativeSrc": "576:29:1",
															"nodeType": "YulAssignment",
															"src": "576:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "595:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "595:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "600:4:1",
																		"nodeType": "YulLiteral",
																		"src": "600:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:1"
																},
																"nativeSrc": "591:14:1",
																"nodeType": "YulFunctionCall",
																"src": "591:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "576:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "576:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "442:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "510:3:1",
														"nodeType": "YulTypedName",
														"src": "510:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "515:6:1",
														"nodeType": "YulTypedName",
														"src": "515:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "526:11:1",
														"nodeType": "YulTypedName",
														"src": "526:11:1",
														"type": ""
													}
												],
												"src": "442:169:1"
											},
											{
												"body": {
													"nativeSrc": "723:74:1",
													"nodeType": "YulBlock",
													"src": "723:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "745:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "753:1:1",
																				"nodeType": "YulLiteral",
																				"src": "753:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "741:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "741:3:1"
																		},
																		"nativeSrc": "741:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "741:14:1"
																	},
																	{
																		"hexValue": "5b4341435d20426c6f636b2063616c6c206c696d69742072656163686564",
																		"kind": "string",
																		"nativeSrc": "757:32:1",
																		"nodeType": "YulLiteral",
																		"src": "757:32:1",
																		"type": "",
																		"value": "[CAC] Block call limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "734:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:1"
																},
																"nativeSrc": "734:56:1",
																"nodeType": "YulFunctionCall",
																"src": "734:56:1"
															},
															"nativeSrc": "734:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "734:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc",
												"nativeSrc": "617:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "715:6:1",
														"nodeType": "YulTypedName",
														"src": "715:6:1",
														"type": ""
													}
												],
												"src": "617:180:1"
											},
											{
												"body": {
													"nativeSrc": "949:220:1",
													"nodeType": "YulBlock",
													"src": "949:220:1",
													"statements": [
														{
															"nativeSrc": "959:74:1",
															"nodeType": "YulAssignment",
															"src": "959:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1025:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1025:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1030:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1030:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "966:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "966:58:1"
																},
																"nativeSrc": "966:67:1",
																"nodeType": "YulFunctionCall",
																"src": "966:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "959:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1131:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1131:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc",
																	"nativeSrc": "1042:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1042:88:1"
																},
																"nativeSrc": "1042:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1042:93:1"
															},
															"nativeSrc": "1042:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1042:93:1"
														},
														{
															"nativeSrc": "1144:19:1",
															"nodeType": "YulAssignment",
															"src": "1144:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1155:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1155:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1160:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1151:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:1"
																},
																"nativeSrc": "1151:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1144:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "803:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "937:3:1",
														"nodeType": "YulTypedName",
														"src": "937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "945:3:1",
														"nodeType": "YulTypedName",
														"src": "945:3:1",
														"type": ""
													}
												],
												"src": "803:366:1"
											},
											{
												"body": {
													"nativeSrc": "1346:248:1",
													"nodeType": "YulBlock",
													"src": "1346:248:1",
													"statements": [
														{
															"nativeSrc": "1356:26:1",
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1368:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1379:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nativeSrc": "1364:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1356:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1403:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1414:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1414:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1399:3:1"
																		},
																		"nativeSrc": "1399:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1399:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1422:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1422:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:1"
																		},
																		"nativeSrc": "1418:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:1"
																},
																"nativeSrc": "1392:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1392:47:1"
															},
															"nativeSrc": "1392:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1392:47:1"
														},
														{
															"nativeSrc": "1448:139:1",
															"nodeType": "YulAssignment",
															"src": "1448:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1582:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1456:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1456:124:1"
																},
																"nativeSrc": "1456:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1456:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1448:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1448:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1175:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1326:9:1",
														"nodeType": "YulTypedName",
														"src": "1326:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1341:4:1",
														"nodeType": "YulTypedName",
														"src": "1341:4:1",
														"type": ""
													}
												],
												"src": "1175:419:1"
											},
											{
												"body": {
													"nativeSrc": "1628:152:1",
													"nodeType": "YulBlock",
													"src": "1628:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1648:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:1"
																},
																"nativeSrc": "1638:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1638:88:1"
															},
															"nativeSrc": "1638:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1638:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1742:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1742:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1745:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1745:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1735:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1735:6:1"
																},
																"nativeSrc": "1735:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1735:15:1"
															},
															"nativeSrc": "1735:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1735:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1766:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1769:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1759:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:1"
																},
																"nativeSrc": "1759:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1759:15:1"
															},
															"nativeSrc": "1759:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1759:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1600:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1600:180:1"
											},
											{
												"body": {
													"nativeSrc": "1829:190:1",
													"nodeType": "YulBlock",
													"src": "1829:190:1",
													"statements": [
														{
															"nativeSrc": "1839:33:1",
															"nodeType": "YulAssignment",
															"src": "1839:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1848:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1848:17:1"
																},
																"nativeSrc": "1848:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1848:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1839:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1839:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1962:22:1",
																"nodeType": "YulBlock",
																"src": "1962:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1964:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1964:16:1"
																			},
																			"nativeSrc": "1964:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1964:18:1"
																		},
																		"nativeSrc": "1964:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1964:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1887:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1887:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1894:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1894:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1884:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:1"
																},
																"nativeSrc": "1884:77:1",
																"nodeType": "YulFunctionCall",
																"src": "1884:77:1"
															},
															"nativeSrc": "1881:103:1",
															"nodeType": "YulIf",
															"src": "1881:103:1"
														},
														{
															"nativeSrc": "1993:20:1",
															"nodeType": "YulAssignment",
															"src": "1993:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2004:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2004:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2000:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:1"
																},
																"nativeSrc": "2000:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2000:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1993:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "1786:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1815:5:1",
														"nodeType": "YulTypedName",
														"src": "1815:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1825:3:1",
														"nodeType": "YulTypedName",
														"src": "1825:3:1",
														"type": ""
													}
												],
												"src": "1786:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"[CAC] Block call limit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063655462161461004e578063806b984f1461006c578063e57715b61461008a578063efc0e44114610094575b5f80fd5b6100566100b2565b604051610063919061014f565b60405180910390f35b6100746100b8565b604051610081919061014f565b60405180910390f35b6100926100be565b005b61009c610132565b6040516100a9919061014f565b60405180910390f35b60025481565b60015481565b60015443146100d557436001819055505f80819055505b6002545f541061011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906101c2565b60405180910390fd5b5f8081548092919061012b9061020d565b9190505550565b5f5481565b5f819050919050565b61014981610137565b82525050565b5f6020820190506101625f830184610140565b92915050565b5f82825260208201905092915050565b7f5b4341435d20426c6f636b2063616c6c206c696d6974207265616368656400005f82015250565b5f6101ac601e83610168565b91506101b782610178565b602082019050919050565b5f6020820190508181035f8301526101d9816101a0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61021782610137565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610249576102486101e0565b5b60018201905091905056fea26469706673582212200afcfac2f8e8e18fa5722c96a9aa9de92b064ce58c24ac76d9a5305eac39afe164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65546216 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x806B984F EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0xE57715B6 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xEFC0E441 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD NUMBER EQ PUSH2 0xD5 JUMPI NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SLOAD LT PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12B SWAP1 PUSH2 0x20D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149 DUP2 PUSH2 0x137 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162 PUSH0 DUP4 ADD DUP5 PUSH2 0x140 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5B4341435D20426C6F636B2063616C6C206C696D697420726561636865640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC PUSH1 0x1E DUP4 PUSH2 0x168 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7 DUP3 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D9 DUP2 PUSH2 0x1A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x217 DUP3 PUSH2 0x137 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x1E0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xFC STATICCALL 0xC2 0xF8 0xE8 0xE1 DUP16 0xA5 PUSH19 0x2C96A9AA9DE92B064CE58C24AC76D9A5305EAC CODECOPY 0xAF 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:453:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;97:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;67:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;166:285;;;:::i;:::-;;32:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;97:27;;;;:::o;67:24::-;;;;:::o;166:285::-;230:9;;214:12;:25;210:112;;267:12;255:9;:24;;;;310:1;293:14;:18;;;;210:112;356:8;;339:14;;:25;331:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;409:14;;:16;;;;;;;;;:::i;:::-;;;;;;166:285::o;32:29::-;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:169::-;526:11;560:6;555:3;548:19;600:4;595:3;591:14;576:29;;442:169;;;;:::o;617:180::-;757:32;753:1;745:6;741:14;734:56;617:180;:::o;803:366::-;945:3;966:67;1030:2;1025:3;966:67;:::i;:::-;959:74;;1042:93;1131:3;1042:93;:::i;:::-;1160:2;1155:3;1151:12;1144:19;;803:366;;;:::o;1175:419::-;1341:4;1379:2;1368:9;1364:18;1356:26;;1428:9;1422:4;1418:20;1414:1;1403:9;1399:17;1392:47;1456:131;1582:4;1456:131;:::i;:::-;1448:139;;1175:419;;;:::o;1600:180::-;1648:77;1645:1;1638:88;1745:4;1742:1;1735:15;1769:4;1766:1;1759:15;1786:233;1825:3;1848:24;1866:5;1848:24;:::i;:::-;1839:33;;1894:66;1887:5;1884:77;1881:103;;1964:18;;:::i;:::-;1881:103;2011:1;2004:5;2000:13;1993:20;;1786:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130000",
								"executionCost": "22281",
								"totalCost": "152281"
							},
							"external": {
								"blockCap()": "2403",
								"callsThisBlock()": "2468",
								"lastBlock()": "2425",
								"limitedAction()": "57989"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 123,
									"end": 124,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 97,
									"end": 124,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 97,
									"end": 124,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 453,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200afcfac2f8e8e18fa5722c96a9aa9de92b064ce58c24ac76d9a5305eac39afe164736f6c634300081a0033",
									".code": [
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "65546216"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "806B984F"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "E57715B6"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "EFC0E441"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 97,
											"end": 124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 97,
											"end": 124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 67,
											"end": 91,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 67,
											"end": 91,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 166,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 166,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 166,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 166,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 166,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 451,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32,
											"end": 61,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32,
											"end": 61,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67,
											"end": 91,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67,
											"end": 91,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 166,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 239,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 230,
											"end": 239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 226,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 214,
											"end": 239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 210,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 210,
											"end": 322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 267,
											"end": 279,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 255,
											"end": 279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 255,
											"end": 279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 293,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 311,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 322,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 210,
											"end": 322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 356,
											"end": 364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 331,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 331,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 409,
											"end": 425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 409,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 409,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 166,
											"end": 451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32,
											"end": 61,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32,
											"end": 61,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 548,
											"end": 567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 617,
											"end": 797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 757,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "5B4341435D20426C6F636B2063616C6C206C696D697420726561636865640000"
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1030,
											"end": 1032,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1025,
											"end": 1028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 966,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1131,
											"end": 1134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1042,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1456,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1780,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1600,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1725,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1742,
											"end": 1743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1786,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1848,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1872,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1848,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1961,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1881,
											"end": 1984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1964,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1984,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1881,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2004,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blockCap()": "65546216",
							"callsThisBlock()": "efc0e441",
							"lastBlock()": "806b984f",
							"limitedAction()": "e57715b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"blockCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callsThisBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitedAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":\"BlockWindowLimit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\":{\"keccak256\":\"0xa767809bef47c584ae418866446953249ca0afce6bcba606d44e06ae86f2879b\",\"urls\":[\"bzz-raw://3df530cb57611caa5beba7c19fc62108a531d47191b13a9ba36fe2d267a64f6a\",\"dweb:/ipfs/QmWGBrNYS7FBeihFCNydufg9iWwo6bdB5dDzDRNeUSTkDw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2,
								"contract": "C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol:BlockWindowLimit",
								"label": "callsThisBlock",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 4,
								"contract": "C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol:BlockWindowLimit",
								"label": "lastBlock",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol:BlockWindowLimit",
								"label": "blockCap",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol": {
				"ast": {
					"absolutePath": "C/Call Admission Control (CAC)/block time window rate limiting admit only x call per block or per time window.sol",
					"exportedSymbols": {
						"BlockWindowLimit": [
							37
						]
					},
					"id": 38,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BlockWindowLimit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "BlockWindowLimit",
							"nameLocation": "9:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "efc0e441",
									"id": 2,
									"mutability": "mutable",
									"name": "callsThisBlock",
									"nameLocation": "47:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "32:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "32:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "806b984f",
									"id": 4,
									"mutability": "mutable",
									"name": "lastBlock",
									"nameLocation": "82:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "67:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "67:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "65546216",
									"id": 7,
									"mutability": "mutable",
									"name": "blockCap",
									"nameLocation": "112:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 37,
									"src": "97:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "97:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "123:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "200:251:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 10,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "220:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "214:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 12,
														"name": "lastBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "230:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "214:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "210:112:0",
												"trueBody": {
													"id": 23,
													"nodeType": "Block",
													"src": "241:81:0",
													"statements": [
														{
															"expression": {
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 14,
																	"name": "lastBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "255:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 15,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "267:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 16,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "273:6:0",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "267:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "255:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 18,
															"nodeType": "ExpressionStatement",
															"src": "255:24:0"
														},
														{
															"expression": {
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 19,
																	"name": "callsThisBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2,
																	"src": "293:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "310:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "293:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 22,
															"nodeType": "ExpressionStatement",
															"src": "293:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 26,
																"name": "callsThisBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2,
																"src": "339:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 27,
																"name": "blockCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "356:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "339:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b4341435d20426c6f636b2063616c6c206c696d69742072656163686564",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "366:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc",
																"typeString": "literal_string \"[CAC] Block call limit reached\""
															},
															"value": "[CAC] Block call limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_206733a3d3d259c16ab9f7fe124f6ade2a433afa3f158d157361423cb229d0cc",
																"typeString": "literal_string \"[CAC] Block call limit reached\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "331:68:0"
											},
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "409:16:0",
													"subExpression": {
														"id": 32,
														"name": "callsThisBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "409:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "409:16:0"
											}
										]
									},
									"functionSelector": "e57715b6",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "limitedAction",
									"nameLocation": "175:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "200:0:0"
									},
									"scope": 37,
									"src": "166:285:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 38,
							"src": "0:453:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:454:0"
				},
				"id": 0
			}
		}
	}
}