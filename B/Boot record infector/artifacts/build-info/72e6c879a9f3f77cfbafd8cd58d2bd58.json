{
	"id": "72e6c879a9f3f77cfbafd8cd58d2bd58",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol": {
				"content": "contract MinimalProxyInfectable {\n    fallback() external {\n        // Imagine injecting assembly here pre-deployment\n        assembly {\n            sstore(0x00, caller()) // Writes to storage[0] maliciously\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol": {
				"MinimalProxyInfectable": {
					"abi": [
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":0:225  contract MinimalProxyInfectable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":0:225  contract MinimalProxyInfectable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_3\n      jumpi\n      revert(0x00, 0x00)\n    tag_3:\n      pop\n        /* \"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":162:170  caller() */\n      caller\n        /* \"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":156:160  0x00 */\n      0x00\n        /* \"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":149:171  sstore(0x00, caller()) */\n      sstore\n        /* \"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":0:225  contract MinimalProxyInfectable {... */\n      stop\n\n    auxdata: 0xa2646970667358221220140bf977a3d3615bc3eb2bbac495e738adb715766acdb3cdbd8bccb2c3800d9464736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50604a80601a5f395ff3fe6080604052348015600e575f5ffd5b50335f5500fea2646970667358221220140bf977a3d3615bc3eb2bbac495e738adb715766acdb3cdbd8bccb2c3800d9464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4A DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 SSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ SIGNEXTEND EXTDELEGATECALL PUSH24 0xA3D3615BC3EB2BBAC495E738ADB715766ACDB3CDBD8BCCB2 0xC3 DUP1 0xD SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "0:225:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50335f5500fea2646970667358221220140bf977a3d3615bc3eb2bbac495e738adb715766acdb3cdbd8bccb2c3800d9464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 SSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ SIGNEXTEND EXTDELEGATECALL PUSH24 0xA3D3615BC3EB2BBAC495E738ADB715766ACDB3CDBD8BCCB2 0xC3 DUP1 0xD SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "0:225:0:-:0;;;;;;;;;;;;;162:8;156:4;149:22;0:225"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "14800",
								"executionCost": "67",
								"totalCost": "14867"
							},
							"external": {
								"": "22146"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 225,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220140bf977a3d3615bc3eb2bbac495e738adb715766acdb3cdbd8bccb2c3800d9464736f6c634300081d0033",
									".code": [
										{
											"begin": 0,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 170,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 156,
											"end": 160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 171,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 225,
											"name": "STOP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":\"MinimalProxyInfectable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\":{\"keccak256\":\"0x1eb2384c1643a97aa4a2d8e2348a85ca86cc8530ebc951ee3a01912360bc3789\",\"urls\":[\"bzz-raw://128ef517c642c48798363ee067f1f4d12f82f15d4f0e9e71239fc00a35f50d29\",\"dweb:/ipfs/QmeRkXn6UADj5QtYAVkxHagE21NqyULGA7m7iyuqXxocAZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"\n--> B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol": {
				"ast": {
					"absolutePath": "B/Boot record infector/Pre-Deploy Bytecode Injection (Simulated) type.sol",
					"exportedSymbols": {
						"MinimalProxyInfectable": [
							6
						]
					},
					"id": 7,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MinimalProxyInfectable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "MinimalProxyInfectable",
							"nameLocation": "9:22:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "58:165:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "135:82:0",
													"nodeType": "YulBlock",
													"src": "135:82:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "156:4:0",
																		"nodeType": "YulLiteral",
																		"src": "156:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nativeSrc": "162:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "162:6:0"
																		},
																		"nativeSrc": "162:8:0",
																		"nodeType": "YulFunctionCall",
																		"src": "162:8:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "149:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "149:6:0"
																},
																"nativeSrc": "149:22:0",
																"nodeType": "YulFunctionCall",
																"src": "149:22:0"
															},
															"nativeSrc": "149:22:0",
															"nodeType": "YulExpressionStatement",
															"src": "149:22:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [],
												"id": 3,
												"nodeType": "InlineAssembly",
												"src": "126:91:0"
											}
										]
									},
									"id": 5,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46:2:0"
									},
									"returnParameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58:0:0"
									},
									"scope": 6,
									"src": "38:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 7,
							"src": "0:225:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:226:0"
				},
				"id": 0
			}
		}
	}
}