{
	"id": "456e4ffe289f2c5a29a8d073f41e26a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\ncontract zkSemaphoreRegistry {\n    mapping(uint256 => bool) public validRoots;\n\n    function registerRoot(uint256 root) external {\n        validRoots[root] = true;\n    }\n\n    function isValidRoot(uint256 root) external view returns (bool) {\n        return validRoots[root];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol": {
				"zkSemaphoreRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "root",
									"type": "uint256"
								}
							],
							"name": "isValidRoot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "root",
									"type": "uint256"
								}
							],
							"name": "registerRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "validRoots",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":58:339  contract zkSemaphoreRegistry {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":58:339  contract zkSemaphoreRegistry {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2cdabbce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x626350fb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xaa2d61db\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":233:337  function isValidRoot(uint256 root) external view returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":142:227  function registerRoot(uint256 root) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":93:135  mapping(uint256 => bool) public validRoots */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":233:337  function isValidRoot(uint256 root) external view returns (bool) {... */\n    tag_9:\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":291:295  bool */\n      0x00\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":314:324  validRoots */\n      dup1\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":314:330  validRoots[root] */\n      0x00\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":325:329  root */\n      dup4\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":314:330  validRoots[root] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":307:330  return validRoots[root] */\n      swap1\n      pop\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":233:337  function isValidRoot(uint256 root) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":142:227  function registerRoot(uint256 root) external {... */\n    tag_14:\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":216:220  true */\n      0x01\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":197:207  validRoots */\n      0x00\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":197:213  validRoots[root] */\n      dup1\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":208:212  root */\n      dup4\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":197:213  validRoots[root] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":197:220  validRoots[root] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":142:227  function registerRoot(uint256 root) external {... */\n      pop\n      jump\t// out\n        /* \"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":93:135  mapping(uint256 => bool) public validRoots */\n    tag_17:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_24:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_25:\n        /* \"#utility.yul\":490:514   */\n      tag_35\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_24\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_36:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_26:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_38\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_25\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_41\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":766:885   */\n    tag_40:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_42\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_26\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_27:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_28:\n        /* \"#utility.yul\":1202:1223   */\n      tag_45\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_27\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_11:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_47\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_28\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f4ef5cb3793a983ccef45423d06a76a09004cac25f6373ca0550d743a9711b8d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101f68061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80632cdabbce14610043578063626350fb14610073578063aa2d61db1461008f575b5f80fd5b61005d60048036038101906100589190610162565b6100bf565b60405161006a91906101a7565b60405180910390f35b61008d60048036038101906100889190610162565b6100e4565b005b6100a960048036038101906100a49190610162565b61010f565b6040516100b691906101a7565b60405180910390f35b5f805f8381526020019081526020015f205f9054906101000a900460ff169050919050565b60015f808381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b5f80fd5b5f819050919050565b6101418161012f565b811461014b575f80fd5b50565b5f8135905061015c81610138565b92915050565b5f602082840312156101775761017661012b565b5b5f6101848482850161014e565b91505092915050565b5f8115159050919050565b6101a18161018d565b82525050565b5f6020820190506101ba5f830184610198565b9291505056fea2646970667358221220f4ef5cb3793a983ccef45423d06a76a09004cac25f6373ca0550d743a9711b8d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CDABBCE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x626350FB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xAA2D61DB EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x12F JUMP JUMPDEST DUP2 EQ PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0x12B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184 DUP5 DUP3 DUP6 ADD PUSH2 0x14E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x18D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA PUSH0 DUP4 ADD DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEF TLOAD 0xB3 PUSH26 0x3A983CCEF45423D06A76A09004CAC25F6373CA0550D743A9711B DUP14 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "58:281:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isValidRoot_29": {
									"entryPoint": 191,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerRoot_17": {
									"entryPoint": 228,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@validRoots_5": {
									"entryPoint": 271,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1449:1",
										"nodeType": "YulBlock",
										"src": "0:1449:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1067:48:1",
													"nodeType": "YulBlock",
													"src": "1067:48:1",
													"statements": [
														{
															"nativeSrc": "1077:32:1",
															"nodeType": "YulAssignment",
															"src": "1077:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1102:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1095:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:1"
																		},
																		"nativeSrc": "1095:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1088:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nativeSrc": "1088:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1088:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1025:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:1",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:1",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1025:90:1"
											},
											{
												"body": {
													"nativeSrc": "1180:50:1",
													"nodeType": "YulBlock",
													"src": "1180:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1197:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1202:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:1"
																		},
																		"nativeSrc": "1202:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:1"
																},
																"nativeSrc": "1190:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1190:34:1"
															},
															"nativeSrc": "1190:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1121:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1168:5:1",
														"nodeType": "YulTypedName",
														"src": "1168:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1175:3:1",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1121:109:1"
											},
											{
												"body": {
													"nativeSrc": "1328:118:1",
													"nodeType": "YulBlock",
													"src": "1328:118:1",
													"statements": [
														{
															"nativeSrc": "1338:26:1",
															"nodeType": "YulAssignment",
															"src": "1338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1350:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1361:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1346:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																},
																"nativeSrc": "1346:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1338:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1412:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:1"
																		},
																		"nativeSrc": "1421:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1374:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:1"
																},
																"nativeSrc": "1374:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1374:65:1"
															},
															"nativeSrc": "1374:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1236:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1300:9:1",
														"nodeType": "YulTypedName",
														"src": "1300:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1312:6:1",
														"nodeType": "YulTypedName",
														"src": "1312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1323:4:1",
														"nodeType": "YulTypedName",
														"src": "1323:4:1",
														"type": ""
													}
												],
												"src": "1236:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80632cdabbce14610043578063626350fb14610073578063aa2d61db1461008f575b5f80fd5b61005d60048036038101906100589190610162565b6100bf565b60405161006a91906101a7565b60405180910390f35b61008d60048036038101906100889190610162565b6100e4565b005b6100a960048036038101906100a49190610162565b61010f565b6040516100b691906101a7565b60405180910390f35b5f805f8381526020019081526020015f205f9054906101000a900460ff169050919050565b60015f808381526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b5f80fd5b5f819050919050565b6101418161012f565b811461014b575f80fd5b50565b5f8135905061015c81610138565b92915050565b5f602082840312156101775761017661012b565b5b5f6101848482850161014e565b91505092915050565b5f8115159050919050565b6101a18161018d565b82525050565b5f6020820190506101ba5f830184610198565b9291505056fea2646970667358221220f4ef5cb3793a983ccef45423d06a76a09004cac25f6373ca0550d743a9711b8d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2CDABBCE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x626350FB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xAA2D61DB EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141 DUP2 PUSH2 0x12F JUMP JUMPDEST DUP2 EQ PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C DUP2 PUSH2 0x138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0x12B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184 DUP5 DUP3 DUP6 ADD PUSH2 0x14E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x18D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA PUSH0 DUP4 ADD DUP5 PUSH2 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xEF TLOAD 0xB3 PUSH26 0x3A983CCEF45423D06A76A09004CAC25F6373CA0550D743A9711B DUP14 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "58:281:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;142:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;93:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:104;291:4;314:10;:16;325:4;314:16;;;;;;;;;;;;;;;;;;;;;307:23;;233:104;;;:::o;142:85::-;216:4;197:10;:16;208:4;197:16;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;142:85;:::o;93:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "100400",
								"executionCost": "145",
								"totalCost": "100545"
							},
							"external": {
								"isValidRoot(uint256)": "2788",
								"registerRoot(uint256)": "24743",
								"validRoots(uint256)": "2806"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 339,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 339,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4ef5cb3793a983ccef45423d06a76a09004cac25f6373ca0550d743a9711b8d64736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "2CDABBCE"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "626350FB"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "AA2D61DB"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 142,
											"end": 227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 142,
											"end": 227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 93,
											"end": 135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 93,
											"end": 135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 314,
											"end": 330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 330,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 314,
											"end": 330,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 314,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 314,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 142,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 197,
											"end": 213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 197,
											"end": 213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 197,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 197,
											"end": 220,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 197,
											"end": 220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 93,
											"end": 135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isValidRoot(uint256)": "2cdabbce",
							"registerRoot(uint256)": "626350fb",
							"validRoots(uint256)": "aa2d61db"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"isValidRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"}],\"name\":\"registerRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validRoots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":\"zkSemaphoreRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol\":{\"keccak256\":\"0x1c494c3a0f0684d1c671072d1752fe7fc6b2d60da78119a30fc9dfeaae8fd1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ac820ee6ba6056aebc22387d34ac79e286ca1a86919c71c0d508bb718c43603\",\"dweb:/ipfs/QmR2QWojFoyGnA7TuwomzoEavT9H9h6k4wkMNJ7ADXz3FF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol:zkSemaphoreRegistry",
								"label": "validRoots",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol": {
				"ast": {
					"absolutePath": "R/Rivest-Shamir-Adleman (RSA)/zkSemaphoreRegistry.sol",
					"exportedSymbols": {
						"zkSemaphoreRegistry": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "zkSemaphoreRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "zkSemaphoreRegistry",
							"nameLocation": "67:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "aa2d61db",
									"id": 5,
									"mutability": "mutable",
									"name": "validRoots",
									"nameLocation": "125:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 30,
									"src": "93:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "101:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "93:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "112:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "187:40:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 10,
															"name": "validRoots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "197:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 12,
														"indexExpression": {
															"id": 11,
															"name": "root",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "208:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "197:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "216:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "197:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "197:23:0"
											}
										]
									},
									"functionSelector": "626350fb",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerRoot",
									"nameLocation": "151:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "172:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "164:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:14:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:0"
									},
									"scope": 30,
									"src": "142:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "297:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 24,
														"name": "validRoots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "314:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 26,
													"indexExpression": {
														"id": 25,
														"name": "root",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "325:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "314:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 23,
												"id": 27,
												"nodeType": "Return",
												"src": "307:23:0"
											}
										]
									},
									"functionSelector": "2cdabbce",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidRoot",
									"nameLocation": "242:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "262:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "254:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:14:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "291:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:6:0"
									},
									"scope": 30,
									"src": "233:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "58:281:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:308:0"
				},
				"id": 0
			}
		}
	}
}