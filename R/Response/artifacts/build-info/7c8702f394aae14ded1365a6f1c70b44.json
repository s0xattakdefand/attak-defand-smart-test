{
	"id": "7c8702f394aae14ded1365a6f1c70b44",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"R/Response/CircuitBreaker.sol": {
				"content": "contract CircuitBreaker {\n    bool public paused;\n\n    function toggle() external {\n        paused = !paused;\n    }\n\n    modifier whenActive() {\n        require(!paused, \"Paused\");\n        _;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"R/Response/CircuitBreaker.sol": {
				"CircuitBreaker": {
					"abi": [
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toggle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"R/Response/CircuitBreaker.sol\":0:199  contract CircuitBreaker {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"R/Response/CircuitBreaker.sol\":0:199  contract CircuitBreaker {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40a3d246\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"R/Response/CircuitBreaker.sol\":55:115  function toggle() external {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"R/Response/CircuitBreaker.sol\":30:48  bool public paused */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"R/Response/CircuitBreaker.sol\":55:115  function toggle() external {... */\n    tag_6:\n        /* \"R/Response/CircuitBreaker.sol\":102:108  paused */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"R/Response/CircuitBreaker.sol\":101:108  !paused */\n      iszero\n        /* \"R/Response/CircuitBreaker.sol\":92:98  paused */\n      0x00\n      dup1\n        /* \"R/Response/CircuitBreaker.sol\":92:108  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"R/Response/CircuitBreaker.sol\":55:115  function toggle() external {... */\n      jump\t// out\n        /* \"R/Response/CircuitBreaker.sol\":30:48  bool public paused */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_12:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_13:\n        /* \"#utility.yul\":184:205   */\n      tag_17\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_12\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_10:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_19\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_13\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220385ae8221d148edca241e8951ed097ede1def7d80d872d83d8e10f10b8eb002b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060f28061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c806340a3d2461460345780635c975abb14603c575b5f80fd5b603a6056565b005b6042607d565b604051604d919060a5565b60405180910390f35b5f8054906101000a900460ff16155f806101000a81548160ff021916908315150217905550565b5f8054906101000a900460ff1681565b5f8115159050919050565b609f81608d565b82525050565b5f60208201905060b65f8301846098565b9291505056fea2646970667358221220385ae8221d148edca241e8951ed097ede1def7d80d872d83d8e10f10b8eb002b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF2 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40A3D246 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH1 0x3C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x56 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x42 PUSH1 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4D SWAP2 SWAP1 PUSH1 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9F DUP2 PUSH1 0x8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB6 PUSH0 DUP4 ADD DUP5 PUSH1 0x98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE GAS 0xE8 0x22 SAR EQ DUP15 0xDC LOG2 COINBASE 0xE8 SWAP6 0x1E 0xD0 SWAP8 0xED 0xE1 0xDE 0xF7 0xD8 0xD DUP8 0x2D DUP4 0xD8 0xE1 0xF LT 0xB8 0xEB STOP 0x2B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:199:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@paused_2": {
									"entryPoint": 125,
									"id": 2,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toggle_11": {
									"entryPoint": 86,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:431:1",
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c806340a3d2461460345780635c975abb14603c575b5f80fd5b603a6056565b005b6042607d565b604051604d919060a5565b60405180910390f35b5f8054906101000a900460ff16155f806101000a81548160ff021916908315150217905550565b5f8054906101000a900460ff1681565b5f8115159050919050565b609f81608d565b82525050565b5f60208201905060b65f8301846098565b9291505056fea2646970667358221220385ae8221d148edca241e8951ed097ede1def7d80d872d83d8e10f10b8eb002b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40A3D246 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH1 0x3C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x56 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x42 PUSH1 0x7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4D SWAP2 SWAP1 PUSH1 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9F DUP2 PUSH1 0x8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB6 PUSH0 DUP4 ADD DUP5 PUSH1 0x98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE GAS 0xE8 0x22 SAR EQ DUP15 0xDC LOG2 COINBASE 0xE8 SWAP6 0x1E 0xD0 SWAP8 0xED 0xE1 0xDE 0xF7 0xD8 0xD DUP8 0x2D DUP4 0xD8 0xE1 0xF LT 0xB8 0xEB STOP 0x2B PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "0:199:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55:60;;;:::i;:::-;;30:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55:60;102:6;;;;;;;;;;101:7;92:6;;:16;;;;;;;;;;;;;;;;;;55:60::o;30:18::-;;;;;;;;;;;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48400",
								"executionCost": "97",
								"totalCost": "48497"
							},
							"external": {
								"paused()": "2463",
								"toggle()": "26522"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 199,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 199,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220385ae8221d148edca241e8951ed097ede1def7d80d872d83d8e10f10b8eb002b64736f6c634300081a0033",
									".code": [
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "40A3D246"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 115,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30,
											"end": 48,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30,
											"end": 48,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 102,
											"end": 108,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 102,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 101,
											"end": 108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 92,
											"end": 98,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 92,
											"end": 108,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 92,
											"end": 108,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55,
											"end": 115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30,
											"end": 48,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30,
											"end": 48,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"R/Response/CircuitBreaker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"paused()": "5c975abb",
							"toggle()": "40a3d246"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"R/Response/CircuitBreaker.sol\":\"CircuitBreaker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"R/Response/CircuitBreaker.sol\":{\"keccak256\":\"0x528d5dfc3bd8293b990bd0c19180442282141f7bca2b5f5b8471977487463cca\",\"urls\":[\"bzz-raw://ba71cd50313093971b0b060e439048018b99ab000d58e805fff226fcf71a9f1b\",\"dweb:/ipfs/QmRaXAJMSBTWRX5ETU6PC6itgKCSMieytBKgL2uxraCpFq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2,
								"contract": "R/Response/CircuitBreaker.sol:CircuitBreaker",
								"label": "paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> R/Response/CircuitBreaker.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "R/Response/CircuitBreaker.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"\n--> R/Response/CircuitBreaker.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.26;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "R/Response/CircuitBreaker.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"R/Response/CircuitBreaker.sol": {
				"ast": {
					"absolutePath": "R/Response/CircuitBreaker.sol",
					"exportedSymbols": {
						"CircuitBreaker": [
							22
						]
					},
					"id": 23,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CircuitBreaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "CircuitBreaker",
							"nameLocation": "9:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 2,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "42:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 22,
									"src": "30:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "30:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "82:33:0",
										"statements": [
											{
												"expression": {
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "92:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "101:7:0",
														"subExpression": {
															"id": 6,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2,
															"src": "102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "92:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 9,
												"nodeType": "ExpressionStatement",
												"src": "92:16:0"
											}
										]
									},
									"functionSelector": "40a3d246",
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toggle",
									"nameLocation": "64:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:0:0"
									},
									"scope": 22,
									"src": "55:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "143:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "161:7:0",
															"subExpression": {
																"id": 14,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2,
																"src": "162:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506175736564",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90",
																"typeString": "literal_string \"Paused\""
															},
															"value": "Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0eeb5248cf3d8cd81a5ba6d3cc6e1997df7b174eb894aac081867c1a2bc43c90",
																"typeString": "literal_string \"Paused\""
															}
														],
														"id": 13,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "153:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "153:26:0"
											},
											{
												"id": 19,
												"nodeType": "PlaceholderStatement",
												"src": "189:1:0"
											}
										]
									},
									"id": 21,
									"name": "whenActive",
									"nameLocation": "130:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:2:0"
									},
									"src": "121:76:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "0:199:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:200:0"
				},
				"id": 0
			}
		}
	}
}